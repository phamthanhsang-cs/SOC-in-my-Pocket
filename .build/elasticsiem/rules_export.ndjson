{"id":"4fd80a51-a8c6-4691-81c2-fbb426589457","updated_at":"2025-06-15T07:49:26.010Z","updated_by":"sangpt","created_at":"2025-03-25T01:42:30.172Z","created_by":"sangpt","name":"Unusual Command Execution from Web Server Parent","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Persistence","Tactic: Execution","Tactic: Command and Control","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":1,"description":"This rule detects potential command execution from a web server parent process on a Linux host. Adversaries may attempt to execute commands from a web server parent process to blend in with normal web server activity and evade detection. This behavior is commonly observed in web shell attacks where adversaries exploit web server vulnerabilities to execute arbitrary commands on the host. The detection rule identifies unusual command execution from web server parent processes, which may indicate a compromised host or an ongoing attack. ES|QL rules have limited fields available in its alert documents. Make sure to review the original documents to aid in the investigation of this alert.","risk_score":47,"severity":"medium","note":" ## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Unusual Command Execution from Web Server Parent\n\nWeb servers, such as Apache or Nginx, are crucial for hosting web applications, often running on Linux systems. Adversaries exploit vulnerabilities in these servers to execute arbitrary commands, typically through web shells, blending malicious activity with legitimate server processes. The detection rule identifies suspicious command executions originating from web server processes, focusing on unusual patterns and contexts, such as unexpected working directories or command structures, to flag potential compromises.\n\n### Possible investigation steps\n\n- Review the process.command_line field to understand the specific command executed and assess its legitimacy or potential malicious intent.\n- Examine the process.working_directory to determine if the command was executed from an unusual or suspicious directory, which could indicate a compromise.\n- Check the process.parent.executable and process.parent.name fields to identify the parent process and verify if it is a known web server or related service that could be exploited.\n- Investigate the user.name and user.id fields to confirm if the command was executed by a legitimate user or service account, or if it was potentially executed by an unauthorized user.\n- Correlate the @timestamp with other logs and events to identify any related activities or anomalies occurring around the same time, which could provide additional context or evidence of an attack.\n- Assess the agent.id to determine if the alert is isolated to a single host or if similar activities are observed across multiple hosts, indicating a broader issue.\n\n### False positive analysis\n\n- Web development or testing environments may frequently execute commands from web server processes. To handle this, exclude specific working directories like /var/www/dev or /var/www/test from the rule.\n- Automated scripts or cron jobs running under web server user accounts can trigger alerts. Identify these scripts and add exceptions for their specific command lines or user IDs.\n- Legitimate administrative tasks performed by web server administrators might appear suspicious. Document these tasks and exclude their associated command lines or parent executables.\n- Continuous integration or deployment processes that involve web server interactions can be mistaken for threats. Exclude known CI/CD tool command lines or working directories from the rule.\n- Monitoring or logging tools that interact with web server processes may generate false positives. Identify these tools and exclude their specific process names or parent executables.\n\n### Response and remediation\n\n- Isolate the affected host immediately to prevent further malicious activity and lateral movement within the network. This can be done by removing the host from the network or applying network segmentation.\n\n- Terminate any suspicious processes identified by the detection rule, especially those originating from web server parent processes executing shell commands. Use process IDs and command lines from the alert to target specific processes.\n\n- Conduct a thorough review of the web server logs and application logs to identify any unauthorized access or modifications. Look for patterns that match the command execution detected and any other anomalies.\n\n- Patch the web server and any associated applications to address known vulnerabilities that may have been exploited. Ensure that all software is up to date with the latest security patches.\n\n- Restore the affected system from a known good backup if any unauthorized changes or persistent threats are detected. Ensure that the backup is free from compromise before restoration.\n\n- Implement additional monitoring and alerting for similar activities, focusing on unusual command executions and web server behavior. Enhance logging and alerting to capture more detailed information about process executions and network connections.\n\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if the attack is part of a larger campaign. Provide them with all relevant data and findings from the initial containment and remediation steps.\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-61m","rule_id":"8a7933b4-9d0a-4c1c-bda5-e39fb045ff1d","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1505","name":"Server Software Component","reference":"https://attack.mitre.org/techniques/T1505/","subtechnique":[{"id":"T1505.003","name":"Web Shell","reference":"https://attack.mitre.org/techniques/T1505/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":[],"version":3,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"esql","language":"esql","query":"from logs-endpoint.events.process-*\n| keep @timestamp, host.os.type, event.type, event.action, process.parent.name, user.name, user.id, process.working_directory, process.name, process.command_line, process.parent.executable, agent.id, host.name\n| where @timestamp > now() - 1 hours\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and (\n  process.parent.name in (\n    \"apache\", \"nginx\", \"apache2\", \"httpd\", \"lighttpd\", \"caddy\", \"node\", \"mongrel_rails\", \"java\", \"gunicorn\",\n    \"uwsgi\", \"openresty\", \"cherokee\", \"h2o\", \"resin\", \"puma\", \"unicorn\", \"traefik\", \"tornado\", \"hypercorn\",\n    \"daphne\", \"twistd\", \"yaws\", \"webfsd\", \"httpd.worker\", \"flask\", \"rails\", \"mongrel\"\n  ) or\n  process.parent.name like \"php-*\" or\n  process.parent.name like \"python*\" or\n  process.parent.name like \"ruby*\" or\n  process.parent.name like \"perl*\" or\n  user.name in (\n    \"apache\", \"www-data\", \"httpd\", \"nginx\", \"lighttpd\", \"tomcat\", \"tomcat8\", \"tomcat9\", \"ftp\", \"ftpuser\", \"ftpd\"\n  ) or\n  user.id in (\"99\", \"33\", \"498\", \"48\") or\n  process.working_directory like \"/var/www/*\"\n) and\n  process.name in (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and process.command_line like \"* -c *\" and\n  not (\n  process.working_directory like \"/home/*\" or\n  process.working_directory like \"/\" or\n  process.working_directory like \"/vscode/vscode-server/*\" or\n  process.parent.executable like \"/vscode/vscode-server/*\" or\n  process.parent.executable == \"/usr/bin/xfce4-terminal\"\n)\n| stats cc = count(), agent_count = count_distinct(agent.id), host.name = VALUES(host.name), agent.id = VALUES(agent.id) by process.command_line, process.working_directory, process.parent.executable\n| where agent_count == 1 and cc < 5\n| sort cc asc\n| limit 100\n","actions":[]}
{"id":"7588762d-ae64-463e-b3d7-0dea73e818ae","updated_at":"2025-06-15T07:49:37.023Z","updated_by":"sangpt","created_at":"2025-03-25T01:42:30.192Z","created_by":"sangpt","name":"Unusual Process Spawned from Web Server Parent","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Persistence","Tactic: Execution","Tactic: Command and Control","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":1,"description":"This rule detects unusual processes spawned from a web server parent process by identifying low frequency counts of process spawning activity. Unusual process spawning activity may indicate an attacker attempting to establish persistence, execute malicious commands, or establish command and control channels on the host system. ES|QL rules have limited fields available in its alert documents. Make sure to review the original documents to aid in the investigation of this alert.","risk_score":47,"severity":"medium","note":" ## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Unusual Process Spawned from Web Server Parent\n\nWeb servers like Apache, Nginx, and others are crucial for hosting applications and services. Adversaries exploit these servers by spawning unauthorized processes to maintain persistence or execute malicious commands. The detection rule identifies anomalies by monitoring low-frequency process spawns from web server parents, focusing on unusual user IDs, directories, and process counts, which may indicate potential threats.\n\n### Possible investigation steps\n\n- Review the process.executable and process.command_line fields to understand the nature of the process that was spawned and assess if it aligns with expected behavior for the web server environment.\n- Examine the process.working_directory to determine if the directory is a legitimate location for web server operations or if it appears suspicious, such as being outside typical web server directories.\n- Check the user.name and user.id fields to verify if the process was executed by a legitimate web server user or if it was initiated by an unexpected or unauthorized user account.\n- Investigate the process.parent.executable to confirm whether the parent process is a known and trusted web server executable or if it has been tampered with or replaced.\n- Correlate the event with other logs or alerts from the same agent.id to identify any additional suspicious activities or patterns that may indicate a broader compromise.\n- Assess the host.os.type to ensure the alert pertains to a Linux system, as specified in the query, and verify if there are any known vulnerabilities or misconfigurations on the host that could have been exploited.\n\n### False positive analysis\n\n- Processes related to legitimate web server maintenance tasks may trigger alerts. Review scheduled tasks or cron jobs that align with the alert timing and consider excluding these specific processes if they are verified as non-threatening.\n- Development environments often spawn processes that mimic attack patterns. Identify and exclude processes originating from known development directories or executed by development user accounts.\n- Automated scripts or monitoring tools running under web server user accounts can be mistaken for malicious activity. Verify these scripts and add exceptions for their specific process names or working directories.\n- Frequent updates or deployments in web applications can lead to unusual process spawns. Document these activities and exclude related processes if they consistently match the alert criteria during known update windows.\n- Custom web server modules or plugins may execute processes that appear suspicious. Validate these modules and exclude their associated processes if they are part of normal operations.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further malicious activity and potential lateral movement.\n- Terminate any suspicious processes identified by the alert that are not part of legitimate web server operations.\n- Conduct a thorough review of the process command lines and executables flagged by the alert to identify any malicious scripts or binaries. Remove or quarantine these files as necessary.\n- Check for unauthorized changes in web server configurations or files within the working directories flagged by the alert. Restore any altered files from a known good backup.\n- Review user accounts and permissions associated with the web server processes to ensure no unauthorized accounts or privilege escalations have occurred. Reset passwords and revoke unnecessary access.\n- Monitor network traffic from the affected host for any signs of command and control communication, and block any identified malicious IP addresses or domains.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are compromised.\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-61m","rule_id":"976b2391-413f-4a94-acb4-7911f3803346","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1505","name":"Server Software Component","reference":"https://attack.mitre.org/techniques/T1505/","subtechnique":[{"id":"T1505.003","name":"Web Shell","reference":"https://attack.mitre.org/techniques/T1505/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":[],"version":3,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"esql","language":"esql","query":"from logs-endpoint.events.process-*\n| keep @timestamp, host.os.type, event.type, event.action, process.parent.name, user.name, user.id, process.working_directory, process.name, process.executable, process.command_line, process.parent.executable, agent.id, host.name\n| where @timestamp > now() - 1 hours\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and (\n  process.parent.name in (\n    \"apache\", \"nginx\", \"apache2\", \"httpd\", \"lighttpd\", \"caddy\", \"node\", \"mongrel_rails\", \"java\", \"gunicorn\",\n    \"uwsgi\", \"openresty\", \"cherokee\", \"h2o\", \"resin\", \"puma\", \"unicorn\", \"traefik\", \"tornado\", \"hypercorn\",\n    \"daphne\", \"twistd\", \"yaws\", \"webfsd\", \"httpd.worker\", \"flask\", \"rails\", \"mongrel\"\n  ) or\n  process.parent.name like \"php-*\" or\n  process.parent.name like \"python*\" or\n  process.parent.name like \"ruby*\" or\n  process.parent.name like \"perl*\" or\n  user.name in (\n    \"apache\", \"www-data\", \"httpd\", \"nginx\", \"lighttpd\", \"tomcat\", \"tomcat8\", \"tomcat9\", \"ftp\", \"ftpuser\", \"ftpd\"\n  ) or\n  user.id in (\"99\", \"33\", \"498\", \"48\") or\n  process.working_directory like \"/var/www/*\"\n) and\nnot (\n  process.working_directory like \"/home/*\" or\n  process.working_directory like \"/\" or\n  process.parent.executable like \"/vscode/vscode-server/*\"\n)\n| stats cc = count(), agent_count = count_distinct(agent.id), host.name = VALUES(host.name), agent.id = VALUES(agent.id) by process.executable, process.working_directory, process.parent.executable\n| where agent_count == 1 and cc < 5\n| sort cc asc\n| limit 100\n","actions":[]}
{"id":"aecbf04b-b8b1-4488-b3ad-81a76ff185f0","updated_at":"2025-06-15T07:42:32.527Z","updated_by":"sangpt","created_at":"2025-03-25T01:42:30.171Z","created_by":"sangpt","name":"Unusual File Creation by Web Server","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Persistence","Tactic: Execution","Tactic: Command and Control","Data Source: Elastic Defend","Rule Type: BBR"],"interval":"1h","enabled":true,"revision":1,"description":"This rule detects unusual file creations from a web server parent process. Adversaries may attempt to create files from a web server parent process to establish persistence, execute malicious scripts, or exfiltrate data. ES|QL rules have limited fields available in its alert documents. Make sure to review the original documents to aid in the investigation of this alert.","risk_score":47,"severity":"medium","building_block_type":"default","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-61m","rule_id":"894b7cc9-040b-427c-aca5-36b40d3667bf","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1505","name":"Server Software Component","reference":"https://attack.mitre.org/techniques/T1505/","subtechnique":[{"id":"T1505.003","name":"Web Shell","reference":"https://attack.mitre.org/techniques/T1505/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":[],"version":3,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"esql","language":"esql","query":"from logs-endpoint.events.file-*\n| keep @timestamp, host.os.type, event.type, event.action, user.name, user.id, process.name, process.executable, file.path, agent.id, host.name\n| where @timestamp > now() - 1 hours\n| where host.os.type == \"linux\" and event.type == \"change\" and event.action in (\"rename\", \"creation\") and (\n     user.name in (\n      \"apache\", \"www-data\", \"httpd\", \"nginx\", \"lighttpd\", \"tomcat\", \"tomcat8\", \"tomcat9\", \"ftp\", \"ftpuser\", \"ftpd\"\n     ) or\n     user.id in (\"99\", \"33\", \"498\", \"48\")\n   ) and (\n   process.name in (\n    \"apache\", \"nginx\", \"apache2\", \"httpd\", \"lighttpd\", \"caddy\", \"node\", \"mongrel_rails\", \"java\", \"gunicorn\",\n    \"uwsgi\", \"openresty\", \"cherokee\", \"h2o\", \"resin\", \"puma\", \"unicorn\", \"traefik\", \"tornado\", \"hypercorn\",\n    \"daphne\", \"twistd\", \"yaws\", \"webfsd\", \"httpd.worker\", \"flask\", \"rails\", \"mongrel\"\n  ) or\n    process.name like \"php-*\" or\n    process.name like \"python*\" or\n    process.name like \"ruby*\" or\n    process.name like \"perl*\"\n   )\n| stats cc = count(), agent_count = count_distinct(agent.id), host.name = VALUES(host.name), agent.id = VALUES(agent.id) by process.executable, file.path\n| where agent_count == 1 and cc < 5\n| sort cc asc\n| limit 100\n","actions":[]}
{"id":"fb1dff67-1920-4c2a-a281-5f20bfc3e240","updated_at":"2025-06-15T07:42:32.529Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:40.038Z","created_by":"elastic","name":"Execution of File Written or Modified by Microsoft Office","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend"],"interval":"60m","enabled":true,"revision":1,"description":"Identifies an executable created by a Microsoft Office application and subsequently executed. These processes are often launched via scripts inside documents or during exploitation of Microsoft Office applications.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Execution of File Written or Modified by Microsoft Office\n\nMicrosoft Office, a widely used suite of productivity applications, is frequently targeted by attackers due to its popularity in corporate environments. Attackers exploit its extensive capabilities, like macro scripts in Word and Excel, to gain initial access to systems. They often use Office documents as delivery mechanisms for malware or phishing attempts, taking advantage of their trusted status in professional settings.\n\nThis rule searches for executable files written by MS Office applications executed in sequence. This is most likely the result of the execution of malicious documents or exploitation for initial access or privilege escalation. This rule can also detect suspicious processes masquerading as the MS Office applications.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Retrieve MS Office documents received and opened by the user that could cause this behavior. Common locations include, but are not limited to, the Downloads and Document folders and the folder configured at the email client.\n- Determine if the collected files are malicious:\n  - Use a private sandboxed malware analysis system to perform analysis.\n    - Observe and collect information about the following activities:\n      - Attempts to contact external domains and addresses.\n      - File and registry access, modification, and creation activities.\n      - Service creation and launch activities.\n      - Scheduled task creation.\n  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.\n    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n  - If the malicious file was delivered via phishing:\n    - Block the email sender from sending future emails.\n    - Block the malicious web pages.\n    - Remove emails from the sender from mailboxes.\n    - Consider improvements to the security awareness program.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-120m","rule_id":"0d8ad79f-9025-45d8-80c1-4f0cd3c5e8e5","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1566","name":"Phishing","reference":"https://attack.mitre.org/techniques/T1566/","subtechnique":[{"id":"T1566.001","name":"Spearphishing Attachment","reference":"https://attack.mitre.org/techniques/T1566/001/"},{"id":"T1566.002","name":"Spearphishing Link","reference":"https://attack.mitre.org/techniques/T1566/002/"}]}]}],"to":"now","references":[],"version":113,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.file-*","endgame-*"],"query":"sequence with maxspan=2h\n  [file where host.os.type == \"windows\" and event.type != \"deletion\" and file.extension : \"exe\" and\n     (process.name : \"WINWORD.EXE\" or\n      process.name : \"EXCEL.EXE\" or\n      process.name : \"OUTLOOK.EXE\" or\n      process.name : \"POWERPNT.EXE\" or\n      process.name : \"eqnedt32.exe\" or\n      process.name : \"fltldr.exe\" or\n      process.name : \"MSPUB.EXE\" or\n      process.name : \"MSACCESS.EXE\")\n  ] by host.id, file.path\n  [process where host.os.type == \"windows\" and event.type == \"start\" and \n   not (process.name : \"NewOutlookInstaller.exe\" and process.code_signature.subject_name : \"Microsoft Corporation\" and process.code_signature.trusted == true) and \n   not (process.name : \"ShareFileForOutlook-v*.exe\" and process.code_signature.subject_name : \"Citrix Systems, Inc.\" and process.code_signature.trusted == true)\n  ] by host.id, process.executable\n","actions":[]}
{"id":"f5b9fffc-1919-43e7-a4e4-ef6977500606","updated_at":"2025-06-15T07:42:32.526Z","updated_by":"sangpt","created_at":"2025-03-25T01:42:29.162Z","created_by":"sangpt","name":"Potential Malware-Driven SSH Brute Force Attempt","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Impact","Tactic: Execution","Tactic: Command and Control","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":1,"description":"This detection identifies a Linux host that has potentially been infected with malware and is being used to conduct brute-force attacks against external systems over SSH (port 22 and common alternative SSH ports). The detection looks for a high volume of outbound connection attempts to non-private IP addresses from a single process. A compromised host may be part of a botnet or controlled by an attacker, attempting to gain unauthorized access to remote systems. This behavior is commonly observed in SSH brute-force campaigns where malware hijacks vulnerable machines to expand its attack surface. ES|QL rules have limited fields available in its alert documents. Make sure to review the original documents to aid in the investigation of this alert.","risk_score":47,"severity":"medium","note":" ## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Malware-Driven SSH Brute Force Attempt\n\nSSH is a protocol used to securely access remote systems. Adversaries exploit it by deploying malware on compromised Linux hosts to perform brute-force attacks, attempting unauthorized access to other systems. The detection rule identifies such abuse by monitoring high volumes of outbound SSH connection attempts from a single process to external IPs, indicating potential malware activity.\n\n### Possible investigation steps\n\n- Review the process executable identified in the alert to determine if it is a legitimate application or potentially malicious. Check for known malware signatures or unusual file paths.\n- Analyze the destination IP addresses involved in the connection attempts to identify if they are known malicious hosts or part of a larger attack infrastructure. Use threat intelligence sources to gather more information.\n- Examine the host's recent activity logs to identify any unusual behavior or signs of compromise, such as unexpected process executions or changes in system configurations.\n- Investigate the specific agent.id associated with the alert to determine if other alerts or suspicious activities have been reported from the same host, indicating a broader compromise.\n- Check for any recent changes or updates to the host's software or configurations that could have introduced vulnerabilities exploited by the malware.\n- Assess the network traffic patterns from the host to identify any other unusual outbound connections that may indicate additional malicious activity or data exfiltration attempts.\n\n### False positive analysis\n\n- High-volume legitimate SSH operations from a single process can trigger alerts. Exclude known safe processes or scripts that perform frequent SSH operations by adding them to an exception list.\n- Automated backup or synchronization tools using SSH to connect to external servers may be misidentified. Identify these tools and exclude their process names or IP addresses from the detection rule.\n- Development or testing environments where SSH connections are frequently initiated to external systems for legitimate purposes can cause false positives. Document these environments and adjust the rule to exclude their specific IP ranges or process identifiers.\n- Security scanning tools that perform SSH checks on external systems might be flagged. Ensure these tools are recognized and their activities are excluded by specifying their process names or IP addresses in the rule exceptions.\n\n### Response and remediation\n\n- Isolate the affected Linux host from the network immediately to prevent further unauthorized access attempts and potential spread of malware to other systems.\n- Terminate the suspicious process identified by the detection rule to stop ongoing brute-force attempts and reduce the risk of further compromise.\n- Conduct a thorough malware scan on the isolated host using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any malicious software.\n- Review and reset credentials for any accounts that may have been targeted or compromised during the brute-force attempts to ensure account security.\n- Apply security patches and updates to the affected host and any other vulnerable systems to mitigate known vulnerabilities that could be exploited by similar threats.\n- Monitor network traffic for any signs of continued or new suspicious activity, particularly focusing on outbound SSH connections, to detect and respond to any further attempts promptly.\n- Escalate the incident to the security operations center (SOC) or relevant security team for further investigation and to assess the potential impact on the broader network infrastructure.\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-61m","rule_id":"77122db4-5876-4127-b91b-6c179eb21f88","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0040","name":"Impact","reference":"https://attack.mitre.org/tactics/TA0040/"},"technique":[{"id":"T1496","name":"Resource Hijacking","reference":"https://attack.mitre.org/techniques/T1496/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":[],"version":3,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"esql","language":"esql","query":"from logs-endpoint.events.network-*\n| keep @timestamp, host.os.type, event.type, event.action, destination.port, process.executable, destination.ip, agent.id, host.name\n| where @timestamp > now() - 1 hours\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"connection_attempted\" and\n  destination.port in (22, 222, 2222, 10022, 2022, 2200, 62612, 8022) and not\n     CIDR_MATCH(\n       destination.ip, \"10.0.0.0/8\", \"127.0.0.0/8\", \"169.254.0.0/16\", \"172.16.0.0/12\", \"192.0.0.0/24\", \"192.0.0.0/29\", \"192.0.0.8/32\", \"192.0.0.9/32\",\n       \"192.0.0.10/32\", \"192.0.0.170/32\", \"192.0.0.171/32\", \"192.0.2.0/24\", \"192.31.196.0/24\", \"192.52.193.0/24\", \"192.168.0.0/16\", \"192.88.99.0/24\",\n       \"224.0.0.0/4\", \"100.64.0.0/10\", \"192.175.48.0/24\",\"198.18.0.0/15\", \"198.51.100.0/24\", \"203.0.113.0/24\", \"224.0.0.0/4\", \"240.0.0.0/4\", \"::1\",\n       \"FE80::/10\", \"FF00::/8\"\n     )\n| stats cc = count(), agent_count = count_distinct(agent.id), host.name = VALUES(host.name), agent.id = VALUES(agent.id) by process.executable, destination.port\n| where agent_count == 1 and cc > 15\n| sort cc asc\n| limit 100\n","actions":[]}
{"id":"6e4551bc-0436-4df6-b317-1705d2c1acb9","updated_at":"2025-06-15T07:42:32.528Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:49.300Z","created_by":"elastic","name":"Threat Intel Windows Registry Indicator Match","tags":["OS: Windows","Data Source: Elastic Endgame","Rule Type: Threat Match","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":2,"description":"This rule is triggered when a Windows registry indicator from the Threat Intel Filebeat module or integrations has a match against an event that contains registry data.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Threat Intel Windows Registry Indicator Match\n\nThreat Intel indicator match rules allow matching from a local observation, such as an endpoint event that records a file hash with an entry of a file hash stored within the Threat Intel integrations index.\n\nMatches are based on threat intelligence data that's been ingested during the last 30 days. Some integrations don't place expiration dates on their threat indicators, so we strongly recommend validating ingested threat indicators and reviewing match results. When reviewing match results, check associated activity to determine whether the event requires additional investigation.\n\nThis rule is triggered when a Windows registry indicator from the Threat Intel Filebeat module or a threat intelligence integration matches against an event that contains registry data.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Check related threat reports to gain context about the registry indicator of compromise (IoC) and to understand if it's a system-native mechanism abused for persistence, to store data, to disable security mechanisms, etc. Use this information to define the appropriate triage and respond steps.\n- Identify the process responsible for the registry operation and investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Retrieve the involved process executable and examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n- Using the data collected through the analysis, scope users targeted and other machines infected in the environment.\n\n### False Positive Analysis\n\n- Adversaries can leverage dual-use registry mechanisms that are commonly used by normal applications. These registry keys can be added into indicator lists creating the potential for false positives.\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timeline_id":"495ad7a7-316e-4544-8a0f-9c098daee76e","timeline_title":"Generic Threat Match Timeline","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-65m","rule_id":"a61809f3-fb5b-465c-8bff-23a8a068ac60","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":["https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html","https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html","https://www.elastic.co/security/tip"],"version":9,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"registry.path","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule needs threat intelligence indicators to work.\nThreat intelligence indicators can be collected using an [Elastic Agent integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#agent-ti-integration),\nthe [Threat Intel module](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#ti-mod-integration),\nor a [custom integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#custom-ti-integration).\n\nMore information can be found [here](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html).\n","type":"threat_match","language":"kuery","index":["auditbeat-*","endgame-*","filebeat-*","logs-*","winlogbeat-*"],"query":"registry.path:*\n","threat_filters":[{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.category","negate":false,"params":{"query":"threat"},"type":"phrase"},"query":{"match_phrase":{"event.category":"threat"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.kind","negate":false,"params":{"query":"enrichment"},"type":"phrase"},"query":{"match_phrase":{"event.kind":"enrichment"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.type","negate":false,"params":{"query":"indicator"},"type":"phrase"},"query":{"match_phrase":{"event.type":"indicator"}}}],"threat_query":"@timestamp >= \"now-30d/d\" and event.module:(threatintel or ti_*) and threat.indicator.registry.path:* and not labels.is_ioc_transform_source:\"true\"","threat_mapping":[{"entries":[{"field":"registry.path","type":"mapping","value":"threat.indicator.registry.path"}]}],"threat_language":"kuery","threat_index":["filebeat-*","logs-ti_*"],"threat_indicator_path":"threat.indicator","actions":[]}
{"id":"301591e5-2e52-42e6-b399-7672c1f9010b","updated_at":"2025-06-15T07:42:32.532Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:50.286Z","created_by":"elastic","name":"Threat Intel Hash Indicator Match","tags":["OS: Windows","Data Source: Elastic Endgame","Rule Type: Threat Match","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":2,"description":"This rule is triggered when a hash indicator from the Threat Intel Filebeat module or integrations has a match against an event that contains file hashes, such as antivirus alerts, process creation, library load, and file operation events.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Threat Intel Hash Indicator Match\n\nThreat Intel indicator match rules allow matching from a local observation, such as an endpoint event that records a file hash with an entry of a file hash stored within the Threat Intel integrations index.\n\nMatches are based on threat intelligence data that's been ingested during the last 30 days. Some integrations don't place expiration dates on their threat indicators, so we strongly recommend validating ingested threat indicators and reviewing match results. When reviewing match results, check associated activity to determine whether the event requires additional investigation.\n\nThis rule is triggered when a hash indicator from the Threat Intel Filebeat module or an indicator ingested from a threat intelligence integration matches against an event that contains file hashes, such as antivirus alerts, file operation events, etc.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Gain context about the field that matched the local observation. This information can be found in the `threat.indicator.matched.field` field.\n- Investigate the hash , which can be found in the `threat.indicator.matched.atomic` field:\n  - Search for the existence and reputation of the hash in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n  - Scope other potentially compromised hosts in your environment by mapping hosts with file operations involving the same hash.\n- Identify the process that created the file.\n  - Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n  - Enrich the information that you have right now by determining how the file was dropped, where it was downloaded from, etc. This can help you determine if the event is part of an ongoing campaign against the organization.\n- Retrieve the involved file and examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n- Using the data collected through the analysis, scope users targeted and other machines infected in the environment.\n\n### False Positive Analysis\n\n- Adversaries often use legitimate tools as network administrators, such as `PsExec` or `AdFind`. These tools are often included in indicator lists, which creates the potential for false positives.\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timeline_id":"495ad7a7-316e-4544-8a0f-9c098daee76e","timeline_title":"Generic Threat Match Timeline","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-65m","rule_id":"aab184d3-72b3-4639-b242-6597c99d8bca","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":["https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html","https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html","https://www.elastic.co/security/tip"],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"dll.hash.*","type":"unknown","ecs":false},{"name":"file.hash.*","type":"unknown","ecs":false},{"name":"process.hash.*","type":"unknown","ecs":false}],"setup":"## Setup\n\nThis rule needs threat intelligence indicators to work.\nThreat intelligence indicators can be collected using an [Elastic Agent integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#agent-ti-integration),\nthe [Threat Intel module](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#ti-mod-integration),\nor a [custom integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#custom-ti-integration).\n\nMore information can be found [here](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html).\n","type":"threat_match","language":"kuery","index":["auditbeat-*","endgame-*","filebeat-*","logs-*","winlogbeat-*"],"query":"file.hash.*:* or process.hash.*:* or dll.hash.*:*\n","threat_filters":[{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.category","negate":false,"params":{"query":"threat"},"type":"phrase"},"query":{"match_phrase":{"event.category":"threat"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.kind","negate":false,"params":{"query":"enrichment"},"type":"phrase"},"query":{"match_phrase":{"event.kind":"enrichment"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.type","negate":false,"params":{"query":"indicator"},"type":"phrase"},"query":{"match_phrase":{"event.type":"indicator"}}}],"threat_query":"@timestamp >= \"now-30d/d\" and event.module:(threatintel or ti_*) and (threat.indicator.file.hash.*:* or threat.indicator.file.pe.imphash:*) and not labels.is_ioc_transform_source:\"true\"","threat_mapping":[{"entries":[{"field":"file.hash.md5","type":"mapping","value":"threat.indicator.file.hash.md5"}]},{"entries":[{"field":"file.hash.sha1","type":"mapping","value":"threat.indicator.file.hash.sha1"}]},{"entries":[{"field":"file.hash.sha256","type":"mapping","value":"threat.indicator.file.hash.sha256"}]},{"entries":[{"field":"dll.hash.md5","type":"mapping","value":"threat.indicator.file.hash.md5"}]},{"entries":[{"field":"dll.hash.sha1","type":"mapping","value":"threat.indicator.file.hash.sha1"}]},{"entries":[{"field":"dll.hash.sha256","type":"mapping","value":"threat.indicator.file.hash.sha256"}]},{"entries":[{"field":"process.hash.md5","type":"mapping","value":"threat.indicator.file.hash.md5"}]},{"entries":[{"field":"process.hash.sha1","type":"mapping","value":"threat.indicator.file.hash.sha1"}]},{"entries":[{"field":"process.hash.sha256","type":"mapping","value":"threat.indicator.file.hash.sha256"}]}],"threat_language":"kuery","threat_index":["filebeat-*","logs-ti_*"],"threat_indicator_path":"threat.indicator","actions":[]}
{"id":"a829abac-a341-4609-a258-79afd76432b3","updated_at":"2025-06-15T07:42:32.524Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.621Z","created_by":"elastic","name":"Execution of File Written or Modified by PDF Reader","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon"],"interval":"60m","enabled":true,"revision":1,"description":"Identifies a suspicious file that was written by a PDF reader application and subsequently executed. These processes are often launched via exploitation of PDF applications.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Execution of File Written or Modified by PDF Reader\n\nPDF is a common file type used in corporate environments and most machines have software to handle these files. This creates a vector where attackers can exploit the engines and technology behind this class of software for initial access or privilege escalation.\n\nThis rule searches for executable files written by PDF reader software and executed in sequence. This is most likely the result of exploitation for privilege escalation or initial access. This rule can also detect suspicious processes masquerading as PDF readers.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Retrieve the PDF documents received and opened by the user that could cause this behavior. Common locations include, but are not limited to, the Downloads and Document folders and the folder configured at the email client.\n- Determine if the collected files are malicious:\n  - Use a private sandboxed malware analysis system to perform analysis.\n    - Observe and collect information about the following activities:\n      - Attempts to contact external domains and addresses.\n      - File and registry access, modification, and creation activities.\n      - Service creation and launch activities.\n      - Scheduled task creation.\n  - Use the PowerShell `Get-FileHash` cmdlet to get the files' SHA-256 hash values.\n    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n  - If the malicious file was delivered via phishing:\n    - Block the email sender from sending future emails.\n    - Block the malicious web pages.\n    - Remove emails from the sender from mailboxes.\n    - Consider improvements to the security awareness program.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-120m","rule_id":"1defdd62-cd8d-426e-a246-81a37751bb2b","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1566","name":"Phishing","reference":"https://attack.mitre.org/techniques/T1566/","subtechnique":[{"id":"T1566.001","name":"Spearphishing Attachment","reference":"https://attack.mitre.org/techniques/T1566/001/"},{"id":"T1566.002","name":"Spearphishing Link","reference":"https://attack.mitre.org/techniques/T1566/002/"}]}]}],"to":"now","references":[],"version":210,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.file-*","winlogbeat-*","logs-windows.sysmon_operational-*","endgame-*"],"query":"sequence with maxspan=2h\n  [file where host.os.type == \"windows\" and event.type != \"deletion\" and file.extension : \"exe\" and\n     (process.name : \"AcroRd32.exe\" or\n      process.name : \"rdrcef.exe\" or\n      process.name : \"FoxitPhantomPDF.exe\" or\n      process.name : \"FoxitReader.exe\") and\n     not (file.name : \"FoxitPhantomPDF.exe\" or\n          file.name : \"FoxitPhantomPDFUpdater.exe\" or\n          file.name : \"FoxitReader.exe\" or\n          file.name : \"FoxitReaderUpdater.exe\" or\n          file.name : \"AcroRd32.exe\" or\n          file.name : \"rdrcef.exe\")\n  ] by host.id, file.path\n  [process where host.os.type == \"windows\" and event.type == \"start\"] by host.id, process.executable\n","actions":[]}
{"id":"577dcd1a-ee63-4f6e-b032-4cb84b0cb48a","updated_at":"2025-06-15T07:42:32.531Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:54.422Z","created_by":"elastic","name":"Threat Intel URL Indicator Match","tags":["OS: Windows","Data Source: Elastic Endgame","Rule Type: Threat Match","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":2,"description":"This rule is triggered when a URL indicator from the Threat Intel Filebeat module or integrations has a match against an event that contains URL data, like DNS events, network logs, etc.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Threat Intel URL Indicator Match\n\nThreat Intel indicator match rules allow matching from a local observation, such as an endpoint event that records a file hash with an entry of a file hash stored within the Threat Intel integrations index.\n\nMatches are based on threat intelligence data that's been ingested during the last 30 days. Some integrations don't place expiration dates on their threat indicators, so we strongly recommend validating ingested threat indicators and reviewing match results. When reviewing match results, check associated activity to determine whether the event requires additional investigation.\n\nThis rule is triggered when a URL indicator from the Threat Intel Filebeat module or a threat intelligence integration matches against an event that contains URL data, like DNS events, network logs, etc.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the URL, which can be found in the `threat.indicator.matched.atomic` field:\n  - Identify the type of malicious activity related to the URL (phishing, malware, etc.).\n  - Check the reputation of the IP address in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n  - Execute a WHOIS lookup to retrieve information about the domain registration and contacts to report abuse.\n  - If dealing with a phishing incident:\n    - Contact the user to gain more information around the delivery method, information sent, etc.\n    - Analyze whether the URL is trying to impersonate a legitimate address. Look for typosquatting, extra or unusual subdomains, or other anomalies that could lure the user.\n    - Investigate the phishing page to identify which information may have been sent to the attacker by the user.\n- Identify the process responsible for the connection, and investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Retrieve the involved process executable and examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n- Using the data collected through the analysis, scope users targeted and other machines infected in the environment.\n\n### False Positive Analysis\n\n- False positives might occur after large and publicly written campaigns if curious employees interact with attacker infrastructure.\n- Some feeds may include internal or known benign addresses by mistake (e.g., 8.8.8.8, google.com, 127.0.0.1, etc.). Make sure you understand how blocking a specific domain or address might impact the organization or normal system functioning.\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Consider reporting the address for abuse using the provided contact information.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timeline_id":"495ad7a7-316e-4544-8a0f-9c098daee76e","timeline_title":"Generic Threat Match Timeline","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-65m","rule_id":"f3e22c8b-ea47-45d1-b502-b57b6de950b3","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":["https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html","https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html","https://www.elastic.co/security/tip"],"version":9,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"url.full","type":"wildcard","ecs":true}],"setup":"## Setup\n\nThis rule needs threat intelligence indicators to work.\nThreat intelligence indicators can be collected using an [Elastic Agent integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#agent-ti-integration),\nthe [Threat Intel module](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#ti-mod-integration),\nor a [custom integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#custom-ti-integration).\n\nMore information can be found [here](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html).\n","type":"threat_match","language":"kuery","index":["auditbeat-*","endgame-*","filebeat-*","logs-*","packetbeat-*","winlogbeat-*"],"query":"url.full:*\n","threat_filters":[{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.category","negate":false,"params":{"query":"threat"},"type":"phrase"},"query":{"match_phrase":{"event.category":"threat"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.kind","negate":false,"params":{"query":"enrichment"},"type":"phrase"},"query":{"match_phrase":{"event.kind":"enrichment"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.type","negate":false,"params":{"query":"indicator"},"type":"phrase"},"query":{"match_phrase":{"event.type":"indicator"}}}],"threat_query":"@timestamp >= \"now-30d/d\" and event.module:(threatintel or ti_*) and threat.indicator.url.full:* and not labels.is_ioc_transform_source:\"true\"","threat_mapping":[{"entries":[{"field":"url.full","type":"mapping","value":"threat.indicator.url.full"}]},{"entries":[{"field":"url.original","type":"mapping","value":"threat.indicator.url.original"}]}],"threat_language":"kuery","threat_index":["filebeat-*","logs-ti_*"],"threat_indicator_path":"threat.indicator","actions":[]}
{"id":"8f3c5b78-594c-4f58-96e6-bc41962a1b1e","updated_at":"2025-06-15T07:42:32.533Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:40.027Z","created_by":"elastic","name":"Threat Intel IP Address Indicator Match","tags":["OS: Windows","Data Source: Elastic Endgame","Rule Type: Threat Match","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":2,"description":"This rule is triggered when an IP address indicator from the Threat Intel Filebeat module or integrations has a match against a network event.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Threat Intel IP Address Indicator Match\n\nThreat Intel indicator match rules allow matching from a local observation, such as an endpoint event that records a file hash with an entry of a file hash stored within the Threat Intel integrations index.\n\nMatches are based on threat intelligence data that's been ingested during the last 30 days. Some integrations don't place expiration dates on their threat indicators, so we strongly recommend validating ingested threat indicators and reviewing match results. When reviewing match results, check associated activity to determine whether the event requires additional investigation.\n\nThis rule is triggered when an IP address indicator from the Threat Intel Filebeat module or a threat intelligence integration matches against a network event.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Gain context about the field that matched the local observation so you can understand the nature of the connection. This information can be found in the `threat.indicator.matched.field` field.\n- Investigate the IP address, which can be found in the `threat.indicator.matched.atomic` field:\n  - Check the reputation of the IP address in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n  - Execute a reverse DNS lookup to retrieve hostnames associated with the given IP address.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- Identify the process responsible for the connection, and investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Retrieve the involved process executable and examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n- Using the data collected through the analysis, scope users targeted and other machines infected in the environment.\n\n### False Positive Analysis\n\n- When a match is found, it's important to consider the indicator's initial release date. Threat intelligence is useful for augmenting existing security processes but can quickly become outdated. In other words, some threat intelligence only represents a specific set of activity observed at a specific time. For example, an IP address may have hosted malware observed in a Dridex campaign months ago, but it's possible that IP has been remediated and no longer represents any threat.\n- False positives might occur after large and publicly written campaigns if curious employees interact with attacker infrastructure.\n- Some feeds may include internal or known benign addresses by mistake (e.g., 8.8.8.8, google.com, 127.0.0.1, etc.). Make sure you understand how blocking a specific domain or address might impact the organization or normal system functioning.\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timeline_id":"495ad7a7-316e-4544-8a0f-9c098daee76e","timeline_title":"Generic Threat Match Timeline","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-65m","rule_id":"0c41e478-5263-4c69-8f9e-7dfd2c22da64","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":["https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html","https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html","https://www.elastic.co/security/tip"],"version":9,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"source.ip","type":"ip","ecs":true}],"setup":"## Setup\n\nThis rule needs threat intelligence indicators to work.\nThreat intelligence indicators can be collected using an [Elastic Agent integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#agent-ti-integration),\nthe [Threat Intel module](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#ti-mod-integration),\nor a [custom integration](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html#custom-ti-integration).\n\nMore information can be found [here](https://www.elastic.co/guide/en/security/current/es-threat-intel-integrations.html).\n","type":"threat_match","language":"kuery","index":["auditbeat-*","endgame-*","filebeat-*","logs-*","packetbeat-*","winlogbeat-*"],"query":"source.ip:* or destination.ip:*\n","threat_filters":[{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.category","negate":false,"params":{"query":"threat"},"type":"phrase"},"query":{"match_phrase":{"event.category":"threat"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.kind","negate":false,"params":{"query":"enrichment"},"type":"phrase"},"query":{"match_phrase":{"event.kind":"enrichment"}}},{"$state":{"store":"appState"},"meta":{"disabled":false,"key":"event.type","negate":false,"params":{"query":"indicator"},"type":"phrase"},"query":{"match_phrase":{"event.type":"indicator"}}}],"threat_query":"@timestamp >= \"now-30d/d\" and event.module:(threatintel or ti_*) and threat.indicator.ip:* and not labels.is_ioc_transform_source:\"true\"","threat_mapping":[{"entries":[{"field":"source.ip","type":"mapping","value":"threat.indicator.ip"}]},{"entries":[{"field":"destination.ip","type":"mapping","value":"threat.indicator.ip"}]}],"threat_language":"kuery","threat_index":["filebeat-*","logs-ti_*"],"threat_indicator_path":"threat.indicator","actions":[]}
{"id":"239b4f39-1094-49d5-bd32-041bef616b0f","updated_at":"2025-06-15T08:14:23.280Z","updated_by":"sangpt","created_at":"2025-03-25T01:42:28.854Z","created_by":"sangpt","name":"Potential Port Scanning Activity from Compromised Host","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Discovery","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"1h","enabled":true,"revision":1,"description":"This rule detects potential port scanning activity from a compromised host. Port scanning is a common reconnaissance technique used by attackers to identify open ports and services on a target system. A compromised host may exhibit port scanning behavior when an attacker is attempting to map out the network topology, identify vulnerable services, or prepare for further exploitation. This rule identifies potential port scanning activity by monitoring network connection attempts from a single host to a large number of ports within a short time frame. ES|QL rules have limited fields available in its alert documents. Make sure to review the original documents to aid in the investigation of this alert.","risk_score":21,"severity":"low","note":" ## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Port Scanning Activity from Compromised Host\n\nPort scanning is a reconnaissance method used by attackers to identify open ports and services on a network, often as a precursor to exploitation. In Linux environments, compromised hosts may perform rapid connection attempts to numerous ports, signaling potential scanning activity. The detection rule identifies such behavior by analyzing network logs for a high number of distinct port connections from a single host within a short timeframe, indicating possible malicious intent.\n\n### Possible investigation steps\n\n- Review the network logs to identify the specific host exhibiting the port scanning behavior by examining the destination.ip and process.executable fields.\n- Analyze the @timestamp field to determine the exact time frame of the scanning activity and correlate it with any other suspicious activities or alerts from the same host.\n- Investigate the process.executable field to understand which application or service initiated the connection attempts, and verify if it is a legitimate process or potentially malicious.\n- Check the destination.port field to identify the range and types of ports targeted by the scanning activity, which may provide insights into the attacker's objectives or the services they are interested in.\n- Assess the host's security posture by reviewing recent changes, installed software, and user activity to determine if the host has been compromised or if the scanning is part of legitimate network operations.\n- Consult the original documents and logs for additional context and details that may not be captured in the alert to aid in a comprehensive investigation.\n\n### False positive analysis\n\n- Legitimate network scanning tools used by system administrators for network maintenance or security assessments can trigger this rule. To handle this, identify and whitelist the IP addresses or processes associated with these tools.\n- Automated vulnerability scanners or monitoring systems that perform regular checks on network services may cause false positives. Exclude these systems by creating exceptions for their known IP addresses or process names.\n- High-volume legitimate services that open multiple connections to different ports, such as load balancers or proxy servers, might be flagged. Review and exclude these services by specifying their IP addresses or process executables.\n- Development or testing environments where frequent port scanning is part of routine operations can be mistakenly identified. Implement exceptions for these environments by excluding their specific network segments or host identifiers.\n- Scheduled network discovery tasks that are part of IT operations can mimic port scanning behavior. Document and exclude these tasks by setting up time-based exceptions or identifying their unique process signatures.\n\n### Response and remediation\n\n- Isolate the compromised host from the network immediately to prevent further scanning and potential lateral movement.\n- Terminate any suspicious processes identified by the process.executable field to halt ongoing malicious activities.\n- Conduct a thorough review of the compromised host's system logs and network traffic to identify any unauthorized access or data exfiltration attempts.\n- Patch and update all software and services on the compromised host to close any vulnerabilities that may have been exploited.\n- Change all credentials associated with the compromised host and any potentially affected systems to prevent unauthorized access.\n- Monitor the network for any further signs of scanning activity or other suspicious behavior from other hosts, indicating potential additional compromises.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems are affected.\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-61m","rule_id":"6b341d03-1d63-41ac-841a-2009c86959ca","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0007","name":"Discovery","reference":"https://attack.mitre.org/tactics/TA0007/"},"technique":[{"id":"T1046","name":"Network Service Discovery","reference":"https://attack.mitre.org/techniques/T1046/"}]}],"to":"now","references":[],"version":3,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"esql","language":"esql","query":"from logs-endpoint.events.network-*\n| keep @timestamp, host.os.type, event.type, event.action, destination.port, process.executable, destination.ip, agent.id, host.name\n| where @timestamp > now() - 1 hours\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"connection_attempted\"\n| stats cc = count(), port_count = count_distinct(destination.port), agent_count = count_distinct(agent.id), host.name = VALUES(host.name), agent.id = VALUES(agent.id) by process.executable, destination.ip\n| where agent_count == 1 and port_count > 100\n| sort cc asc\n| limit 100\n","actions":[]}
{"id":"e75bdb39-4c34-477d-83ac-a9a6ee4692de","updated_at":"2025-06-15T08:15:04.299Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:48.234Z","created_by":"elastic","name":"Potential Outgoing RDP Connection by Unusual Process","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Data Source: Elastic Defend","Rule Type: BBR"],"interval":"60m","enabled":true,"revision":1,"description":"Adversaries may attempt to connect to a remote system over Windows Remote Desktop Protocol (RDP) to achieve lateral movement. Adversaries may avoid using the Microsoft Terminal Services Client (mstsc.exe) binary to establish an RDP connection to evade detection.","risk_score":21,"severity":"low","building_block_type":"default","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-119m","rule_id":"8e39f54e-910b-4adb-a87e-494fbba5fb65","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.001","name":"Remote Desktop Protocol","reference":"https://attack.mitre.org/techniques/T1021/001/"}]}]}],"to":"now","references":[],"version":6,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.network-*"],"query":"network where host.os.type == \"windows\" and\n  event.action == \"connection_attempted\" and destination.port == 3389 and\n  destination.ip != \"::1\" and destination.ip != \"127.0.0.1\" and\n  not (\n    process.executable : (\n      \"?:\\\\Windows\\\\System32\\\\mstsc.exe\",\n      \"?:\\\\Program Files (x86)\\\\mRemoteNG\\\\mRemoteNG.exe\",\n      \"?:\\\\Program Files (x86)\\\\PRTG Network Monitor\\\\PRTG Probe.exe\",\n      \"?:\\\\Program Files\\\\Azure Advanced Threat Protection Sensor\\\\*\\\\Microsoft.Tri.Sensor.exe\",\n      \"?:\\\\Program Files (x86)\\\\Microsoft\\\\Remote Desktop Connection Manager\\\\RDCMan.exe\",\n      \"?:\\\\Program Files\\\\SentinelOne\\\\Sentinel Agent*\\\\Ranger\\\\SentinelRanger.exe\",\n      \"?:\\\\Program Files\\\\Devolutions\\\\Remote Desktop Manager\\\\RemoteDesktopManager.exe\",\n      \"?:\\\\Program Files (x86)\\\\Devolutions\\\\Remote Desktop Manager\\\\RemoteDesktopManager.exe\"\n    ) and process.code_signature.trusted == true\n  )\n","actions":[]}
{"id":"54ec9530-2194-44b0-afd0-fdeed9f5cc8d","updated_at":"2025-06-15T07:51:17.128Z","updated_by":"sangpt","created_at":"2025-03-25T01:42:28.386Z","created_by":"sangpt","name":"Systemd Shell Execution During Boot","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Persistence","Tactic: Privilege Escalation","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":1,"description":"This rule detects the execution of shell commands by systemd during the boot process on Linux systems. Systemd is a system and service manager for Linux operating systems. Attackers may execute shell commands during the boot process to maintain persistence on the system. This may be a sign of malicious systemd services, initramfs or GRUB bootloader manipulation, or other persistence mechanisms.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Systemd Shell Execution During Boot\n\nSystemd is a critical component in Linux, managing system and service initialization during boot. Adversaries may exploit systemd to execute shell commands at startup, ensuring persistence and potential privilege escalation. The detection rule identifies suspicious shell executions by monitoring processes initiated by systemd, focusing on those with specific characteristics indicative of unauthorized activity.\n\n### Possible investigation steps\n\n- Review the process details to confirm the parent process is indeed systemd and the command line used is \"/sbin/init\" to ensure the alert is not a false positive.\n- Examine the specific shell process name (e.g., bash, sh, etc.) and its arguments to identify any unusual or suspicious commands being executed.\n- Investigate the history and configuration of the systemd service or unit file associated with the suspicious process to determine if it has been modified or created recently.\n- Check for any recent changes or anomalies in the initramfs or GRUB bootloader configurations that could indicate tampering or unauthorized modifications.\n- Correlate the alert with other security events or logs from the same host to identify any patterns or additional indicators of compromise that might suggest a broader attack or persistence mechanism.\n\n### False positive analysis\n\n- Legitimate system maintenance scripts may trigger this rule if they are executed by systemd during boot. Users can create exceptions for known maintenance scripts by identifying their specific command lines and excluding them from the detection rule.\n- Custom user scripts that are intentionally set to run at boot for automation purposes might be flagged. To handle this, users should document these scripts and adjust the rule to exclude their specific process names or command lines.\n- Some Linux distributions may use shell scripts for legitimate boot-time operations. Users should verify the distribution's default boot scripts and exclude them if they are known to be safe and necessary for system operation.\n- System updates or package installations that modify boot processes could cause false positives. Users should monitor for these events and temporarily adjust the rule to prevent unnecessary alerts during known update windows.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious shell processes identified as being executed by systemd during boot to halt potential malicious activity.\n- Conduct a thorough review of systemd service files and configurations to identify and remove any unauthorized or malicious entries.\n- Restore any modified system files or configurations from a known good backup to ensure system integrity.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring on the affected system and similar environments to detect any recurrence of the threat.\n- Review and update access controls and permissions to limit the ability of unauthorized users to modify systemd configurations or execute shell commands during boot.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"0b76ad27-c3f3-4769-9e7e-3237137fdf06","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1543","name":"Create or Modify System Process","reference":"https://attack.mitre.org/techniques/T1543/","subtechnique":[{"id":"T1543.002","name":"Systemd Service","reference":"https://attack.mitre.org/techniques/T1543/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1543","name":"Create or Modify System Process","reference":"https://attack.mitre.org/techniques/T1543/","subtechnique":[{"id":"T1543.002","name":"Systemd Service","reference":"https://attack.mitre.org/techniques/T1543/002/"}]}]}],"to":"now","references":[],"version":4,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args_count","type":"long","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.command_line","type":"wildcard","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"process where host.os.type == \"linux\" and event.type == \"info\" and event.action == \"already_running\" and\nprocess.parent.name == \"systemd\" and process.name in (\"bash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and\nprocess.parent.command_line == \"/sbin/init\" and process.args_count >= 2\n","actions":[]}
{"id":"a8888e81-ac1f-42ef-8c84-511bba3fd20a","updated_at":"2025-06-15T07:42:35.553Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:55.357Z","created_by":"elastic","name":"Printer User (lp) Shell Execution","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Use Case: Vulnerability","Tactic: Execution","Data Source: Elastic Defend","Data Source: Elastic Endgame","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This detection rule addresses multiple vulnerabilities in the CUPS printing system, including CVE-2024-47176, CVE-2024-47076, CVE-2024-47175, and CVE-2024-47177. Specifically, this rule detects shell executions from the foomatic-rip parent process through the default printer user (lp). These flaws impact components like cups-browsed, libcupsfilters, libppd, and foomatic-rip, allowing remote unauthenticated attackers to manipulate IPP URLs or inject malicious data through crafted UDP packets or network spoofing. This can result in arbitrary command execution when a print job is initiated.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Printer User (lp) Shell Execution\n\nThis rule identifies potential exploitation attempts of several vulnerabilities in the CUPS printing system (CVE-2024-47176, CVE-2024-47076, CVE-2024-47175, CVE-2024-47177). These vulnerabilities allow attackers to send crafted IPP requests or manipulate UDP packets to execute arbitrary commands or modify printer configurations. Attackers can exploit these flaws to inject malicious data, leading to Remote Code Execution (RCE) on affected systems.\n\n#### Possible Investigation Steps\n\n- Investigate the incoming IPP requests or UDP packets targeting port 631.\n- Examine the printer configurations on the system to determine if any unauthorized printers or URLs have been added.\n- Investigate the process tree to check if any unexpected processes were triggered as a result of IPP activity. Review the executable files for legitimacy.\n- Check for additional alerts related to the compromised system or user within the last 48 hours.\n- Investigate network traffic logs for suspicious outbound connections to unrecognized domains or IP addresses.\n- Check if any of the contacted domains or addresses are newly registered or have a suspicious reputation.\n- Retrieve any scripts or executables dropped by the attack for further analysis in a private sandbox environment:\n- Analyze potential malicious activity, including:\n  - Attempts to communicate with external servers.\n  - File access or creation of unauthorized executables.\n  - Cron jobs, services, or other persistence mechanisms.\n\n### Related Rules\n- Cupsd or Foomatic-rip Shell Execution - 476267ff-e44f-476e-99c1-04c78cb3769d\n- Network Connection by Cups or Foomatic-rip Child - e80ee207-9505-49ab-8ca8-bc57d80e2cab\n- File Creation by Cups or Foomatic-rip Child - b9b14be7-b7f4-4367-9934-81f07d2f63c4\n- Suspicious Execution from Foomatic-rip or Cupsd Parent - 986361cd-3dac-47fe-afa1-5c5dd89f2fb4\n\n### False Positive Analysis\n\n- This activity is rarely legitimate. However, verify the context to rule out non-malicious printer configuration changes or legitimate IPP requests.\n\n### Response and Remediation\n\n- Initiate the incident response process based on the triage outcome.\n- Isolate the compromised host to prevent further exploitation.\n- If the investigation confirms malicious activity, search the environment for additional compromised hosts.\n- Implement network segmentation or restrictions to contain the attack.\n- Stop suspicious processes or services tied to CUPS exploitation.\n- Block identified Indicators of Compromise (IoCs), including IP addresses, domains, or hashes of involved files.\n- Review compromised systems for backdoors, such as reverse shells or persistence mechanisms like cron jobs.\n- Investigate potential credential exposure on compromised systems and reset passwords for any affected accounts.\n- Restore the original printer configurations or uninstall unauthorized printer entries.\n- Perform a thorough antimalware scan to identify any lingering threats or artifacts from the attack.\n- Investigate how the attacker gained initial access and address any weaknesses to prevent future exploitation.\n- Use insights from the incident to improve detection and response times in future incidents (MTTD and MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"f86cd31c-5c7e-4481-99d7-6875a3e31309","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1203","name":"Exploitation for Client Execution","reference":"https://attack.mitre.org/techniques/T1203/"}]}],"to":"now","references":["https://www.elastic.co/security-labs/cups-overflow","https://www.evilsocket.net/2024/09/26/Attacking-UNIX-systems-via-CUPS-Part-I/","https://gist.github.com/stong/c8847ef27910ae344a7b5408d9840ee1","https://github.com/RickdeJager/cupshax/blob/main/cupshax.py"],"version":7,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"user.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["endgame-*","logs-endpoint.events.process*"],"query":"process where host.os.type == \"linux\" and event.type == \"start\" and\n  event.action in (\"exec\", \"exec_event\") and user.name == \"lp\" and\n  process.parent.name in (\"cupsd\", \"foomatic-rip\", \"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and\n  process.name in (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and not (\n    process.command_line like (\n      \"*/tmp/foomatic-*\", \"*-sDEVICE=ps2write*\", \"*printf*\", \"/bin/sh -e -c cat\", \"/bin/bash -c cat\",\n      \"/bin/bash -e -c cat\"\n    ) or\n    process.args like \"gs*\"\n  )\n","actions":[]}
{"id":"131ddb0b-3f9e-4aac-a259-9b73e07beedb","updated_at":"2025-06-15T07:42:45.621Z","updated_by":"sangpt","created_at":"2025-06-15T07:42:45.621Z","created_by":"sangpt","name":"SystemKey Access via Command Line","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":0,"description":"Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos. Adversaries may collect the keychain storage data from a system to acquire credentials.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating SystemKey Access via Command Line\n\nmacOS keychains securely store user credentials, including passwords and certificates. Adversaries may exploit command-line access to extract keychain data, gaining unauthorized credentials. The detection rule identifies suspicious process activities targeting SystemKey paths, excluding legitimate security processes, to flag potential credential theft attempts.\n\n### Possible investigation steps\n\n- Review the process details to identify the executable that attempted to access the SystemKey paths, focusing on the process.args field to confirm the presence of \"/private/var/db/SystemKey\" or \"/var/db/SystemKey\".\n- Investigate the parent process using process.Ext.effective_parent.executable to determine if the process chain is suspicious or if it might be a legitimate process that was not excluded by the rule.\n- Check the timestamp of the event to correlate with other system activities or user actions that might explain the access attempt.\n- Analyze the user account associated with the process to determine if it aligns with expected behavior or if it might indicate a compromised account.\n- Review recent system logs and security alerts for any other unusual activities or patterns that might suggest a broader compromise or targeted attack.\n- If possible, conduct a forensic analysis of the system to identify any unauthorized changes or additional indicators of compromise related to credential theft.\n\n### False positive analysis\n\n- Security software updates or scans may trigger the rule by accessing SystemKey paths. Users can create exceptions for known security applications that frequently access these paths, ensuring they are not flagged as threats.\n- System maintenance scripts or backup processes might access SystemKey paths as part of routine operations. Identify these processes and add them to an exclusion list to prevent false alerts.\n- Administrative tools used by IT departments for legitimate credential management could be mistakenly flagged. Verify these tools and configure the rule to exclude them from detection.\n- Custom scripts developed for internal use that interact with keychain data should be reviewed and, if deemed safe, added to the list of exceptions to avoid unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified by the detection rule that are accessing the SystemKey paths, ensuring no further credential extraction occurs.\n- Conduct a thorough review of the system's keychain access logs to identify any unauthorized access attempts and determine the scope of the compromise.\n- Change all credentials stored in the keychain that may have been accessed, including Wi-Fi passwords, website credentials, and any other sensitive information.\n- Restore the system from a known good backup if unauthorized changes or persistent threats are detected, ensuring the system is free from compromise.\n- Implement additional monitoring on the affected system and similar endpoints to detect any further attempts to access keychain data, using enhanced logging and alerting mechanisms.\n- Escalate the incident to the security operations team for further investigation and to assess the need for broader organizational response measures, such as notifying affected users or stakeholders.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"d75991f2-b989-419d-b797-ac1e54ec2d61","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1555","name":"Credentials from Password Stores","reference":"https://attack.mitre.org/techniques/T1555/","subtechnique":[{"id":"T1555.001","name":"Keychain","reference":"https://attack.mitre.org/techniques/T1555/001/"}]}]}],"to":"now","references":["https://github.com/AlessandroZ/LaZagne/blob/master/Mac/lazagne/softwares/system/chainbreaker.py"],"version":210,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.Ext.effective_parent.executable","type":"unknown","ecs":false},{"name":"process.args","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.*"],"query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and\n  process.args in (\"/private/var/db/SystemKey\", \"/var/db/SystemKey\") and\n  not process.Ext.effective_parent.executable like \"/Library/Elastic/Endpoint/elastic-endpoint.app/Contents/MacOS/elastic-endpoint\"\n","actions":[]}
{"id":"afe0acd4-fd55-4440-a8e2-6dbe23f08c17","updated_at":"2025-06-15T07:46:58.850Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.104Z","created_by":"elastic","name":"Credential Acquisition via Registry Hive Dumping","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne","Data Source: Sysmon","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies attempts to export a registry hive which may contain credentials using the Windows reg.exe tool.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Credential Acquisition via Registry Hive Dumping\n\nDumping registry hives is a common way to access credential information as some hives store credential material.\n\nFor example, the SAM hive stores locally cached credentials (SAM Secrets), and the SECURITY hive stores domain cached credentials (LSA secrets).\n\nDumping these hives in combination with the SYSTEM hive enables the attacker to decrypt these secrets.\n\nThis rule identifies the usage of `reg.exe` to dump SECURITY and/or SAM hives, which potentially indicates the compromise of the credentials stored in the host.\n\n#### Possible investigation steps\n\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate if the credential material was exfiltrated or processed locally by other tools.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (e.g., 4624) to the target host.\n\n### False positive analysis\n\n- Administrators can export registry hives for backup purposes using command line tools like `reg.exe`. Check whether the user is legitamitely performing this kind of activity.\n\n### Related rules\n\n- Registry Hive File Creation via SMB - a4c7473a-5cb4-4bc1-9d06-e4a75adbc494\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Reimage the host operating system and restore compromised files to clean versions.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"a7e7bfa3-088e-4f13-b29e-3986e0e756b8","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.002","name":"Security Account Manager","reference":"https://attack.mitre.org/techniques/T1003/002/"},{"id":"T1003.004","name":"LSA Secrets","reference":"https://attack.mitre.org/techniques/T1003/004/"}]}]}],"to":"now","references":["https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-the-registry-7512674487f8","https://www.elastic.co/security-labs/detect-credential-access"],"version":315,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n (?process.pe.original_file_name == \"reg.exe\" or process.name : \"reg.exe\") and\n process.args : (\"save\", \"export\") and\n process.args : (\"hklm\\\\sam\", \"hklm\\\\security\")\n","actions":[]}
{"id":"e9e09c73-4cf9-4b6d-9fd4-d94262e37d9a","updated_at":"2025-07-01T12:38:56.044Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.127Z","created_by":"elastic","name":"Suspicious Endpoint Security Parent Process","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"A suspicious Endpoint Security parent process was detected. This may indicate a process hollowing or other form of code injection.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Endpoint Security Parent Process\n\nEndpoint security solutions, like Elastic and Microsoft Defender, monitor and protect systems by analyzing process behaviors. Adversaries may exploit these processes through techniques like process hollowing, where malicious code is injected into legitimate processes to evade detection. The detection rule identifies anomalies by flagging unexpected parent processes of security executables, excluding known benign paths and arguments, thus highlighting potential threats.\n\n### Possible investigation steps\n\n- Review the process details for the flagged executable (e.g., esensor.exe or elastic-endpoint.exe) to understand its expected behavior and any recent changes in its configuration or deployment.\n- Examine the parent process executable path and name to determine if it is a known legitimate process or potentially malicious. Pay special attention to paths not listed in the known benign paths, such as those outside \"?:\\Program Files\\Elastic\\*\" or \"?:\\Windows\\System32\\*\".\n- Investigate the command-line arguments used by the parent process to identify any unusual or suspicious patterns that could indicate malicious activity, especially if they do not match the benign arguments like \"test\", \"version\", or \"status\".\n- Check the historical activity of the parent process to see if it has been involved in other suspicious activities or if it has a history of spawning security-related processes.\n- Correlate the alert with other security events or logs from data sources like Elastic Endgame, Microsoft Defender for Endpoint, or Sysmon to gather additional context and identify any related suspicious activities.\n- Assess the risk and impact of the alert by considering the environment, the criticality of the affected systems, and any potential data exposure or operational disruption.\n\n### False positive analysis\n\n- Security tools or scripts that automate tasks may trigger false positives if they launch endpoint security processes with unexpected parent processes. To manage this, identify and document these tools, then add their parent executable paths to the exclusion list.\n- System administrators or IT personnel may use command-line tools like PowerShell or cmd.exe for legitimate maintenance tasks. If these tasks frequently trigger alerts, consider adding specific command-line arguments used in these tasks to the exclusion list.\n- Software updates or installations might temporarily cause unexpected parent processes for security executables. Monitor these activities and, if they are routine and verified, add the associated parent executable paths to the exclusion list.\n- Custom scripts or third-party applications that interact with security processes can also lead to false positives. Review these scripts or applications, and if they are deemed safe, include their parent executable paths in the exclusion list.\n- Regularly review and update the exclusion list to ensure it reflects the current environment and operational practices, minimizing the risk of overlooking new legitimate processes.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further spread of the potential threat and to contain any malicious activity.\n- Terminate the suspicious process identified by the alert to stop any ongoing malicious activity and prevent further code execution.\n- Conduct a forensic analysis of the affected system to identify any additional indicators of compromise, such as unauthorized changes or additional malicious files.\n- Restore the system from a known good backup if any malicious activity or unauthorized changes are confirmed, ensuring that the backup is clean and uncompromised.\n- Update endpoint security solutions and apply any available patches to address vulnerabilities that may have been exploited by the adversary.\n- Monitor the network and systems for any signs of re-infection or similar suspicious activities, using enhanced logging and alerting based on the identified threat indicators.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems may be affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"b41a13c6-ba45-4bab-a534-df53d0cfed6a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/","subtechnique":[{"id":"T1036.005","name":"Match Legitimate Resource Name or Location","reference":"https://attack.mitre.org/techniques/T1036/005/"}]}]}],"to":"now","references":[],"version":318,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.name : (\"esensor.exe\", \"elastic-endpoint.exe\") and\n  process.parent.executable != null and\n  /* add FPs here */\n  not process.parent.executable : (\n        \"?:\\\\Program Files\\\\Elastic\\\\*\",\n        \"?:\\\\Windows\\\\System32\\\\services.exe\",\n        \"?:\\\\Windows\\\\System32\\\\WerFault*.exe\",\n        \"?:\\\\Windows\\\\System32\\\\wermgr.exe\",\n        \"?:\\\\Windows\\\\explorer.exe\"\n  ) and\n  not (\n    process.parent.executable : (\n        \"?:\\\\Windows\\\\System32\\\\cmd.exe\",\n        \"?:\\\\Windows\\\\System32\\\\SecurityHealthHost.exe\",\n        \"?:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\"\n    ) and\n    process.args : (\n        \"test\", \"version\",\n        \"top\", \"run\",\n        \"*help\", \"status\",\n        \"upgrade\", \"/launch\",\n        \"/enable\"\n    )\n  )\n","actions":[]}
{"id":"01a69eb0-bdee-4fba-8c1d-a65809be5f56","updated_at":"2025-06-15T07:42:37.577Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.977Z","created_by":"elastic","name":"Suspicious WMI Event Subscription Created","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Data Source: Sysmon","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects the creation of a WMI Event Subscription. Attackers can abuse this mechanism for persistence or to elevate to SYSTEM privileges.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious WMI Event Subscription Created\n\nWindows Management Instrumentation (WMI) is a powerful framework for managing data and operations on Windows systems. It allows for event subscriptions that can trigger actions based on system events. Adversaries exploit this for persistence by creating event subscriptions that execute malicious scripts or commands. The detection rule identifies such abuse by monitoring specific event codes and API calls related to the creation of suspicious WMI event consumers, flagging potential threats.\n\n### Possible investigation steps\n\n- Review the event logs for event code 21 in the windows.sysmon_operational dataset to identify the specific WMI event subscription created, focusing on the winlog.event_data.Operation and winlog.event_data.Consumer fields.\n- Examine the process details associated with the IWbemServices::PutInstance API call in the endpoint.events.api dataset, particularly the process.Ext.api.parameters.consumer_type, to determine the nature of the consumer created.\n- Investigate the source and context of the command or script associated with the CommandLineEventConsumer or ActiveScriptEventConsumer to assess its legitimacy and potential malicious intent.\n- Check for any related processes or activities around the time of the event to identify potential lateral movement or further persistence mechanisms.\n- Correlate the findings with other security alerts or logs to determine if this event is part of a broader attack pattern or campaign.\n\n### False positive analysis\n\n- Legitimate administrative scripts or tools may create WMI event subscriptions for system monitoring or automation. Review the source and context of the event to determine if it aligns with known administrative activities.\n- Software installations or updates might use WMI event subscriptions as part of their setup or configuration processes. Verify if the event coincides with recent software changes and consider excluding these specific events if they are routine.\n- Security software or management tools often use WMI for legitimate purposes. Identify and document these tools in your environment, and create exceptions for their known behaviors to reduce noise.\n- Scheduled tasks or system maintenance scripts may trigger similar events. Cross-reference with scheduled task logs or maintenance windows to confirm if these are expected activities.\n- Custom scripts developed in-house for system management might inadvertently match the detection criteria. Ensure these scripts are documented and consider excluding their specific signatures from the rule.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further malicious activity and lateral movement.\n- Terminate any suspicious processes associated with the WMI event subscription, specifically those linked to CommandLineEventConsumer or ActiveScriptEventConsumer.\n- Remove the malicious WMI event subscription by using WMI management tools or scripts to delete the identified event consumer.\n- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to identify and remove any additional threats.\n- Review and reset any compromised credentials, especially if SYSTEM privileges were potentially accessed or escalated.\n- Monitor the network for any signs of similar activity or attempts to recreate the WMI event subscription, using enhanced logging and alerting mechanisms.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"e72f87d0-a70e-4f8d-8443-a6407bc34643","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1546","name":"Event Triggered Execution","reference":"https://attack.mitre.org/techniques/T1546/","subtechnique":[{"id":"T1546.003","name":"Windows Management Instrumentation Event Subscription","reference":"https://attack.mitre.org/techniques/T1546/003/"}]}]}],"to":"now","references":["https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf","https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96"],"version":310,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"},{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"event.provider","type":"keyword","ecs":true},{"name":"process.Ext.api.name","type":"keyword","ecs":false},{"name":"process.Ext.api.parameters.consumer_type","type":"keyword","ecs":false},{"name":"winlog.event_data.Consumer","type":"unknown","ecs":false},{"name":"winlog.event_data.Operation","type":"keyword","ecs":false}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-windows.sysmon_operational-*","logs-endpoint.events.api-*"],"query":"any where\n (\n   (event.dataset == \"windows.sysmon_operational\" and event.code == \"21\" and\n    ?winlog.event_data.Operation : \"Created\" and ?winlog.event_data.Consumer : (\"*subscription:CommandLineEventConsumer*\", \"*subscription:ActiveScriptEventConsumer*\")) or\n\n   (event.dataset == \"endpoint.events.api\" and event.provider == \"Microsoft-Windows-WMI-Activity\" and ?process.Ext.api.name == \"IWbemServices::PutInstance\" and\n    ?process.Ext.api.parameters.consumer_type in (\"ActiveScriptEventConsumer\", \"CommandLineEventConsumer\"))\n )\n","actions":[]}
{"id":"79ed7589-bfb5-4068-990a-227b0aa44fdb","updated_at":"2025-07-01T12:39:05.057Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:49.296Z","created_by":"elastic","name":"Potential Reverse Shell via UDP","tags":["Data Source: Auditd Manager","Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This detection rule identifies suspicious network traffic patterns associated with UDP reverse shell activity. This activity consists of a sample of an execve, socket and connect syscall executed by the same process, where the auditd.data.a0-1 indicate a UDP connection, ending with an egress connection event. An attacker may establish a Linux UDP reverse shell to bypass traditional firewall restrictions and gain remote access to a target system covertly.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Reverse Shell via UDP\n\nReverse shells over UDP can be exploited by attackers to bypass firewalls and gain unauthorized access to systems. This technique leverages UDP's connectionless nature, making it harder to detect. Adversaries may use scripting languages or network tools to initiate these connections. The detection rule identifies suspicious processes executing network-related syscalls and egress connections, flagging potential reverse shell activity.\n\n### Possible investigation steps\n\n- Review the process details such as process.pid, process.parent.pid, and process.name to identify the specific process that triggered the alert and its parent process.\n- Examine the command line arguments and environment variables associated with the suspicious process to understand its intended function and origin.\n- Check the network connection details, including destination.ip and network.direction, to determine the external entity the process attempted to connect to and assess if it is a known malicious IP or domain.\n- Investigate the user account associated with the process to determine if it has been compromised or if there are any signs of unauthorized access.\n- Analyze historical logs for any previous instances of similar process executions or network connections to identify patterns or repeated attempts.\n- Correlate the alert with other security events or alerts from the same host.id to gather additional context and assess the scope of potential compromise.\n\n### False positive analysis\n\n- Legitimate administrative scripts or tools may trigger the rule if they use UDP for valid network operations. Users can create exceptions for specific scripts or processes that are known to perform routine administrative tasks.\n- Automated monitoring or network management tools that use UDP for health checks or status updates might be flagged. Identify these tools and exclude their process names or network patterns from the rule.\n- Development or testing environments where developers frequently use scripting languages or network tools for legitimate purposes can cause false positives. Consider excluding specific host IDs or process names associated with these environments.\n- Custom applications that use UDP for communication, especially if they are developed in-house, may be mistakenly identified. Review these applications and whitelist their process names or network behaviors if they are verified as safe.\n- Network scanning or diagnostic tools that use UDP for troubleshooting can be misinterpreted as malicious. Ensure these tools are recognized and excluded from the detection rule if they are part of regular network maintenance activities.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified by the detection rule, particularly those associated with known reverse shell tools or scripting languages.\n- Conduct a forensic analysis of the affected system to identify any additional indicators of compromise, such as unauthorized user accounts or modified system files.\n- Review and update firewall rules to block outbound UDP traffic from unauthorized applications or processes, ensuring legitimate traffic is not disrupted.\n- Reset credentials for any accounts accessed from the affected host, especially if they have administrative privileges.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if other systems may be affected.\n- Implement enhanced monitoring and logging for similar suspicious activities, focusing on the execution of network-related syscalls and egress connections from scripting languages or network tools.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"a5eb21b7-13cc-4b94-9fe2-29bb2914e037","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":["https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md","https://www.elastic.co/security-labs/primer-on-persistence-mechanisms","https://www.elastic.co/security-labs/linux-detection-engineering-with-auditd"],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"auditd_manager","version":"^1.0.0"}],"required_fields":[{"name":"auditd.data.a1","type":"unknown","ecs":false},{"name":"auditd.data.syscall","type":"unknown","ecs":false},{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.pid","type":"long","ecs":true},{"name":"process.pid","type":"long","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from one of the following integrations:\n- Auditbeat\n- Auditd Manager\n\n### Auditbeat Setup\nAuditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.\n\n#### The following steps should be executed in order to add the Auditbeat on a Linux System:\n- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.\n- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).\n- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).\n- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).\n- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).\n\n### Auditd Manager Integration Setup\nThe Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.\nAuditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.\n\n#### The following steps should be executed in order to add the Elastic Agent System integration \"auditd_manager\" on a Linux System:\n- Go to the Kibana home page and click “Add integrations”.\n- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.\n- Click “Add Auditd Manager”.\n- Configure the integration name and optionally add a description.\n- Review optional and advanced settings accordingly.\n- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.\n- Click “Save and Continue”.\n- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).\n\n#### Rule Specific Setup Note\nAuditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.\nHowever, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the \"audit rules\" configuration box or the \"auditd rule files\" box by specifying a file to read the audit rules from.\n- For this detection rule no additional audit rules are required to be added to the integration.\n","type":"eql","language":"eql","index":["auditbeat-*","logs-auditd_manager.auditd-*"],"query":"sample by host.id, process.pid, process.parent.pid\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"executed\" and process.name : (\n    \"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\", \"perl\", \"python*\", \"nc\", \"ncat\", \"netcat\", \"php*\",\n    \"ruby\", \"openssl\", \"awk\", \"telnet\", \"lua*\", \"socat\"\n    )]\n  [process where host.os.type == \"linux\" and auditd.data.syscall == \"socket\" and process.name : (\n    \"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\", \"perl\", \"python*\", \"nc\", \"ncat\", \"netcat\", \"php*\",\n    \"ruby\", \"openssl\", \"awk\", \"telnet\", \"lua*\", \"socat\"\n    ) and auditd.data.a1 == \"2\"]\n  [network where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"connected-to\" and\n   process.name : (\n    \"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\", \"perl\", \"python*\", \"nc\", \"ncat\", \"netcat\", \"php*\",\n    \"ruby\", \"openssl\", \"awk\", \"telnet\", \"lua*\", \"socat\"\n    ) and network.direction == \"egress\" and destination.ip != null and\n   not cidrmatch(destination.ip, \"127.0.0.0/8\", \"169.254.0.0/16\", \"224.0.0.0/4\", \"::1\")]\n","actions":[]}
{"id":"b107e069-ee3c-4451-a635-d0446c3e06a6","updated_at":"2025-06-15T07:42:35.555Z","updated_by":"sangpt","created_at":"2025-03-25T01:25:44.632Z","created_by":"sangpt","name":"Kerberos Pre-authentication Disabled for User","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Defense Evasion","Tactic: Privilege Escalation","Resources: Investigation Guide","Use Case: Active Directory Monitoring","Data Source: Active Directory","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies the modification of an account's Kerberos pre-authentication options. An adversary with GenericWrite/GenericAll rights over the account can maliciously modify these settings to perform offline password cracking attacks such as AS-REP roasting.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Kerberos Pre-authentication Disabled for User\n\nKerberos pre-authentication is an account protection against offline password cracking. When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password. Microsoft's security monitoring [recommendations](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4738) state that `'Don't Require Preauth' – Enabled` should not be enabled for user accounts because it weakens security for the account’s Kerberos authentication.\n\nAS-REP roasting is an attack against Kerberos for user accounts that do not require pre-authentication, which means that if the target user has pre-authentication disabled, an attacker can request authentication data for it and get a TGT that can be brute-forced offline, similarly to Kerberoasting.\n\n#### Possible investigation steps\n\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Determine if the target account is sensitive or privileged.\n- Inspect the account activities for suspicious or abnormal behaviors in the alert timeframe.\n\n### False positive analysis\n\n- Disabling pre-authentication is a bad security practice and should not be allowed in the domain. The security team should map and monitor any potential benign true positives (B-TPs), especially if the target account is privileged.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Reset the target account's password if there is any risk of TGTs having been retrieved.\n- Re-enable the preauthentication option or disable the target account.\n- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"e514d8cd-ed15-4011-84e2-d15147e059f1","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1558","name":"Steal or Forge Kerberos Tickets","reference":"https://attack.mitre.org/techniques/T1558/","subtechnique":[{"id":"T1558.004","name":"AS-REP Roasting","reference":"https://attack.mitre.org/techniques/T1558/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/","subtechnique":[{"id":"T1078.002","name":"Domain Accounts","reference":"https://attack.mitre.org/techniques/T1078/002/"}]}]}],"to":"now","references":["https://harmj0y.medium.com/roasting-as-reps-e6179a65216b","https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4738","https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0026_windows_audit_user_account_management.md"],"version":217,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"winlog.event_data.NewUACList","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'Audit User Account Management' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nAccount Management >\nAudit User Account Management (Success,Failure)\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"any where host.os.type == \"windows\" and event.code == \"4738\" and\n  winlog.event_data.NewUACList == \"USER_DONT_REQUIRE_PREAUTH\"\n","actions":[]}
{"id":"5a464e35-204c-4ea9-8eff-d58006c77d1b","updated_at":"2025-06-15T07:45:26.711Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:38.947Z","created_by":"elastic","name":"Mimikatz Memssp Log File Detected","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Microsoft Defender for Endpoint"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies the password log file from the default Mimikatz memssp module.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Mimikatz Memssp Log File Detected\n\n[Mimikatz](https://github.com/gentilkiwi/mimikatz) is an open-source tool used to collect, decrypt, and/or use cached credentials. This tool is commonly abused by adversaries during the post-compromise stage where adversaries have gained an initial foothold on an endpoint and are looking to elevate privileges and seek out additional authentication objects such as tokens/hashes/credentials that can then be used to laterally move and pivot across a network.\n\nThis rule looks for the creation of a file named `mimilsa.log`, which is generated when using the Mimikatz misc::memssp module, which injects a malicious Windows SSP to collect locally authenticated credentials, which includes the computer account password, running service credentials, and any accounts that logon.\n\n#### Possible investigation steps\n\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (e.g., 4624) to the target host.\n- Retrieve and inspect the log file contents.\n- Search for DLL files created in the same location as the log file, and retrieve unsigned DLLs.\n  - Use the PowerShell Get-FileHash cmdlet to get the SHA-256 hash value of these files.\n    - Search for the existence of these files in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n  - Identify the process that created the DLL using file creation events.\n\n### False positive analysis\n\n- This file name `mimilsa.log` should not legitimately be created.\n\n### Related rules\n\n- Mimikatz Powershell Module Activity - ac96ceb8-4399-4191-af1d-4feeac1f1f46\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the host is a Domain Controller (DC):\n  - Activate your incident response plan for total Active Directory compromise.\n  - Review the privileges assigned to users that can access the DCs to ensure that the least privilege principle is being followed and reduce the attack surface.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Reboot the host to remove the injected SSP from memory.\n- Reimage the host operating system or restore compromised files to clean versions.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"ebb200e8-adf0-43f8-a0bb-4ee5b5d852c6","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"}]}],"to":"now","references":["https://www.elastic.co/security-labs/detect-credential-access"],"version":414,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"m365_defender","version":"^3.0.0"}],"required_fields":[{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.file-*","logs-windows.sysmon_operational-*","endgame-*","logs-sentinel_one_cloud_funnel.*","logs-m365_defender.event-*"],"query":"file where host.os.type == \"windows\" and file.name : \"mimilsa.log\" and process.name : \"lsass.exe\"\n","actions":[]}
{"id":"cd0b7b7b-5740-433c-bc4e-8f2dea229d47","updated_at":"2025-06-15T07:42:39.584Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.961Z","created_by":"elastic","name":"KRBTGT Delegation Backdoor","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Use Case: Active Directory Monitoring","Data Source: Active Directory","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the modification of the msDS-AllowedToDelegateTo attribute to KRBTGT. Attackers can use this technique to maintain persistence to the domain by having the ability to request tickets for the KRBTGT service.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating KRBTGT Delegation Backdoor\n\nIn Active Directory, the KRBTGT account is crucial for Kerberos ticket granting. Adversaries may exploit this by altering the msDS-AllowedToDelegateTo attribute, enabling unauthorized ticket requests and persistent domain access. The detection rule identifies such modifications by monitoring specific event actions and codes, flagging high-risk changes to the KRBTGT delegation settings.\n\n### Possible investigation steps\n\n- Review the event logs for the specific event code 4738 to identify the user account that was modified and verify if the msDS-AllowedToDelegateTo attribute includes the KRBTGT service.\n- Investigate the user account that performed the modification by checking their recent activities and login history to determine if the action was authorized or suspicious.\n- Examine the timeline of the modification event to correlate it with any other unusual activities or alerts in the network around the same time.\n- Check for any other modifications to sensitive attributes or accounts in Active Directory that might indicate a broader compromise.\n- Assess the potential impact on the domain by evaluating the access level and permissions of the modified account and any associated systems or services.\n- Consult with the IT security team to determine if there are any known maintenance activities or changes that could explain the modification, ensuring it was not a legitimate administrative action.\n\n### False positive analysis\n\n- Routine administrative tasks involving legitimate changes to the msDS-AllowedToDelegateTo attribute for service accounts may trigger alerts. Review the context of the change and verify with the IT team if it aligns with scheduled maintenance or updates.\n- Automated scripts or tools used for Active Directory management might modify delegation settings as part of their operations. Identify these scripts and exclude their activity from triggering alerts by creating exceptions based on the script's signature or the account used.\n- Changes made by trusted third-party applications that require delegation for functionality can be mistaken for malicious activity. Document these applications and adjust the detection rule to exclude their known and expected behavior.\n- Regular audits or compliance checks that involve modifications to delegation settings should be accounted for. Coordinate with audit teams to schedule these activities and temporarily adjust monitoring rules to prevent false positives during these periods.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or ticket requests using the KRBTGT account.\n- Revert any unauthorized changes to the msDS-AllowedToDelegateTo attribute for the KRBTGT account by restoring it to its previous state using a known good backup or manually resetting the attribute.\n- Reset the KRBTGT account password twice to invalidate any existing Kerberos tickets that may have been issued using the compromised delegation settings.\n- Conduct a thorough review of recent changes to user accounts and delegation settings in Active Directory to identify any other potential unauthorized modifications.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine the scope of the compromise.\n- Implement enhanced monitoring for changes to critical accounts and attributes in Active Directory, focusing on the KRBTGT account and similar high-value targets.\n- Review and update access controls and delegation permissions to ensure that only authorized personnel have the ability to modify sensitive attributes like msDS-AllowedToDelegateTo.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"e052c845-48d0-4f46-8a13-7d0aba05df82","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1098","name":"Account Manipulation","reference":"https://attack.mitre.org/techniques/T1098/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1558","name":"Steal or Forge Kerberos Tickets","reference":"https://attack.mitre.org/techniques/T1558/"}]}],"to":"now","references":["https://skyblue.team/posts/delegate-krbtgt","https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0026_windows_audit_user_account_management.md"],"version":212,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.AllowedToDelegateTo","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'Audit User Account Management' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nAccount Management >\nAudit User Account Management (Success,Failure)\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"iam where event.code == \"4738\" and winlog.event_data.AllowedToDelegateTo : \"*krbtgt*\"\n","actions":[]}
{"id":"9d2080d3-ce3b-4e23-9139-bf79a600a01f","updated_at":"2025-06-15T07:50:02.057Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:52.406Z","created_by":"elastic","name":"Potential Masquerading as Communication Apps","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious instances of communications apps, both unsigned and renamed ones, that can indicate an attempt to conceal malicious activity, bypass security features such as allowlists, or trick users into executing malware.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Masquerading as Communication Apps\n\nCommunication apps are integral to modern workflows, facilitating seamless interaction. However, adversaries can exploit these apps by masquerading malicious processes as legitimate ones, bypassing security measures and deceiving users. The detection rule identifies suspicious instances by checking for unsigned or improperly signed processes, ensuring they match known trusted signatures. This helps in flagging potential threats that mimic trusted communication tools, aiding in defense evasion detection.\n\n### Possible investigation steps\n\n- Review the process name and code signature details to confirm if the process is indeed masquerading as a legitimate communication app. Check if the process name matches any of the specified apps like slack.exe, WebexHost.exe, etc., and verify the code signature subject name and trust status.\n- Investigate the origin of the executable file by checking its file path and creation date. Determine if it was recently added or modified, which might indicate suspicious activity.\n- Analyze the parent process to understand how the suspicious process was initiated. This can provide insights into whether it was launched by a legitimate application or a potentially malicious script or program.\n- Check for any network connections initiated by the suspicious process. Look for unusual or unauthorized external connections that might suggest data exfiltration or command and control communication.\n- Review recent system logs and security alerts for any related activities or anomalies that coincide with the start of the suspicious process. This can help identify if the process is part of a larger attack pattern.\n- Consult threat intelligence sources to see if there are any known indicators of compromise (IOCs) associated with the process or its hash value, which can help in assessing the threat level.\n\n### False positive analysis\n\n- Legitimate software updates or installations may temporarily result in unsigned or improperly signed processes. Users can create exceptions for known update processes to prevent false positives during these periods.\n- Custom or internally developed communication tools that mimic the names of popular apps might trigger alerts. Ensure these tools are properly signed and add them to an allowlist if they are trusted.\n- Some third-party security or monitoring tools may interact with communication apps in a way that alters their signature status. Verify the legitimacy of these tools and consider excluding them from the rule if they are deemed safe.\n- In environments where communication apps are deployed via non-standard methods, such as portable versions, ensure these versions are signed correctly or add them to an exception list if they are verified as safe.\n- Temporary network issues or system misconfigurations might cause legitimate apps to appear unsigned. Regularly audit and correct any network or system issues to minimize these occurrences.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further spread of potential malware or unauthorized access.\n- Terminate any suspicious processes identified by the detection rule that are masquerading as communication apps, ensuring they are not legitimate processes.\n- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to identify and remove any malicious files or software.\n- Review and validate the code signatures of all communication apps on the affected system to ensure they are properly signed by trusted entities.\n- Restore any compromised systems from a known good backup to ensure the integrity of the system and data.\n- Monitor network traffic and system logs for any signs of lateral movement or further attempts to exploit communication apps.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c9482bfa-a553-4226-8ea2-4959bd4f7923","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/","subtechnique":[{"id":"T1036.001","name":"Invalid Code Signature","reference":"https://attack.mitre.org/techniques/T1036/001/"},{"id":"T1036.005","name":"Match Legitimate Resource Name or Location","reference":"https://attack.mitre.org/techniques/T1036/005/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1554","name":"Compromise Host Software Binary","reference":"https://attack.mitre.org/techniques/T1554/"}]}],"to":"now","references":[],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*"],"query":"process where host.os.type == \"windows\" and\n  event.type == \"start\" and\n  (\n    /* Slack */\n    (process.name : \"slack.exe\" and not\n      (process.code_signature.subject_name in (\n        \"Slack Technologies, Inc.\",\n        \"Slack Technologies, LLC\"\n       ) and process.code_signature.trusted == true)\n    ) or\n\n    /* WebEx */\n    (process.name : \"WebexHost.exe\" and not\n      (process.code_signature.subject_name in (\"Cisco WebEx LLC\", \"Cisco Systems, Inc.\") and process.code_signature.trusted == true)\n    ) or\n\n    /* Teams */\n    (process.name : \"Teams.exe\" and not\n      (process.code_signature.subject_name == \"Microsoft Corporation\" and process.code_signature.trusted == true)\n    ) or\n\n    /* Discord */\n    (process.name : \"Discord.exe\" and not\n      (process.code_signature.subject_name == \"Discord Inc.\" and process.code_signature.trusted == true)\n    ) or\n\n    /* RocketChat */\n    (process.name : \"Rocket.Chat.exe\" and not\n      (process.code_signature.subject_name == \"Rocket.Chat Technologies Corp.\" and process.code_signature.trusted == true)\n    ) or\n\n    /* Mattermost */\n    (process.name : \"Mattermost.exe\" and not\n      (process.code_signature.subject_name == \"Mattermost, Inc.\" and process.code_signature.trusted == true)\n    ) or\n\n    /* WhatsApp */\n    (process.name : \"WhatsApp.exe\" and not\n      (process.code_signature.subject_name in (\n        \"WhatsApp LLC\",\n        \"WhatsApp, Inc\",\n        \"24803D75-212C-471A-BC57-9EF86AB91435\"\n       ) and process.code_signature.trusted == true)\n    ) or\n\n    /* Zoom */\n    (process.name : \"Zoom.exe\" and not\n      (process.code_signature.subject_name == \"Zoom Video Communications, Inc.\" and process.code_signature.trusted == true)\n    ) or\n\n    /* Outlook */\n    (process.name : \"outlook.exe\" and not\n      (process.code_signature.subject_name == \"Microsoft Corporation\" and process.code_signature.trusted == true)\n    ) or\n\n    /* Thunderbird */\n    (process.name : \"thunderbird.exe\" and not\n      (process.code_signature.subject_name == \"Mozilla Corporation\" and process.code_signature.trusted == true)\n    )\n  )\n","actions":[]}
{"id":"8efe773b-1e16-4e02-8a06-2aab7d20f702","updated_at":"2025-06-15T07:42:45.623Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.155Z","created_by":"elastic","name":"Potential Privileged Escalation via SamAccountName Spoofing","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Privilege Escalation","Use Case: Active Directory Monitoring","Data Source: Active Directory","Use Case: Vulnerability","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies a suspicious computer account name rename event, which may indicate an attempt to exploit CVE-2021-42278 to elevate privileges from a standard domain user to a user with domain admin privileges. CVE-2021-42278 is a security vulnerability that allows potential attackers to impersonate a domain controller via samAccountName attribute spoofing.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privileged Escalation via SamAccountName Spoofing\n\nIn Active Directory environments, the samAccountName attribute is crucial for identifying user and computer accounts. Adversaries may exploit vulnerabilities like CVE-2021-42278 to spoof this attribute, potentially elevating privileges by renaming computer accounts to mimic domain controllers. The detection rule identifies suspicious renaming events, where a machine account is altered to resemble a user account, signaling possible privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the event logs to confirm the occurrence of a \"renamed-user-account\" action, focusing on entries where the OldTargetUserName ends with a \"$\" and the NewTargetUserName does not, indicating a potential spoofing attempt.\n- Identify the source of the rename event by examining the event logs for the user or system that initiated the change, and determine if it aligns with expected administrative activity.\n- Check the history of the NewTargetUserName to see if it has been used in any recent authentication attempts or privileged operations, which could indicate malicious intent.\n- Investigate the associated IP address and hostname from which the rename action was performed to determine if it is a known and trusted source within the network.\n- Correlate the event with other security alerts or logs to identify any patterns or additional suspicious activities that might suggest a broader attack campaign.\n- Assess the potential impact by determining if the renamed account has been granted elevated privileges or access to sensitive resources since the rename event occurred.\n\n### False positive analysis\n\n- Routine administrative tasks involving legitimate renaming of computer accounts can trigger false positives. To manage this, create exceptions for known administrative activities by excluding specific administrator accounts or service accounts from the detection rule.\n- Automated processes or scripts that rename computer accounts as part of regular maintenance or deployment procedures may also cause false alerts. Identify these processes and exclude their associated accounts or event patterns from the rule.\n- Temporary renaming of computer accounts for troubleshooting or testing purposes can be mistaken for suspicious activity. Document and exclude these temporary changes by maintaining a list of authorized personnel and their activities.\n- Changes made by trusted third-party software or management tools that interact with Active Directory should be reviewed and, if deemed safe, excluded from triggering alerts by specifying the tool's account or signature in the rule exceptions.\n\n### Response and remediation\n\n- Immediately isolate the affected machine from the network to prevent further unauthorized access or lateral movement within the domain.\n- Revert any unauthorized changes to the samAccountName attribute by renaming the affected computer account back to its original name.\n- Conduct a thorough review of recent changes in Active Directory, focusing on user and computer account modifications, to identify any other potentially compromised accounts.\n- Reset passwords for the affected machine account and any other accounts that may have been accessed or modified during the incident.\n- Apply the latest security patches and updates to all domain controllers and critical systems to mitigate vulnerabilities like CVE-2021-42278.\n- Enhance monitoring and logging for Active Directory events, specifically focusing on account renaming activities, to detect similar threats in the future.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to ensure comprehensive remediation efforts are undertaken.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"bdcf646b-08d4-492c-870a-6c04e3700034","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"},{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/","subtechnique":[{"id":"T1078.002","name":"Domain Accounts","reference":"https://attack.mitre.org/techniques/T1078/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1098","name":"Account Manipulation","reference":"https://attack.mitre.org/techniques/T1098/"}]}],"to":"now","references":["https://support.microsoft.com/en-us/topic/kb5008102-active-directory-security-accounts-manager-hardening-changes-cve-2021-42278-5975b463-4c95-45e1-831a-d120004e258e","https://cloudbrothers.info/en/exploit-kerberos-samaccountname-spoofing/","https://github.com/cube0x0/noPac","https://twitter.com/exploitph/status/1469157138928914432","https://exploit.ph/cve-2021-42287-cve-2021-42278-weaponisation.html"],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"winlog.event_data.NewTargetUserName","type":"unknown","ecs":false},{"name":"winlog.event_data.OldTargetUserName","type":"unknown","ecs":false}],"setup":"","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"iam where event.action == \"renamed-user-account\" and\n  /* machine account name renamed to user like account name */\n  winlog.event_data.OldTargetUserName : \"*$\" and not winlog.event_data.NewTargetUserName : \"*$\"\n","actions":[]}
{"id":"91f97ea6-d12a-4bb0-8f6f-77964f956ad3","updated_at":"2025-06-15T08:03:23.004Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.133Z","created_by":"elastic","name":"Windows Script Interpreter Executing Process via WMI","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Initial Access","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies use of the built-in Windows script interpreters (cscript.exe or wscript.exe) being used to execute a process via Windows Management Instrumentation (WMI). This may be indicative of malicious activity.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Windows Script Interpreter Executing Process via WMI\n\nWindows Management Instrumentation (WMI) is a powerful Windows feature that allows for system management and automation. Adversaries exploit WMI to execute scripts or processes stealthily, often using script interpreters like cscript.exe or wscript.exe. The detection rule identifies suspicious activity by monitoring for these interpreters executing processes via WMI, especially when initiated by non-system accounts, indicating potential malicious intent.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific script interpreter (cscript.exe or wscript.exe) and the process it executed. Check the process name and executable path for any anomalies or known malicious indicators.\n- Examine the user account associated with the process execution. Verify if the user domain is not \"NT AUTHORITY\" and assess whether the account is expected to perform such actions. Investigate any unusual or unauthorized account activity.\n- Investigate the parent process wmiprvse.exe to determine how it was initiated. Look for any preceding suspicious activities or processes that might have triggered the WMI execution.\n- Check the system for any additional indicators of compromise, such as unexpected network connections, changes in system configurations, or other alerts related to the same host or user.\n- Correlate the event with other security logs and alerts to identify any patterns or related incidents that might indicate a broader attack campaign or persistent threat.\n\n### False positive analysis\n\n- Legitimate administrative scripts or automation tasks may trigger this rule if they use cscript.exe or wscript.exe via WMI. To handle this, identify and document these scripts, then create exceptions for their specific execution paths or user accounts.\n- Software installations or updates that utilize script interpreters through WMI can be mistaken for malicious activity. Monitor and whitelist known installation processes or update mechanisms that are frequently used in your environment.\n- Custom applications or internal tools that rely on WMI for process execution might be flagged. Review these applications and exclude their specific process names or executable paths from the rule.\n- Scheduled tasks or system maintenance scripts executed by non-system accounts could generate alerts. Verify these tasks and exclude them by specifying the user accounts or domains that are authorized to perform such actions.\n- Security tools or monitoring solutions that leverage WMI for legitimate purposes may also be detected. Identify these tools and add them to the exception list based on their process names or executable locations.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further malicious activity and lateral movement.\n- Terminate any suspicious processes identified in the alert, such as cscript.exe or wscript.exe, that are running under non-system accounts.\n- Conduct a thorough review of the affected host's scheduled tasks, startup items, and services to identify and remove any persistence mechanisms.\n- Analyze the parent process wmiprvse.exe and its command-line arguments to understand the scope of the attack and identify any additional compromised systems.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if the threat is part of a larger campaign.\n- Implement additional monitoring and alerting for similar activities across the network, focusing on WMI-based script execution and non-standard process launches.\n- Review and update endpoint protection policies to block or alert on the execution of high-risk processes like those listed in the detection query, especially when initiated by non-system accounts.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"b64b183e-1a76-422d-9179-7b389513e74d","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1566","name":"Phishing","reference":"https://attack.mitre.org/techniques/T1566/","subtechnique":[{"id":"T1566.001","name":"Spearphishing Attachment","reference":"https://attack.mitre.org/techniques/T1566/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1047","name":"Windows Management Instrumentation","reference":"https://attack.mitre.org/techniques/T1047/"},{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.005","name":"Visual Basic","reference":"https://attack.mitre.org/techniques/T1059/005/"}]}]}],"to":"now","references":[],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"dll.name","type":"keyword","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true},{"name":"user.domain","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-endpoint.events.library-*","logs-windows.sysmon_operational-*","endgame-*"],"query":"sequence by host.id with maxspan = 5s\n    [any where host.os.type == \"windows\" and\n     (event.category : (\"library\", \"driver\") or (event.category == \"process\" and event.action : \"Image loaded*\")) and\n     (?dll.name : \"wmiutils.dll\" or file.name : \"wmiutils.dll\") and process.name : (\"wscript.exe\", \"cscript.exe\")]\n    [process where host.os.type == \"windows\" and event.type == \"start\" and\n     process.parent.name : \"wmiprvse.exe\" and\n     user.domain != \"NT AUTHORITY\" and\n     (process.pe.original_file_name :\n        (\n          \"cscript.exe\",\n          \"wscript.exe\",\n          \"PowerShell.EXE\",\n          \"Cmd.Exe\",\n          \"MSHTA.EXE\",\n          \"RUNDLL32.EXE\",\n          \"REGSVR32.EXE\",\n          \"MSBuild.exe\",\n          \"InstallUtil.exe\",\n          \"RegAsm.exe\",\n          \"RegSvcs.exe\",\n          \"msxsl.exe\",\n          \"CONTROL.EXE\",\n          \"EXPLORER.EXE\",\n          \"Microsoft.Workflow.Compiler.exe\",\n          \"msiexec.exe\"\n        ) or\n      process.executable : (\"C:\\\\Users\\\\*.exe\", \"C:\\\\ProgramData\\\\*.exe\")\n     )\n    ]\n","actions":[]}
{"id":"73e1ef54-cb88-4d64-883d-a2ffc0c90479","updated_at":"2025-06-15T07:47:04.863Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:41.086Z","created_by":"elastic","name":"Suspicious Web Browser Sensitive File Access","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the access or file open of web browser sensitive files by an untrusted/unsigned process or osascript. Adversaries may acquire credentials from web browsers by reading files specific to the target browser.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Web Browser Sensitive File Access\n\nWeb browsers store sensitive data like cookies and login credentials in specific files. Adversaries exploit this by accessing these files using untrusted or unsigned processes, potentially stealing credentials. The detection rule identifies such unauthorized access on macOS by monitoring file access events, focusing on untrusted processes or scripts, and excluding known safe executables, thus flagging potential credential theft attempts.\n\n### Possible investigation steps\n\n- Review the process executable path and name to determine if it is a known legitimate application or script, focusing on those not signed by trusted entities or identified as osascript.\n- Check the process code signature details to verify if the process is unsigned or untrusted, which could indicate malicious activity.\n- Investigate the user account associated with the process to determine if there is any unusual or unauthorized activity, such as unexpected logins or privilege escalations.\n- Examine the file access event details, including the specific sensitive file accessed (e.g., cookies.sqlite, logins.json), to assess the potential impact on credential security.\n- Correlate the event with other security alerts or logs from the same host or user to identify any patterns or additional suspicious activities that might indicate a broader compromise.\n- Verify if the process executable path matches any known safe paths, such as the excluded path for the Elastic Endpoint, to rule out false positives.\n\n### False positive analysis\n\n- Access by legitimate applications: Some legitimate applications may access browser files for valid reasons, such as backup or synchronization tools. Users can create exceptions for these applications by adding their code signatures to the exclusion list.\n- Developer or testing scripts: Developers might use scripts like osascript for testing purposes, which could trigger the rule. To manage this, users can whitelist specific scripts or processes used in development environments.\n- Security software interactions: Security tools might access browser files as part of their scanning or monitoring activities. Users should verify the legitimacy of these tools and add them to the exclusion list if they are trusted.\n- System maintenance tasks: Automated system maintenance tasks might access browser files. Users can identify these tasks and exclude them if they are part of routine system operations and deemed safe.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any untrusted or unsigned processes identified in the alert, especially those accessing sensitive browser files.\n- Conduct a thorough review of the affected system's recent activity logs to identify any additional suspicious behavior or potential lateral movement.\n- Change all potentially compromised credentials, focusing on those stored in the affected web browsers, and enforce multi-factor authentication where possible.\n- Restore any altered or deleted sensitive files from a known good backup to ensure data integrity.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems are affected.\n- Update endpoint protection and monitoring tools to enhance detection capabilities for similar unauthorized access attempts in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"20457e4f-d1de-4b92-ae69-142e27a4342a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1539","name":"Steal Web Session Cookie","reference":"https://attack.mitre.org/techniques/T1539/"},{"id":"T1555","name":"Credentials from Password Stores","reference":"https://attack.mitre.org/techniques/T1555/","subtechnique":[{"id":"T1555.003","name":"Credentials from Web Browsers","reference":"https://attack.mitre.org/techniques/T1555/003/"}]}]}],"to":"now","references":["https://securelist.com/calisto-trojan-for-macos/86543/"],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"Effective_process.executable","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.exists","type":"boolean","ecs":true},{"name":"process.code_signature.signing_id","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.file-*"],"query":"file where event.action == \"open\" and host.os.type == \"macos\" and process.executable != null and\n file.name like~ (\"cookies.sqlite\",\n                  \"key?.db\",\n                  \"logins.json\",\n                  \"Cookies\",\n                  \"Cookies.binarycookies\",\n                  \"Login Data\") and\n ((process.code_signature.trusted == false or process.code_signature.exists == false) or process.name == \"osascript\") and\n not process.code_signature.signing_id == \"org.mozilla.firefox\" and\n not Effective_process.executable like \"/Library/Elastic/Endpoint/elastic-endpoint.app/Contents/MacOS/elastic-endpoint\"\n","actions":[]}
{"id":"647fb20e-048a-4a15-b32a-8f500ddc8fb4","updated_at":"2025-06-15T07:55:59.820Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.976Z","created_by":"elastic","name":"Execution of Persistent Suspicious Program","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies execution of suspicious persistent programs (scripts, rundll32, etc.) by looking at process lineage and command line usage.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Execution of Persistent Suspicious Program\n\nPersistent programs, like scripts or rundll32, are often used by adversaries to maintain access to a system. These programs can be executed at startup, leveraging process lineage and command line arguments to evade detection. The detection rule identifies suspicious executions by monitoring the sequence of processes initiated after user logon, focusing on known malicious executables and unusual file paths, thus highlighting potential abuse of persistence mechanisms.\n\n### Possible investigation steps\n\n- Review the process lineage to confirm the sequence of userinit.exe, explorer.exe, and the suspicious child process. Verify if the child process was indeed launched shortly after user logon.\n- Examine the command line arguments of the suspicious process to identify any unusual or malicious patterns, especially those involving known suspicious paths like C:\\Users\\*, C:\\ProgramData\\*, or C:\\Windows\\Temp\\*.\n- Check the original file name of the suspicious process against known malicious executables such as cscript.exe, wscript.exe, or PowerShell.EXE to determine if it matches any of these.\n- Investigate the parent process explorer.exe to ensure it was not compromised or manipulated to launch the suspicious child process.\n- Analyze the user account associated with the suspicious process to determine if it has been involved in any other suspicious activities or if it has elevated privileges that could be exploited.\n- Review recent system changes or installations that might have introduced the suspicious executable or altered startup configurations.\n\n### False positive analysis\n\n- Legitimate administrative scripts or tools may trigger alerts if they are executed from common directories like C:\\Users or C:\\ProgramData. To manage this, create exceptions for known administrative scripts that are regularly used in your environment.\n- Software updates or installations might use processes like PowerShell or RUNDLL32, leading to false positives. Identify and exclude these processes when they are part of a verified update or installation routine.\n- Custom scripts or automation tasks that run at startup could be flagged. Document these tasks and exclude them from the rule if they are part of normal operations.\n- Security or monitoring tools that use similar execution patterns may be mistakenly identified. Verify these tools and add them to an exclusion list to prevent unnecessary alerts.\n- User-initiated actions that mimic suspicious behavior, such as running scripts from the command line, can cause false positives. Educate users on safe practices and adjust the rule to exclude known benign user actions.\n\n### Response and remediation\n\n- Isolate the affected host from the network to prevent further spread or communication with potential command and control servers.\n- Terminate any suspicious processes identified in the alert, such as those executed by cscript.exe, wscript.exe, PowerShell.EXE, MSHTA.EXE, RUNDLL32.EXE, REGSVR32.EXE, RegAsm.exe, MSBuild.exe, or InstallUtil.exe.\n- Remove any unauthorized or suspicious startup entries or scheduled tasks that may have been created to ensure persistence.\n- Conduct a thorough scan of the system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any additional malicious files or remnants.\n- Review and restore any modified system configurations or registry settings to their default or secure state.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.\n- Implement enhanced monitoring and logging for the affected host and similar systems to detect any recurrence or related suspicious activities.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"e7125cea-9fe1-42a5-9a05-b0792cf86f5a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1547","name":"Boot or Logon Autostart Execution","reference":"https://attack.mitre.org/techniques/T1547/","subtechnique":[{"id":"T1547.001","name":"Registry Run Keys / Startup Folder","reference":"https://attack.mitre.org/techniques/T1547/001/"}]}]}],"to":"now","references":[],"version":210,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true},{"name":"user.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-windows.sysmon_operational-*","endgame-*"],"query":"/* userinit followed by explorer followed by early child process of explorer (unlikely to be launched interactively) within 1m */\nsequence by host.id, user.name with maxspan=1m\n  [process where host.os.type == \"windows\" and event.type == \"start\" and process.name : \"userinit.exe\" and process.parent.name : \"winlogon.exe\"]\n  [process where host.os.type == \"windows\" and event.type == \"start\" and process.name : \"explorer.exe\"]\n  [process where host.os.type == \"windows\" and event.type == \"start\" and process.parent.name : \"explorer.exe\" and\n   /* add suspicious programs here */\n   process.pe.original_file_name in (\"cscript.exe\",\n                                     \"wscript.exe\",\n                                     \"PowerShell.EXE\",\n                                     \"MSHTA.EXE\",\n                                     \"RUNDLL32.EXE\",\n                                     \"REGSVR32.EXE\",\n                                     \"RegAsm.exe\",\n                                     \"MSBuild.exe\",\n                                     \"InstallUtil.exe\") and\n    /* add potential suspicious paths here */\n    process.args : (\"C:\\\\Users\\\\*\", \"C:\\\\ProgramData\\\\*\", \"C:\\\\Windows\\\\Temp\\\\*\", \"C:\\\\Windows\\\\Tasks\\\\*\", \"C:\\\\PerfLogs\\\\*\", \"C:\\\\Intel\\\\*\")\n   ]\n","actions":[]}
{"id":"8de6473d-56e9-4f3b-9c3b-fc177e123645","updated_at":"2025-06-15T07:42:37.594Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:43.123Z","created_by":"elastic","name":"Binary Executed from Shared Memory Directory","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Threat: BPFDoor","Data Source: Elastic Endgame","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the execution of a binary by root in Linux shared memory directories: (/dev/shm/, /run/shm/, /var/run/, /var/lock/). This activity is to be considered highly abnormal and should be investigated. Threat actors have placed executables used for persistence on high-uptime servers in these directories as system backdoors.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Binary Executed from Shared Memory Directory\n\nShared memory directories in Linux, such as /dev/shm and /run/shm, are designed for efficient inter-process communication. However, adversaries exploit these directories to execute binaries stealthily, often as root, bypassing traditional security measures. The detection rule identifies such anomalies by monitoring for root-executed binaries in these directories, excluding known legitimate processes, thus flagging potential backdoor activities.\n\n### Possible investigation steps\n\n- Review the process executable path to confirm it resides in a shared memory directory such as /dev/shm, /run/shm, /var/run, or /var/lock, and verify it is not part of the known exclusions like /var/run/docker or /var/run/utsns.\n- Investigate the parent process of the suspicious executable to understand the context of its execution, focusing on the command line used, especially if it does not match the exclusion pattern /usr/bin/runc init.\n- Check the process's creation time and correlate it with any other suspicious activities or alerts around the same timeframe to identify potential patterns or related incidents.\n- Analyze the binary file in question for any known malicious signatures or unusual characteristics using tools like file integrity checkers or antivirus solutions.\n- Review system logs and audit logs for any unauthorized access or privilege escalation attempts that might have led to the execution of the binary as root.\n- Investigate the user account activity associated with user.id \"0\" to ensure there are no signs of compromise or misuse of root privileges.\n- If possible, isolate the affected system to prevent further potential malicious activity while the investigation is ongoing.\n\n### False positive analysis\n\n- Docker-related processes can trigger false positives when binaries are executed from shared memory directories. To mitigate this, exclude paths like /var/run/docker/* from the detection rule.\n- Processes related to container orchestration tools such as Kubernetes might also cause false positives. Exclude paths like /var/run/utsns/* and /var/run/s6/* to prevent these.\n- Cloudera services may execute binaries from shared memory directories as part of their normal operations. Exclude /var/run/cloudera-scm-agent/* to avoid false alerts.\n- Argo workflows might execute binaries in these directories. Exclude /var/run/argo/argoexec to reduce false positives.\n- Legitimate use of /usr/bin/runc init as a parent process can be excluded to prevent unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the threat actor.\n- Terminate any suspicious processes running from the shared memory directories (/dev/shm, /run/shm, /var/run, /var/lock) to halt potential malicious activity.\n- Conduct a thorough review of the system's process tree and logs to identify any additional malicious binaries or scripts that may have been executed or are scheduled to run.\n- Remove any unauthorized binaries or scripts found in the shared memory directories and other critical system paths to eliminate persistence mechanisms.\n- Restore the system from a known good backup if the integrity of the system is compromised and cannot be assured through manual remediation.\n- Implement enhanced monitoring and alerting for any future execution of binaries from shared memory directories, ensuring that legitimate processes are whitelisted appropriately.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Directories /dev/shm and /run/shm are temporary file storage directories in Linux. They are intended to appear as a mounted file system, but uses virtual memory instead of a persistent storage device and thus are used for mounting file systems in legitimate purposes."],"from":"now-9m","rule_id":"3f3f9fe2-d095-11ec-95dc-f661ea17fbce","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/"}]}],"to":"now","references":["https://linuxsecurity.com/features/fileless-malware-on-linux","https://twitter.com/GossiTheDog/status/1522964028284411907","https://www.elastic.co/security-labs/a-peek-behind-the-bpfdoor"],"version":114,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.parent.command_line","type":"wildcard","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["endgame-*","logs-endpoint.events.process*"],"query":"process where host.os.type == \"linux\" and event.type == \"start\" and event.action in (\"exec\", \"exec_event\") and\nuser.id == \"0\" and process.executable : (\"/dev/shm/*\", \"/run/shm/*\", \"/var/run/*\", \"/var/lock/*\") and\nnot process.executable : (\"/var/run/docker/*\", \"/var/run/utsns/*\", \"/var/run/s6/*\", \"/var/run/cloudera-scm-agent/*\",\n\"/var/run/argo/argoexec\") and not process.parent.command_line : \"/usr/bin/runc init\"\n","actions":[]}
{"id":"7e1c15d0-c965-4193-b717-62899ad12165","updated_at":"2025-06-15T07:42:37.574Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.322Z","created_by":"elastic","name":"Privilege Escalation via Rogue Named Pipe Impersonation","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies a privilege escalation attempt via rogue named pipe impersonation. An adversary may abuse this technique by masquerading as a known named pipe and manipulating a privileged process to connect to it.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Privilege Escalation via Rogue Named Pipe Impersonation\n\nNamed pipes in Windows facilitate inter-process communication, allowing data exchange between processes. Adversaries exploit this by creating rogue named pipes, tricking privileged processes into connecting and executing malicious actions under elevated privileges. The detection rule identifies suspicious named pipe creation events, focusing on patterns indicative of impersonation attempts, thus flagging potential privilege escalation activities.\n\n### Possible investigation steps\n\n- Review the event logs for the specific named pipe creation event identified by the query, focusing on the file.name field to determine the exact named pipe path and assess its legitimacy.\n- Correlate the event with the process that created the named pipe by examining related process creation logs, identifying the process ID and executable responsible for the action.\n- Investigate the user context under which the named pipe was created to determine if it aligns with expected behavior or if it indicates potential misuse of privileges.\n- Check for any recent changes or anomalies in the system's configuration or user accounts that could suggest unauthorized access or privilege escalation attempts.\n- Analyze historical data for similar named pipe creation events to identify patterns or repeated attempts that could indicate a persistent threat or ongoing attack.\n\n### False positive analysis\n\n- Legitimate software or system processes may create named pipes that match the detection pattern. Regularly review and whitelist known benign processes that frequently create named pipes to reduce noise.\n- System management tools and monitoring software might generate named pipe creation events as part of their normal operation. Identify these tools and exclude their events from triggering alerts.\n- Custom in-house applications that use named pipes for inter-process communication can trigger false positives. Work with development teams to document these applications and create exceptions for their activity.\n- Scheduled tasks or scripts that run with elevated privileges and create named pipes could be mistaken for malicious activity. Ensure these tasks are documented and excluded from the detection rule.\n- Security software or endpoint protection solutions may use named pipes for legitimate purposes. Verify these activities and adjust the rule to prevent unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.\n- Terminate any suspicious processes associated with the rogue named pipe to halt any ongoing malicious activities.\n- Conduct a thorough review of the system's event logs, focusing on named pipe creation events, to identify any other potentially compromised processes or systems.\n- Reset credentials for any accounts that may have been exposed or used in the privilege escalation attempt to prevent further unauthorized access.\n- Apply security patches and updates to the affected system to address any vulnerabilities that may have been exploited.\n- Implement enhanced monitoring for named pipe creation events across the network to detect and respond to similar threats in the future.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to ensure comprehensive remediation efforts are undertaken.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"76ddb638-abf7-42d5-be22-4a70b0bf7241","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/"}]}],"to":"now","references":["https://itm4n.github.io/printspoofer-abusing-impersonate-privileges/","https://github.com/zcgonvh/EfsPotato","https://twitter.com/SBousseaden/status/1429530155291193354"],"version":210,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"event.provider","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true}],"setup":"## Setup\n\nNamed Pipe Creation Events need to be enabled within the Sysmon configuration by including the following settings:\n`condition equal \"contains\" and keyword equal \"pipe\"`\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-windows.sysmon_operational-*"],"query":"file where host.os.type == \"windows\" and\n  event.provider == \"Microsoft-Windows-Sysmon\" and\n  \n  /* Named Pipe Creation */\n  event.code == \"17\" and\n  \n  /* Sysmon truncates the \"Pipe\" keyword in normal named pipe creation events */\n  file.name : \"\\\\*\\\\Pipe\\\\*\"\n","actions":[]}
{"id":"965d6d64-c00b-4644-9900-930899955bc5","updated_at":"2025-06-15T07:42:35.570Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.273Z","created_by":"elastic","name":"AdminSDHolder SDProp Exclusion Added","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Data Source: Active Directory","Resources: Investigation Guide","Use Case: Active Directory Monitoring","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies a modification on the dsHeuristics attribute on the bit that holds the configuration of groups excluded from the SDProp process. The SDProp compares the permissions on protected objects with those defined on the AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, the permissions on the protected accounts and groups are reset to match those of the domain's AdminSDHolder object, meaning that groups excluded will remain unchanged. Attackers can abuse this misconfiguration to maintain long-term access to privileged accounts in these groups.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating AdminSDHolder SDProp Exclusion Added\n\nThe SDProp process compares the permissions on protected objects with those defined on the AdminSDHolder object. If the permissions on any of the protected accounts and groups do not match, it resets the permissions on the protected accounts and groups to match those defined in the domain AdminSDHolder object.\n\nThe dSHeuristics is a Unicode string attribute, in which each character in the string represents a heuristic that is used to determine the behavior of Active Directory.\n\nAdministrators can use the dSHeuristics attribute to exclude privilege groups from the SDProp process by setting the 16th bit (dwAdminSDExMask) of the string to a certain value, which represents the group(s):\n\n- For example, to exclude the Account Operators group, an administrator would modify the string, so the 16th character is set to 1 (i.e., 0000000001000001).\n\nThe usage of this exclusion can leave the accounts unprotected and facilitate the misconfiguration of privileges for the excluded groups, enabling attackers to add accounts to these groups to maintain long-term persistence with high privileges.\n\nThis rule matches changes of the dsHeuristics object where the 16th bit is set to a value other than zero.\n\n#### Possible investigation steps\n\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account and system owners and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Check the value assigned to the 16th bit of the string on the `winlog.event_data.AttributeValue` field:\n    - Account Operators eq 1\n    - Server Operators eq 2\n    - Print Operators eq 4\n    - Backup Operators eq 8\n    The field value can range from 0 to f (15). If more than one group is specified, the values will be summed together; for example, Backup Operators and Print Operators will set the `c` value on the bit.\n\n### False positive analysis\n\n- While this modification can be done legitimately, it is not a best practice. Any potential benign true positive (B-TP) should be mapped and reviewed by the security team for alternatives as this weakens the security of the privileged group.\n\n### Response and remediation\n\n- The change can be reverted by setting the dwAdminSDExMask (16th bit) to 0 in dSHeuristics.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"61d29caf-6c15-4d1e-9ccb-7ad12ccc0bc7","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/","subtechnique":[{"id":"T1078.002","name":"Domain Accounts","reference":"https://attack.mitre.org/techniques/T1078/002/"}]},{"id":"T1098","name":"Account Manipulation","reference":"https://attack.mitre.org/techniques/T1098/"}]}],"to":"now","references":["https://www.cert.ssi.gouv.fr/uploads/guide-ad.html#dsheuristics_bad","https://petri.com/active-directory-security-understanding-adminsdholder-object"],"version":216,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.AttributeLDAPDisplayName","type":"unknown","ecs":false},{"name":"winlog.event_data.AttributeValue","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'Audit Directory Service Changes' logging policy must be configured for (Success).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Changes (Success)\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"any where event.code == \"5136\" and\n  winlog.event_data.AttributeLDAPDisplayName : \"dSHeuristics\" and\n  length(winlog.event_data.AttributeValue) > 15 and\n  winlog.event_data.AttributeValue regex~ \"[0-9]{15}([1-9a-f]).*\"\n","actions":[]}
{"id":"0ba1cc53-d39d-4829-b50f-96f3fc61f281","updated_at":"2025-06-15T08:06:07.044Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.140Z","created_by":"elastic","name":"Disable Windows Firewall Rules via Netsh","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies use of the netsh.exe to disable or weaken the local firewall. Attackers will use this command line tool to disable the firewall during troubleshooting or to enable network mobility.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Disable Windows Firewall Rules via Netsh\n\nThe Windows Defender Firewall is a native component which provides host-based, two-way network traffic filtering for a device, and blocks unauthorized network traffic flowing into or out of the local device.\n\nAttackers can disable the Windows firewall or its rules to enable lateral movement and command and control activity.\n\nThis rule identifies patterns related to disabling the Windows firewall or its rules using the `netsh.exe` utility.\n\n#### Possible investigation steps\n\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the user to check if they are aware of the operation.\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n\n### False positive analysis\n\n- This mechanism can be used legitimately. Check whether the user is an administrator and is legitimately performing troubleshooting.\n- In case of an allowed benign true positive (B-TP), assess adding rules to allow needed traffic and re-enable the firewall.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"4b438734-3793-4fda-bd42-ceeada0be8f9","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.004","name":"Disable or Modify System Firewall","reference":"https://attack.mitre.org/techniques/T1562/004/"}]}]}],"to":"now","references":[],"version":315,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.name : \"netsh.exe\" and\n  (\n    (process.args : \"disable\" and process.args : \"firewall\" and process.args : \"set\") or\n    (process.args : \"advfirewall\" and process.args : \"off\" and process.args : \"state\")\n  )\n","actions":[]}
{"id":"01a522d8-dbf6-4fa9-a3f0-b5dbfd0b428d","updated_at":"2025-06-15T07:42:37.579Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.615Z","created_by":"elastic","name":"Remote File Download via Script Interpreter","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Command and Control","Tactic: Execution","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: Sysmon"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies built-in Windows script interpreters (cscript.exe or wscript.exe) being used to download an executable file from a remote destination.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Remote File Download via Script Interpreter\n\nThe Windows Script Host (WSH) is a Windows automation technology, which is ideal for non-interactive scripting needs, such as logon scripting, administrative scripting, and machine automation.\n\nAttackers commonly use WSH scripts as their initial access method, acting like droppers for second stage payloads, but can also use them to download tools and utilities needed to accomplish their goals.\n\nThis rule looks for DLLs and executables downloaded using `cscript.exe` or `wscript.exe`.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze both the script and the executable involved using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- The usage of these script engines by regular users is unlikely. In the case of authorized benign true positives (B-TPs), exceptions can be added.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"1d276579-3380-4095-ad38-e596a01bc64f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1105","name":"Ingress Tool Transfer","reference":"https://attack.mitre.org/techniques/T1105/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.005","name":"Visual Basic","reference":"https://attack.mitre.org/techniques/T1059/005/"}]}]}],"to":"now","references":[],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"network.protocol","type":"keyword","ecs":true},{"name":"network.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.network-*","logs-endpoint.events.file-*","logs-windows.sysmon_operational-*"],"query":"sequence by host.id, process.entity_id\n  [network where host.os.type == \"windows\" and process.name : (\"wscript.exe\", \"cscript.exe\") and network.protocol != \"dns\" and\n   network.direction : (\"outgoing\", \"egress\") and network.type == \"ipv4\" and destination.ip != \"127.0.0.1\"\n  ]\n  [file where host.os.type == \"windows\" and event.type == \"creation\" and file.extension : (\"exe\", \"dll\")]\n","actions":[]}
{"id":"3156cdb6-a17f-433b-a0ca-2592141360e5","updated_at":"2025-06-15T07:42:32.534Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:45.177Z","created_by":"elastic","name":"Sensitive Registry Hive Access via RegBack","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies attempts to access sensitive registry hives which contain credentials from the registry backup folder.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Sensitive Registry Hive Access via RegBack\n\nCollecting registry hives is a common way to access credential information as some hives store credential material.\n\nFor example, the SAM hive stores locally cached credentials (SAM Secrets), and the SECURITY hive stores domain cached credentials (LSA secrets).\n\nDumping these hives in combination with the SYSTEM hive enables the attacker to decrypt these secrets.\n\n#### Possible investigation steps\n\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate if the credential material was exfiltrated or processed locally by other tools.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (e.g., 4624) to the target host.\n\n### False positive analysis\n\n- Administrators can export registry hives for backup purposes. Check whether the user is legitamitely performing this kind of activity.\n\n### Related rules\n\n- Registry Hive File Creation via SMB - a4c7473a-5cb4-4bc1-9d06-e4a75adbc494\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Reimage the host operating system and restore compromised files to clean versions.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"63e381a6-0ffe-4afb-9a26-72a59ad16d7b","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.002","name":"Security Account Manager","reference":"https://attack.mitre.org/techniques/T1003/002/"},{"id":"T1003.004","name":"LSA Secrets","reference":"https://attack.mitre.org/techniques/T1003/004/"}]}]}],"to":"now","references":[],"version":5,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.outcome","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.file-*"],"query":"file where host.os.type == \"windows\" and \n event.action == \"open\" and event.outcome == \"success\" and process.executable != null and \n file.path :\n      (\"?:\\\\Windows\\\\System32\\\\config\\\\RegBack\\\\SAM\",\n       \"?:\\\\Windows\\\\System32\\\\config\\\\RegBack\\\\SECURITY\",\n       \"?:\\\\Windows\\\\System32\\\\config\\\\RegBack\\\\SYSTEM\") and \n not (\n    user.id == \"S-1-5-18\" and process.executable : (\n        \"?:\\\\Windows\\\\system32\\\\taskhostw.exe\", \"?:\\\\Windows\\\\system32\\\\taskhost.exe\"\n    ))\n","actions":[]}
{"id":"b5ea76f1-7166-420b-8017-8b042776ed23","updated_at":"2025-06-15T07:48:27.989Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.422Z","created_by":"elastic","name":"Suspicious Cmd Execution via WMI","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious command execution (cmd) via Windows Management Instrumentation (WMI) on a remote host. This could be indicative of adversary lateral movement.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Cmd Execution via WMI\n\nWindows Management Instrumentation (WMI) is a powerful framework for managing data and operations on Windows systems. Adversaries exploit WMI for lateral movement by executing commands remotely, often using cmd.exe. The detection rule identifies such activity by monitoring for cmd.exe processes initiated by WmiPrvSE.exe with specific arguments, indicating potential misuse for executing commands on remote hosts.\n\n### Possible investigation steps\n\n- Review the process details to confirm the parent-child relationship between WmiPrvSE.exe and cmd.exe, ensuring that cmd.exe was indeed initiated by WmiPrvSE.exe.\n- Examine the command-line arguments used by cmd.exe, specifically looking for the presence of \"\\\\\\\\127.0.0.1\\\\*\" and redirection operators like \"2>&1\" or \"1>\", to understand the nature of the command executed.\n- Investigate the source and destination IP addresses involved in the WMI activity to determine if the remote host is legitimate or potentially compromised.\n- Check for any related alerts or logs from the same host or user account around the same timeframe to identify any patterns or additional suspicious activities.\n- Correlate the event with user activity logs to determine if the command execution aligns with expected user behavior or if it appears anomalous.\n- Consult threat intelligence sources to see if the command or pattern matches known adversary techniques or campaigns.\n\n### False positive analysis\n\n- Legitimate administrative tasks using WMI may trigger this rule. System administrators often use WMI for remote management, which can include executing scripts or commands. To handle this, identify and whitelist known administrative accounts or specific scripts that are regularly used for maintenance.\n- Automated scripts or software that rely on WMI for legitimate operations might also cause false positives. Review and document these processes, then create exceptions for them in the detection rule to prevent unnecessary alerts.\n- Security software or monitoring tools that utilize WMI for system checks can inadvertently match the rule's criteria. Verify these tools and exclude their specific processes or arguments from the rule to reduce noise.\n- Scheduled tasks or system updates that use WMI for execution might be flagged. Regularly review scheduled tasks and update the rule to exclude these known benign activities.\n- Internal network monitoring or testing tools that simulate attacks for security assessments may trigger alerts. Ensure these activities are logged and excluded from the rule to avoid confusion during security evaluations.\n\n### Response and remediation\n\n- Isolate the affected host immediately to prevent further lateral movement and potential data exfiltration. Disconnect it from the network while maintaining power to preserve volatile data for forensic analysis.\n- Terminate any suspicious cmd.exe processes initiated by WmiPrvSE.exe to halt any ongoing malicious activities.\n- Conduct a thorough review of the affected system's WMI subscriptions and scripts to identify and remove any unauthorized or malicious entries.\n- Reset credentials for any accounts that were used in the suspicious activity to prevent further unauthorized access.\n- Apply security patches and updates to the affected system to address any vulnerabilities that may have been exploited.\n- Enhance monitoring and logging for WMI activities across the network to detect similar threats in the future, ensuring that logs are retained for an adequate period for forensic purposes.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems have been compromised.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"12f07955-1674-44f7-86b5-c35da0a6f41a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1047","name":"Windows Management Instrumentation","reference":"https://attack.mitre.org/techniques/T1047/"},{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.003","name":"Windows Command Shell","reference":"https://attack.mitre.org/techniques/T1059/003/"}]}]}],"to":"now","references":["https://www.elastic.co/security-labs/elastic-protects-against-data-wiper-malware-targeting-ukraine-hermeticwiper","https://www.elastic.co/security-labs/operation-bleeding-bear"],"version":319,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n process.parent.name : \"WmiPrvSE.exe\" and process.name : \"cmd.exe\" and process.args : \"/c\" and process.args:\"/Q\" and \n process.args : \"2>&1\" and process.args: \"1>\"  and \n process.args : (\"C:\\\\windows\\\\temp\\\\*.txt\", \"\\\\Windows\\\\Temp\\\\*\", \"-encodehex\", \"\\\\\\\\127.0.0.1\\\\C$\\\\Windows\\\\Temp\\\\*\", \"\\\\\\\\127.0.0.1\\\\ADMIN$\\\\__*.*\")\n","actions":[]}
{"id":"067b3360-7b1d-4daa-ba5e-05f37c711044","updated_at":"2025-06-15T07:42:37.581Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.794Z","created_by":"elastic","name":"Potential LSASS Clone Creation via PssCaptureSnapShot","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Sysmon","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the creation of an LSASS process clone via PssCaptureSnapShot where the parent process is the initial LSASS process instance. This may indicate an attempt to evade detection and dump LSASS memory for credential access.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential LSASS Clone Creation via PssCaptureSnapShot\n\nPssCaptureSnapShot is a Windows API used for creating snapshots of processes, often for debugging. Adversaries exploit this to clone the LSASS process, aiming to extract credentials without detection. The detection rule identifies suspicious LSASS clones by monitoring process creation events where both the process and its parent are LSASS, signaling potential credential dumping attempts.\n\n### Possible investigation steps\n\n- Review the process creation event logs for the specific event code 4688 to confirm the creation of an LSASS process clone. Verify that both the process and its parent have the executable path \"?:\\Windows\\System32\\lsass.exe\".\n- Check the timeline of events to determine if there are any preceding or subsequent suspicious activities related to the LSASS process, such as unusual access patterns or modifications.\n- Investigate the user account and privileges associated with the process creation event to assess if the account has legitimate reasons to interact with LSASS or if it might be compromised.\n- Analyze network activity from the host to identify any potential data exfiltration attempts or connections to known malicious IP addresses following the LSASS clone creation.\n- Correlate this event with other security alerts or logs from the same host to identify if this is part of a broader attack pattern or isolated incident.\n- Examine the host for any signs of malware or tools commonly used for credential dumping, such as Mimikatz, that might have been used in conjunction with the LSASS clone creation.\n\n### False positive analysis\n\n- Legitimate security software or system management tools may create LSASS process snapshots for monitoring or debugging purposes. Identify these tools and create exceptions for their process creation events to avoid false positives.\n- System administrators or IT personnel might use authorized scripts or tools that interact with LSASS for legitimate reasons. Verify these activities and whitelist the associated processes to prevent unnecessary alerts.\n- During system updates or patches, certain processes might temporarily mimic suspicious behavior. Monitor these updates and temporarily adjust detection rules to accommodate expected changes in process behavior.\n- Some enterprise environments may have custom applications that interact with LSASS for performance monitoring. Document these applications and exclude their process creation events from triggering alerts.\n- Regularly review and update the list of known benign processes and tools that interact with LSASS to ensure that the detection rule remains effective without generating excessive false positives.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further credential access or lateral movement by the adversary.\n- Terminate any suspicious LSASS clone processes identified by the detection rule to halt ongoing credential dumping activities.\n- Conduct a thorough memory analysis of the affected system to identify any additional malicious activities or tools used by the adversary.\n- Change all potentially compromised credentials, especially those with administrative privileges, to mitigate the risk of unauthorized access.\n- Review and enhance endpoint security configurations to ensure that LSASS process memory is protected from unauthorized access, such as enabling Credential Guard if applicable.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine the scope of the breach.\n- Implement additional monitoring and alerting for similar suspicious activities, focusing on process creation events involving LSASS, to improve early detection of future attempts.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"a16612dd-b30e-4d41-86a0-ebe70974ec00","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"to":"now","references":["https://www.matteomalvica.com/blog/2019/12/02/win-defender-atp-cred-bypass/","https://medium.com/@Achilles8284/the-birth-of-a-process-part-2-97c6fb9c42a2"],"version":212,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.code:\"4688\" and\n  process.executable : \"?:\\\\Windows\\\\System32\\\\lsass.exe\" and\n  process.parent.executable : \"?:\\\\Windows\\\\System32\\\\lsass.exe\"\n","actions":[]}
{"id":"289b09c9-fd08-4a94-a7b3-b7ef2d9a653e","updated_at":"2025-06-15T07:58:20.922Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:38.963Z","created_by":"elastic","name":"WMI Incoming Lateral Movement","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies processes executed via Windows Management Instrumentation (WMI) on a remote host. This could be indicative of adversary lateral movement, but could be noisy if administrators use WMI to remotely manage hosts.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating WMI Incoming Lateral Movement\n\nWindows Management Instrumentation (WMI) is a core Windows feature enabling remote management and data collection. Adversaries exploit WMI for lateral movement by executing processes on remote hosts, often bypassing traditional security measures. The detection rule identifies suspicious WMI activity by monitoring specific network connections and process executions, filtering out common false positives to highlight potential threats.\n\n### Possible investigation steps\n\n- Review the source IP address of the incoming RPC connection to determine if it is from a known or trusted network segment, excluding localhost addresses like 127.0.0.1 and ::1.\n- Check the process name and parent process name, specifically looking for svchost.exe and WmiPrvSE.exe, to confirm the execution context and identify any unusual parent-child process relationships.\n- Investigate the user ID associated with the process execution to ensure it is not a system account (S-1-5-18, S-1-5-19, S-1-5-20) and assess if the user has legitimate reasons for remote WMI activity.\n- Examine the process executable path to verify it is not one of the excluded common false positives, such as those related to HPWBEM, SCCM, or other specified system utilities.\n- Analyze the network connection details, including source and destination ports, to identify any patterns or anomalies that could indicate malicious lateral movement.\n- Correlate the alert with other security events or logs from the same host or network segment to gather additional context and identify potential patterns of compromise.\n\n### False positive analysis\n\n- Administrative use of WMI for remote management can trigger alerts. To manage this, create exceptions for known administrative accounts or specific IP addresses used by IT staff.\n- Security tools like Nessus and SCCM may cause false positives. Exclude processes associated with these tools by adding their executables to the exception list.\n- System processes running with high integrity levels might be flagged. Exclude processes with integrity levels marked as \"System\" to reduce noise.\n- Specific executables such as msiexec.exe and appcmd.exe with certain arguments can be safely excluded if they are part of routine administrative tasks.\n- Regularly review and update the exception list to ensure it aligns with current network management practices and tools.\n\n### Response and remediation\n\n- Isolate the affected host immediately from the network to prevent further lateral movement by the adversary. This can be done by disabling network interfaces or using network segmentation tools.\n- Terminate any suspicious processes identified as being executed via WMI on the affected host. Use task management tools or scripts to stop these processes.\n- Conduct a thorough review of the affected host's WMI logs and process execution history to identify any unauthorized changes or additional malicious activity.\n- Reset credentials for any accounts that were used in the suspicious WMI activity, especially if they have administrative privileges, to prevent further unauthorized access.\n- Apply patches and updates to the affected host and any other systems that may be vulnerable to similar exploitation methods, ensuring that all security updates are current.\n- Enhance monitoring and logging for WMI activity across the network to detect and respond to similar threats more quickly in the future. This includes setting up alerts for unusual WMI usage patterns.\n- If the threat is confirmed to be part of a larger attack, escalate the incident to the appropriate security team or authority for further investigation and potential legal action.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"f3475224-b179-4f78-8877-c2bd64c26b88","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1047","name":"Windows Management Instrumentation","reference":"https://attack.mitre.org/techniques/T1047/"}]}],"to":"now","references":[],"version":215,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"destination.port","type":"long","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"process.Ext.token.integrity_level_name","type":"unknown","ecs":false},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true},{"name":"user.id","type":"keyword","ecs":true},{"name":"winlog.event_data.IntegrityLevel","type":"unknown","ecs":false}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.network-*","logs-windows.sysmon_operational-*"],"query":"sequence by host.id with maxspan = 20s\n\n /* Accepted Incoming RPC connection by Winmgmt service */\n\n  [network where host.os.type == \"windows\" and process.name : \"svchost.exe\" and network.direction : (\"incoming\", \"ingress\") and\n   source.ip != \"127.0.0.1\" and source.ip != \"::1\" and destination.port == 135]\n\n  /* Excluding Common FPs Nessus and SCCM */\n\n  [process where host.os.type == \"windows\" and event.type == \"start\" and process.parent.name : \"WmiPrvSE.exe\" and\n   not (?process.Ext.token.integrity_level_name : \"System\" or ?winlog.event_data.IntegrityLevel : \"System\") and\n   not (\n         user.id : (\"S-1-5-18\", \"S-1-5-19\", \"S-1-5-20\") and\n         /* Don't apply the user.id exclusion to Sysmon for compatibility */\n         not event.dataset : (\"windows.sysmon_operational\", \"windows.sysmon\")\n   ) and\n   not process.executable :\n               (\"?:\\\\Program Files\\\\HPWBEM\\\\Tools\\\\hpsum_swdiscovery.exe\",\n                \"?:\\\\Windows\\\\CCM\\\\Ccm32BitLauncher.exe\",\n                \"?:\\\\Windows\\\\System32\\\\wbem\\\\mofcomp.exe\",\n                \"?:\\\\Windows\\\\Microsoft.NET\\\\Framework*\\\\csc.exe\",\n                \"?:\\\\Windows\\\\System32\\\\powercfg.exe\") and\n   not (process.executable : \"?:\\\\Windows\\\\System32\\\\msiexec.exe\" and process.args : \"REBOOT=ReallySuppress\") and\n   not (process.executable : \"?:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe\" and process.args : \"uninstall\")\n   ]\n","actions":[]}
{"id":"6714965b-aff9-4abf-826b-4b8557a1332b","updated_at":"2025-06-15T07:56:55.851Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:41.066Z","created_by":"elastic","name":"Potential Linux Hack Tool Launched","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Auditd Manager","Data Source: Crowdstrike","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Monitors for the execution of different processes that might be used by attackers for malicious intent. An alert from this rule should be investigated further, as hack tools are commonly used by blue teamers and system administrators as well.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Linux Hack Tool Launched\n\nLinux environments often utilize various tools for system administration and security testing. While these tools serve legitimate purposes, adversaries can exploit them for malicious activities, such as unauthorized access or data exfiltration. The detection rule identifies suspicious process executions linked to known hacking tools, flagging potential misuse by monitoring specific process names and actions indicative of exploitation attempts.\n\n### Possible investigation steps\n\n- Review the process name that triggered the alert to determine if it matches any known hacking tools listed in the query, such as \"crackmapexec\" or \"sqlmap\".\n- Check the user account associated with the process execution to assess if it is a legitimate user or potentially compromised.\n- Investigate the source and destination IP addresses involved in the process execution to identify any unusual or unauthorized network activity.\n- Examine the command line arguments used during the process execution to understand the intent and scope of the activity.\n- Correlate the event with other logs or alerts from the same host to identify any patterns or additional suspicious activities.\n- Verify if the process execution aligns with any scheduled tasks or known administrative activities to rule out false positives.\n\n### False positive analysis\n\n- System administrators and security teams often use tools like \"john\", \"hashcat\", and \"hydra\" for legitimate security testing and password recovery. To reduce false positives, create exceptions for these tools when used by authorized personnel or during scheduled security assessments.\n- Blue team exercises may involve the use of exploitation frameworks such as \"msfconsole\" and \"msfvenom\". Implement a process to whitelist these activities when they are part of a sanctioned security drill.\n- Network scanning tools like \"zenmap\" and \"nuclei\" are frequently used for network mapping and vulnerability assessments. Establish a baseline of normal usage patterns and exclude these from alerts when they match expected behavior.\n- Web enumeration tools such as \"gobuster\" and \"dirbuster\" might be used by web developers for testing purposes. Coordinate with development teams to identify legitimate use cases and exclude these from triggering alerts.\n- Regularly review and update the list of excluded processes to ensure that only non-threatening activities are exempted, maintaining a balance between security and operational efficiency.\n\n### Response and remediation\n\n- Immediately isolate the affected Linux host from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified by the alert, such as those listed in the detection query, to halt potential malicious activities.\n- Conduct a thorough review of system logs and process execution history to identify any additional indicators of compromise or lateral movement attempts.\n- Restore the affected system from a known good backup if any unauthorized changes or data exfiltration are confirmed.\n- Update and patch all software and applications on the affected host to mitigate vulnerabilities that could be exploited by the identified tools.\n- Implement stricter access controls and monitoring on the affected host to prevent unauthorized execution of potentially malicious tools in the future.\n- Escalate the incident to the security operations team for further analysis and to determine if additional systems may be affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"1df1152b-610a-4f48-9d7a-504f6ee5d9da","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[]}],"to":"now","references":[],"version":108,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"auditd_manager","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows\nthe Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest to select \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["auditbeat-*","endgame-*","logs-auditd_manager.auditd-*","logs-crowdstrike.fdr*","logs-endpoint.events.process*","logs-sentinel_one_cloud_funnel.*"],"query":"process where host.os.type == \"linux\" and event.type == \"start\" and\nevent.action in (\"exec\", \"exec_event\", \"start\", \"ProcessRollup2\", \"executed\", \"process_started\") and\nprocess.name in~ (\n  // exploitation frameworks\n  \"crackmapexec\", \"msfconsole\", \"msfvenom\", \"sliver-client\", \"sliver-server\", \"havoc\",\n  // network scanners (nmap left out to reduce noise)\n  \"zenmap\", \"nuclei\", \"netdiscover\", \"legion\",\n  // web enumeration\n  \"gobuster\", \"dirbuster\", \"dirb\", \"wfuzz\", \"ffuf\", \"whatweb\", \"eyewitness\",\n  // web vulnerability scanning\n  \"wpscan\", \"joomscan\", \"droopescan\", \"nikto\",\n  // exploitation tools\n  \"sqlmap\", \"commix\", \"yersinia\",\n  // cracking and brute forcing\n  \"john\", \"hashcat\", \"hydra\", \"ncrack\", \"cewl\", \"fcrackzip\", \"rainbowcrack\",\n  // host and network\n  \"linenum.sh\", \"linpeas.sh\", \"pspy32\", \"pspy32s\", \"pspy64\", \"pspy64s\", \"binwalk\", \"evil-winrm\",\n  \"linux-exploit-suggester-2.pl\", \"linux-exploit-suggester.sh\", \"panix.sh\"\n)\n","actions":[]}
{"id":"de5934c5-0848-44d6-bafd-45b064d46c6c","updated_at":"2025-06-15T07:44:55.665Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.146Z","created_by":"elastic","name":"UAC Bypass Attempt with IEditionUpgradeManager Elevated COM Interface","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Tactic: Defense Evasion","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies attempts to bypass User Account Control (UAC) by abusing an elevated COM Interface to launch a rogue Windows ClipUp program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating UAC Bypass Attempt with IEditionUpgradeManager Elevated COM Interface\n\nUser Account Control (UAC) is a security feature in Windows designed to prevent unauthorized changes by prompting for elevated permissions. The IEditionUpgradeManager COM interface can be exploited by attackers to bypass UAC, allowing them to execute code with elevated privileges without user consent. This detection rule identifies such attempts by monitoring for the execution of the ClipUp program from non-standard paths, initiated by a specific COM interface, indicating potential misuse for privilege escalation.\n\n### Possible investigation steps\n\n- Review the process execution details to confirm the presence of ClipUp.exe running from a non-standard path, as indicated by the process.executable field not matching \"C:\\Windows\\System32\\ClipUp.exe\".\n- Investigate the parent process, dllhost.exe, to determine if it was legitimately initiated or if it shows signs of compromise, focusing on the process.parent.args field to verify the use of the specific COM interface CLSID: /Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}.\n- Check the user account context under which ClipUp.exe was executed to assess if it aligns with expected user behavior or if it suggests unauthorized access.\n- Correlate this event with other security logs and alerts from data sources like Elastic Endgame, Elastic Defend, Sysmon, Microsoft Defender for Endpoint, or SentinelOne to identify any related suspicious activities or patterns.\n- Examine recent changes or anomalies in system configurations or installed software that might indicate preparation for or execution of a UAC bypass attempt.\n- If available, review network activity logs for any unusual outbound connections or data exfiltration attempts following the execution of ClipUp.exe.\n\n### False positive analysis\n\n- Legitimate software updates or installations may trigger the rule if they temporarily use non-standard paths for ClipUp.exe. Verify the source and purpose of the process to determine if it is part of a legitimate update or installation.\n- Custom scripts or administrative tools that utilize ClipUp.exe from non-standard paths for legitimate purposes can cause false positives. Review the script or tool usage and consider excluding these specific paths if they are verified as safe.\n- Software testing environments where ClipUp.exe is executed from non-standard paths for testing purposes may trigger the rule. Implement exclusions for known testing environments to prevent unnecessary alerts.\n- Automated deployment tools that use ClipUp.exe from non-standard paths as part of their deployment process can be mistaken for malicious activity. Confirm the deployment tool's behavior and add exceptions for its known operations.\n- In environments where multiple users have administrative privileges, legitimate administrative actions might inadvertently match the rule's criteria. Regularly audit administrative actions and consider excluding known benign activities.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Terminate the ClipUp.exe process if it is running from a non-standard path to stop any ongoing malicious activity.\n- Conduct a thorough review of the system's recent activity logs to identify any additional unauthorized changes or suspicious behavior.\n- Restore any altered system files or configurations to their original state using known good backups or system restore points.\n- Update and patch the operating system and all installed software to the latest versions to mitigate known vulnerabilities.\n- Implement application whitelisting to prevent unauthorized programs from executing, focusing on blocking non-standard paths for critical system executables.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"b90cdde7-7e0d-4359-8bf0-2c112ce2008a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1559","name":"Inter-Process Communication","reference":"https://attack.mitre.org/techniques/T1559/","subtechnique":[{"id":"T1559.001","name":"Component Object Model","reference":"https://attack.mitre.org/techniques/T1559/001/"}]}]}],"to":"now","references":["https://github.com/hfiref0x/UACME"],"version":312,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-windows.sysmon_operational-*","endgame-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and process.name : \"Clipup.exe\" and\n  not process.executable : \"C:\\\\Windows\\\\System32\\\\ClipUp.exe\" and process.parent.name : \"dllhost.exe\" and\n  /* CLSID of the Elevated COM Interface IEditionUpgradeManager */\n  process.parent.args : \"/Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}\"\n","actions":[]}
{"id":"c2c98919-06d8-4734-87da-3a67a46e42f5","updated_at":"2025-06-15T07:42:35.558Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:45.122Z","created_by":"elastic","name":"Potential Privilege Escalation via InstallerFileTakeOver","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Resources: Investigation Guide","Use Case: Vulnerability","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies a potential exploitation of InstallerTakeOver (CVE-2021-41379) default PoC execution. Successful exploitation allows an unprivileged user to escalate privileges to SYSTEM.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Privilege Escalation via InstallerFileTakeOver\n\nInstallerFileTakeOver is a weaponized escalation of privilege proof of concept (EoP PoC) to the CVE-2021-41379 vulnerability. Upon successful exploitation, an unprivileged user will escalate privileges to SYSTEM/NT AUTHORITY.\n\nThis rule detects the default execution of the PoC, which overwrites the `elevation_service.exe` DACL and copies itself to the location to escalate privileges. An attacker is able to still take over any file that is not in use (locked), which is outside the scope of this rule.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Look for additional processes spawned by the process, command lines, and network communications.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the file using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- Verify whether a digital signature exists in the executable, and if it is valid.\n\n### Related rules\n\n- Suspicious DLL Loaded for Persistence or Privilege Escalation - bfeaf89b-a2a7-48a3-817f-e41829dc61ee\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"58c6d58b-a0d3-412d-b3b8-0981a9400607","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"}]}],"to":"now","references":["https://github.com/klinix5/InstallerFileTakeOver"],"version":114,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.Ext.token.integrity_level_name","type":"unknown","ecs":false},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["logs-endpoint.events.process-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n    process.Ext.token.integrity_level_name : \"System\" and\n    (\n      (process.name : \"elevation_service.exe\" and\n       not process.pe.original_file_name == \"elevation_service.exe\") or\n      \n      (process.name : \"elevation_service.exe\" and\n       not process.code_signature.trusted == true) or\n\n      (process.parent.name : \"elevation_service.exe\" and\n       process.name : (\"rundll32.exe\", \"cmd.exe\", \"powershell.exe\"))\n    ) and\n    not\n    (\n      process.name : \"elevation_service.exe\" and process.code_signature.trusted == true and\n      process.pe.original_file_name == null\n    )\n","actions":[]}
{"id":"4c6948da-9523-435f-91fa-10704cac63a5","updated_at":"2025-06-15T07:47:14.872Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.645Z","created_by":"elastic","name":"Suspicious Process Access via Direct System Call","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Tactic: Execution","Resources: Investigation Guide","Data Source: Sysmon"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious process access events from an unknown memory region. Endpoint security solutions usually hook userland Windows APIs in order to decide if the code that is being executed is malicious or not. It's possible to bypass hooked functions by writing malicious functions that call syscalls directly.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Suspicious Process Access via Direct System Call\n\nEndpoint security solutions usually hook userland Windows APIs in order to decide if the code that is being executed is malicious or not. It's possible to bypass hooked functions by writing malicious functions that call syscalls directly.\n\nMore context and technical details can be found in this [research blog](https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/).\n\nThis rule identifies suspicious process access events from an unknown memory region. Attackers can use direct system calls to bypass security solutions that rely on hooks.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications, and any spawned child processes.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n\n### False positive analysis\n\n- This detection may be triggered by certain applications that install root certificates for the purpose of inspecting SSL traffic. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove the malicious certificate from the root certificate store.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"2dd480be-1263-4d9c-8672-172928f6789a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1055","name":"Process Injection","reference":"https://attack.mitre.org/techniques/T1055/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1106","name":"Native API","reference":"https://attack.mitre.org/techniques/T1106/"}]}],"to":"now","references":["https://twitter.com/SBousseaden/status/1278013896440324096","https://www.ired.team/offensive-security/defense-evasion/using-syscalls-directly-from-visual-studio-to-bypass-avs-edrs"],"version":314,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"winlog.event_data.CallTrace","type":"keyword","ecs":false},{"name":"winlog.event_data.TargetImage","type":"keyword","ecs":false}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-windows.sysmon_operational-*"],"query":"process where host.os.type == \"windows\" and event.code == \"10\" and\n length(winlog.event_data.CallTrace) > 0 and\n\n /* Sysmon CallTrace starting with unknown memory module instead of ntdll which host Windows NT Syscalls */\n not winlog.event_data.CallTrace :\n            (\"?:\\\\WINDOWS\\\\SYSTEM32\\\\ntdll.dll*\",\n             \"?:\\\\WINDOWS\\\\SysWOW64\\\\ntdll.dll*\",\n             \"?:\\\\Windows\\\\System32\\\\wow64cpu.dll*\",\n             \"?:\\\\WINDOWS\\\\System32\\\\wow64win.dll*\",\n             \"?:\\\\Windows\\\\System32\\\\win32u.dll*\") and\n\n not winlog.event_data.TargetImage :\n            (\"?:\\\\Program Files (x86)\\\\Malwarebytes Anti-Exploit\\\\mbae-svc.exe\",\n             \"?:\\\\Program Files\\\\Cisco\\\\AMP\\\\*\\\\sfc.exe\",\n             \"?:\\\\Program Files (x86)\\\\Microsoft\\\\EdgeWebView\\\\Application\\\\*\\\\msedgewebview2.exe\",\n             \"?:\\\\Program Files\\\\Adobe\\\\Acrobat DC\\\\Acrobat\\\\*\\\\AcroCEF.exe\") and\n\n not (process.executable : (\"?:\\\\Program Files\\\\Adobe\\\\Acrobat DC\\\\Acrobat\\\\Acrobat.exe\",\n                            \"?:\\\\Program Files (x86)\\\\World of Warcraft\\\\_classic_\\\\WowClassic.exe\") and\n      not winlog.event_data.TargetImage : \"?:\\\\WINDOWS\\\\system32\\\\lsass.exe\")\n","actions":[]}
{"id":"f639e849-775e-41ed-89b7-b0d8133d9741","updated_at":"2025-06-15T07:42:35.552Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.907Z","created_by":"elastic","name":"Remote File Download via MpCmdRun","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Command and Control","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the Windows Defender configuration utility (MpCmdRun.exe) being used to download a remote file.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Remote File Download via MpCmdRun\n\nAttackers commonly transfer tooling or malware from external systems into a compromised environment using the command and control channel. However, they can also abuse signed utilities to drop these files.\n\nThe `MpCmdRun.exe` is a command-line tool part of Windows Defender and is used to manage various Microsoft Windows Defender Antivirus settings and perform certain tasks. It can also be abused by attackers to download remote files, including malware and offensive tooling. This rule looks for the patterns used to perform downloads using the utility.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n> This investigation guide uses the [Investigate Markdown Plugin](https://www.elastic.co/guide/en/security/current/interactive-investigation-guides.html) introduced in Elastic Stack version 8.8.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n  - !{investigate{\"label\":\"Alerts associated with the user in the last 48h\",\"providers\":[[{\"excluded\":false,\"field\":\"event.kind\",\"queryType\":\"phrase\",\"value\":\"signal\",\"valueType\":\"string\"},{\"excluded\":false,\"field\":\"user.id\",\"queryType\":\"phrase\",\"value\":\"{{user.id}}\",\"valueType\":\"string\"}]],\"relativeFrom\":\"now-48h/h\",\"relativeTo\":\"now\"}}\n  - !{investigate{\"label\":\"Alerts associated with the host in the last 48h\",\"providers\":[[{\"excluded\":false,\"field\":\"event.kind\",\"queryType\":\"phrase\",\"value\":\"signal\",\"valueType\":\"string\"},{\"excluded\":false,\"field\":\"host.name\",\"queryType\":\"phrase\",\"value\":\"{{host.name}}\",\"valueType\":\"string\"}]],\"relativeFrom\":\"now-48h/h\",\"relativeTo\":\"now\"}}\n- Check the reputation of the domain or IP address used to host the downloaded file.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the file using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n        - !{investigate{\"label\":\"Investigate the Subject Process Network Events\",\"providers\":[[{\"excluded\":false,\"field\":\"event.category\",\"queryType\":\"phrase\",\"value\":\"network\",\"valueType\":\"string\"},{\"excluded\":false,\"field\":\"process.entity_id\",\"queryType\":\"phrase\",\"value\":\"{{process.entity_id}}\",\"valueType\":\"string\"}]]}}\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c6453e73-90eb-4fe7-a98c-cde7bbfc504a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1105","name":"Ingress Tool Transfer","reference":"https://attack.mitre.org/techniques/T1105/"}]}],"to":"now","references":["https://twitter.com/mohammadaskar2/status/1301263551638761477","https://www.bleepingcomputer.com/news/microsoft/microsoft-defender-can-ironically-be-used-to-download-malware/"],"version":318,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  (process.name : \"MpCmdRun.exe\" or ?process.pe.original_file_name == \"MpCmdRun.exe\") and\n   process.args : \"-DownloadFile\" and process.args : \"-url\" and process.args : \"-path\"\n","actions":[]}
{"id":"e6622074-a10b-4f1c-b71f-d09bd826248d","updated_at":"2025-06-15T07:42:41.609Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.499Z","created_by":"elastic","name":"Unusual Child Process of dns.exe","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Resources: Investigation Guide","Data Source: Elastic Endgame","Use Case: Vulnerability","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies an unexpected process spawning from dns.exe, the process responsible for Windows DNS server services, which may indicate activity related to remote code execution or other forms of exploitation.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Unusual Child Process of dns.exe\n\nSIGRed (CVE-2020-1350) is a wormable, critical vulnerability in the Windows DNS server that affects Windows Server versions 2003 to 2019 and can be triggered by a malicious DNS response. Because the service is running in elevated privileges (SYSTEM), an attacker that successfully exploits it is granted Domain Administrator rights. This can effectively compromise the entire corporate infrastructure.\n\nThis rule looks for unusual children of the `dns.exe` process, which can indicate the exploitation of the SIGRed or a similar remote code execution vulnerability in the DNS server.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes.\n  - Any suspicious or abnormal child process spawned from dns.exe should be carefully reviewed and investigated. It's impossible to predict what an adversary may deploy as the follow-on process after the exploit, but built-in discovery/enumeration utilities should be top of mind (`whoami.exe`, `netstat.exe`, `systeminfo.exe`, `tasklist.exe`).\n  - Built-in Windows programs that contain capabilities used to download and execute additional payloads should also be considered. This is not an exhaustive list, but ideal candidates to start out would be: `mshta.exe`, `powershell.exe`, `regsvr32.exe`, `rundll32.exe`, `wscript.exe`, `wmic.exe`.\n  - If a denial-of-service (DoS) exploit is successful and DNS Server service crashes, be mindful of potential child processes related to `werfault.exe` occurring.\n- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications, and any spawned child processes.\n- Investigate other alerts associated with the host during the past 48 hours.\n- Check whether the server is vulnerable to CVE-2020-1350.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Reimage the host operating system or restore the compromised server to a clean state.\n- Install the latest patches on systems that run Microsoft DNS Server.\n- Consider the implementation of a patch management system, such as the Windows Server Update Services (WSUS).\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Werfault.exe will legitimately spawn when dns.exe crashes, but the DNS service is very stable and so this is a low occurring event. Denial of Service (DoS) attempts by intentionally crashing the service will also cause werfault.exe to spawn."],"from":"now-9m","rule_id":"8c37dc0e-e3ac-4c97-8aa0-cf6a9122de45","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1210","name":"Exploitation of Remote Services","reference":"https://attack.mitre.org/techniques/T1210/"}]}],"to":"now","references":["https://research.checkpoint.com/2020/resolving-your-way-into-domain-admin-exploiting-a-17-year-old-bug-in-windows-dns-servers/","https://msrc-blog.microsoft.com/2020/07/14/july-2020-security-update-cve-2020-1350-vulnerability-in-windows-domain-name-system-dns-server/","https://github.com/maxpl0it/CVE-2020-1350-DoS","https://www.elastic.co/security-labs/detection-rules-for-sigred-vulnerability"],"version":316,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and process.parent.name : \"dns.exe\" and\n  not process.name : \"conhost.exe\"\n","actions":[]}
{"id":"57497875-a416-41bd-8de8-1da48d3afc7a","updated_at":"2025-06-19T08:43:56.367Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.211Z","created_by":"elastic","name":"Potential Linux Local Account Brute Force Detected","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies multiple consecutive login attempts executed by one process targeting a local linux user account within a short time interval. Adversaries might brute force login attempts across different users with a default wordlist or a set of customly crafted passwords in an attempt to gain access to these accounts.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Linux Local Account Brute Force Detected\n\nIn Linux environments, the 'su' command is used to switch user accounts, often requiring a password. Adversaries exploit this by attempting numerous logins with various passwords to gain unauthorized access. The detection rule identifies suspicious activity by monitoring rapid, repeated 'su' command executions from a single process, excluding common legitimate parent processes, indicating potential brute force attempts.\n\n### Possible investigation steps\n\n- Review the process execution details to identify the parent process of the 'su' command, focusing on any unusual or unauthorized parent processes not listed in the exclusion list.\n- Analyze the frequency and pattern of the 'su' command executions from the identified process to determine if they align with typical user behavior or indicate a brute force attempt.\n- Check the user account targeted by the 'su' command attempts to assess if it is a high-value or sensitive account that might be of interest to adversaries.\n- Investigate the source host (host.id) to determine if there are any other suspicious activities or anomalies associated with it, such as unusual network connections or other security alerts.\n- Correlate the event timestamps with other logs or alerts to identify any concurrent suspicious activities that might indicate a coordinated attack effort.\n\n### False positive analysis\n\n- Legitimate administrative scripts or automation tools may trigger the rule if they execute the 'su' command frequently. To mitigate this, identify and whitelist these scripts or tools by adding their parent process names to the exclusion list.\n- Scheduled tasks or cron jobs that require switching users might be misidentified as brute force attempts. Review and exclude these tasks by specifying their parent process names in the exclusion criteria.\n- Development or testing environments where frequent user switching is part of normal operations can generate false positives. Consider excluding these environments from monitoring or adjust the detection threshold to better fit the operational context.\n- Continuous integration or deployment systems that use the 'su' command for user context switching can be mistaken for brute force attempts. Add these systems' parent process names to the exclusion list to prevent false alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected host to prevent further unauthorized access or lateral movement within the network.\n- Terminate the suspicious process identified by the detection rule to stop ongoing brute force attempts.\n- Reset passwords for the targeted user accounts to prevent unauthorized access using potentially compromised credentials.\n- Review and update the password policy to enforce strong, complex passwords and consider implementing account lockout mechanisms after a certain number of failed login attempts.\n- Conduct a thorough review of the affected system for any signs of successful unauthorized access or additional malicious activity, such as new user accounts or scheduled tasks.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems may be affected.\n- Enhance monitoring and logging on the affected host and similar systems to detect and respond to future brute force attempts more effectively.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"835c0622-114e-40b5-a346-f843ea5d01f1","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1110","name":"Brute Force","reference":"https://attack.mitre.org/techniques/T1110/","subtechnique":[{"id":"T1110.001","name":"Password Guessing","reference":"https://attack.mitre.org/techniques/T1110/001/"}]}]}],"to":"now","references":[],"version":11,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"sequence by host.id, process.parent.executable, user.id with maxspan=1s\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and process.name == \"su\" and\n   not process.parent.name in (\n     \"bash\", \"dash\", \"ash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\", \"clickhouse-server\", \"ma\", \"gitlab-runner\",\n     \"updatedb.findutils\", \"cron\", \"perl\", \"sudo\", \"java\", \"cloud-app-identify\", \"ambari-sudo.sh\"\n   )\n  ] with runs=10\n","actions":[]}
{"id":"2b6cd0fc-96f3-43f6-906d-d53b6cd5b195","updated_at":"2025-06-15T07:42:35.558Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.134Z","created_by":"elastic","name":"Potential Local NTLM Relay via HTTP","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Defense Evasion","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies attempt to coerce a local NTLM authentication via HTTP using the Windows Printer Spooler service as a target. An adversary may use this primitive in combination with other techniques to elevate privileges on a compromised system.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Local NTLM Relay via HTTP\n\nNTLM, a suite of Microsoft security protocols, is often targeted by adversaries for credential theft. Attackers may exploit the Windows Printer Spooler service to coerce NTLM authentication over HTTP, potentially elevating privileges. The detection rule identifies suspicious rundll32.exe executions invoking WebDAV client DLLs with specific arguments, signaling attempts to access named pipes via HTTP, indicative of NTLM relay attacks.\n\n### Possible investigation steps\n\n- Review the process execution details for rundll32.exe, focusing on the specific arguments related to davclnt.dll and DavSetCookie, to confirm the presence of suspicious WebDAV client activity.\n- Investigate the network connections initiated by the rundll32.exe process to identify any HTTP requests targeting named pipes, such as those containing \"/print/pipe/\", \"/pipe/spoolss\", or \"/pipe/srvsvc\".\n- Check the system's event logs for any related authentication attempts or failures around the time of the alert to identify potential NTLM relay activity.\n- Analyze the history of the Windows Printer Spooler service on the affected host to determine if it has been recently manipulated or exploited.\n- Correlate the alert with other security events or alerts from data sources like Microsoft Defender for Endpoint or Sysmon to identify any related suspicious activities or patterns.\n- Assess the user account associated with the NTLM authentication attempt to determine if it has been compromised or is being used in an unauthorized manner.\n\n### False positive analysis\n\n- Legitimate administrative tasks using rundll32.exe with WebDAV client DLLs may trigger the rule. Review the context of the execution, such as the user account and the timing, to determine if it aligns with expected administrative activities.\n- Automated software deployment or update processes might use similar rundll32.exe calls. Verify if the process is part of a scheduled or known deployment task and consider excluding these specific processes from the rule.\n- Some third-party applications may use WebDAV for legitimate purposes, which could mimic the behavior detected by the rule. Identify these applications and create exceptions for their known processes to prevent false alerts.\n- System maintenance scripts or tools that interact with network resources via HTTP might inadvertently match the rule's criteria. Ensure these scripts are documented and exclude them if they are verified as non-threatening.\n- Regularly review and update the exclusion list to accommodate changes in legitimate software behavior, ensuring that only verified false positives are excluded to maintain the rule's effectiveness.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious rundll32.exe processes identified in the alert to stop ongoing malicious activity.\n- Conduct a thorough review of the affected system's event logs and network traffic to identify any additional indicators of compromise or related malicious activity.\n- Reset credentials for any accounts that may have been exposed or compromised during the attack to prevent unauthorized access.\n- Apply the latest security patches and updates to the Windows Printer Spooler service and related components to mitigate known vulnerabilities.\n- Implement network segmentation to limit the exposure of critical services and reduce the risk of similar attacks in the future.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to ensure comprehensive remediation efforts are undertaken.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"4682fd2c-cfae-47ed-a543-9bed37657aa6","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1212","name":"Exploitation for Credential Access","reference":"https://attack.mitre.org/techniques/T1212/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.011","name":"Rundll32","reference":"https://attack.mitre.org/techniques/T1218/011/"}]}]}],"to":"now","references":["https://github.com/med0x2e/NTLMRelay2Self","https://github.com/topotam/PetitPotam","https://github.com/dirkjanm/krbrelayx/blob/master/printerbug.py"],"version":315,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.name : \"rundll32.exe\" and\n\n  /* Rundll32 WbeDav Client  */\n  process.args : (\"?:\\\\Windows\\\\System32\\\\davclnt.dll,DavSetCookie\", \"?:\\\\Windows\\\\SysWOW64\\\\davclnt.dll,DavSetCookie\") and\n\n  /* Access to named pipe via http */\n  process.args : (\"http*/print/pipe/*\", \"http*/pipe/spoolss\", \"http*/pipe/srvsvc\")\n","actions":[]}
{"id":"01193997-ef95-492b-aeb8-0d01e750ee93","updated_at":"2025-06-15T08:10:26.159Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:50.331Z","created_by":"elastic","name":"Elastic Agent Service Terminated","tags":["Domain: Endpoint","OS: Linux","OS: Windows","OS: macOS","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the Elastic endpoint agent has stopped and is no longer running on the host. Adversaries may attempt to disable security monitoring tools in an attempt to evade detection or prevention capabilities during an intrusion. This may also indicate an issue with the agent itself and should be addressed to ensure defensive measures are back in a stable state.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Elastic Agent Service Terminated\n\nThe Elastic Agent is a crucial component for monitoring and securing endpoints across various operating systems. It ensures continuous security oversight by collecting and analyzing data. Adversaries may attempt to disable this agent to evade detection, compromising system defenses. The detection rule identifies suspicious termination activities by monitoring specific processes and commands across Windows, Linux, and macOS, flagging potential defense evasion attempts.\n\n### Possible investigation steps\n\n- Review the event logs to identify the exact process and command used to terminate the Elastic Agent, focusing on the process names and arguments such as \"net.exe\", \"sc.exe\", \"systemctl\", and \"pkill\" with arguments like \"stop\", \"uninstall\", or \"disable\".\n- Check the timeline of events around the termination to identify any preceding suspicious activities or anomalies that might indicate an adversary's presence or actions.\n- Investigate the user account associated with the process termination to determine if it was authorized or if there are signs of account compromise.\n- Examine the host for any other signs of tampering or compromise, such as unauthorized changes to system configurations or the presence of other malicious processes.\n- Verify the current status of the Elastic Agent on the affected host and attempt to restart it if it is not running, ensuring that security monitoring is restored.\n- Correlate this event with other alerts or logs from the same host or network to identify potential patterns or coordinated attack activities.\n\n### False positive analysis\n\n- Routine maintenance activities may trigger the rule if administrators use commands like systemctl or service to stop the Elastic Agent for updates or configuration changes. To manage this, create exceptions for known maintenance windows or authorized personnel.\n- Automated scripts or deployment tools that temporarily disable the Elastic Agent during software installations or updates can cause false positives. Identify these scripts and whitelist their execution paths or specific arguments.\n- Testing environments where Elastic Agent is frequently started and stopped for development purposes might generate alerts. Exclude these environments by specifying their hostnames or IP addresses in the rule exceptions.\n- Security tools or processes that interact with the Elastic Agent, such as backup solutions or system monitoring tools, might inadvertently stop the service. Review these interactions and adjust the rule to ignore specific process names or arguments associated with these tools.\n- User-initiated actions, such as troubleshooting or system performance optimization, may involve stopping the Elastic Agent. Educate users on the impact of these actions and establish a protocol for notifying the security team when such actions are necessary.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or potential lateral movement by adversaries.\n- Verify the status of the Elastic Agent on the affected host and attempt to restart the service. If the service fails to restart, investigate potential causes such as corrupted files or missing dependencies.\n- Conduct a thorough review of recent process execution logs on the affected host to identify any unauthorized or suspicious activities that may have led to the termination of the Elastic Agent.\n- If malicious activity is confirmed, perform a comprehensive malware scan and remove any identified threats. Ensure that the host is clean before reconnecting it to the network.\n- Review and update endpoint security configurations to prevent unauthorized termination of security services. This may include implementing stricter access controls or using application whitelisting.\n- Escalate the incident to the security operations team for further analysis and to determine if additional hosts are affected or if there is a broader security incident underway.\n- Document the incident, including all actions taken and findings, to enhance future response efforts and update incident response plans as necessary.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"b627cd12-dac4-11ec-9582-f661ea17fbcd","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.001","name":"Disable or Modify Tools","reference":"https://attack.mitre.org/techniques/T1562/001/"}]}]}],"to":"now","references":[],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["logs-endpoint.events.*"],"query":"process where\n/* net, sc or wmic stopping or deleting Elastic Agent on Windows */\n(event.type == \"start\" and\n  process.name : (\"net.exe\", \"sc.exe\", \"wmic.exe\",\"powershell.exe\",\"taskkill.exe\",\"PsKill.exe\",\"ProcessHacker.exe\") and\n  process.args : (\"stopservice\",\"uninstall\", \"stop\", \"disabled\",\"Stop-Process\",\"terminate\",\"suspend\") and\n  process.args : (\"elasticendpoint\", \"Elastic Agent\",\"elastic-agent\",\"elastic-endpoint\"))\nor\n/* service or systemctl used to stop Elastic Agent on Linux */\n(event.type == \"end\" and\n  (process.name : (\"systemctl\", \"service\") and\n    process.args : \"elastic-agent\" and\n    process.args : (\"stop\", \"disable\"))\n  or\n  /* pkill , killall used to stop Elastic Agent on Linux */\n  ( event.type == \"end\" and process.name : (\"pkill\", \"killall\") and process.args: \"elastic-agent\")\n  or\n  /* Unload Elastic Agent extension on MacOS */\n  (process.name : \"kextunload\" and\n    process.args : \"com.apple.iokit.EndpointSecurity\" and\n    event.action : \"end\"))\n","actions":[]}
{"id":"0e61468f-52e9-4cae-9dc2-712399d4fb21","updated_at":"2025-06-15T07:42:41.607Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.105Z","created_by":"elastic","name":"Persistence via Hidden Run Key Detected","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Defense Evasion","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies a persistence mechanism that utilizes the NtSetValueKey native API to create a hidden (null terminated) registry key. An adversary may use this method to hide from system utilities such as the Registry Editor (regedit).","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Persistence via Hidden Run Key Detected\n\nThe Windows Registry is a critical system database that stores configuration settings. Adversaries exploit it for persistence by creating hidden registry keys using native APIs, making them invisible to standard tools like regedit. The detection rule identifies changes in specific registry paths associated with startup programs, flagging null-terminated keys that suggest stealthy persistence tactics.\n\n### Possible investigation steps\n\n- Review the specific registry path where the change was detected to determine if it matches any of the paths listed in the query, such as \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\" or \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\".\n- Check the timestamp of the registry change event to correlate it with other system activities or user actions that occurred around the same time.\n- Investigate the process that made the registry change by examining process creation logs or using tools like Sysmon to identify the responsible process and its parent process.\n- Analyze the content of the registry key value that was modified or created to determine if it points to a legitimate application or a potentially malicious executable.\n- Cross-reference the detected registry change with known threat intelligence sources to identify if the key or value is associated with known malware or adversary techniques.\n- Assess the affected system for additional indicators of compromise, such as unusual network connections, file modifications, or other persistence mechanisms.\n\n### False positive analysis\n\n- Legitimate software installations or updates may create registry keys in the specified paths, leading to false positives. Users can monitor the installation process and temporarily disable the rule during known software updates to prevent unnecessary alerts.\n- System administrators may intentionally configure startup programs for maintenance or monitoring purposes. Document these configurations and create exceptions in the detection rule to avoid flagging them as threats.\n- Some security software may use similar techniques to ensure their components start with the system. Verify the legitimacy of such software and whitelist their registry changes to prevent false alarms.\n- Custom scripts or automation tools used within an organization might modify registry keys for operational reasons. Identify these scripts and exclude their activities from the detection rule to reduce false positives.\n- Regularly review and update the list of known safe applications and processes that interact with the registry paths in question, ensuring that the detection rule remains relevant and accurate.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.\n- Use a trusted tool to manually inspect and remove the hidden registry keys identified in the alert from the specified registry paths to eliminate the persistence mechanism.\n- Conduct a thorough scan of the affected system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any additional malicious files or processes associated with the threat.\n- Review recent user activity and system logs to identify any unauthorized access or changes made by the adversary, and reset credentials for any compromised accounts.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.\n- Implement enhanced monitoring on the affected system and similar endpoints to detect any recurrence of the threat, focusing on registry changes and process execution.\n- Update and reinforce endpoint security configurations to prevent similar persistence techniques, such as enabling registry auditing and restricting access to critical registry paths.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"a9b05c3b-b304-4bf9-970d-acdfaef2944c","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1547","name":"Boot or Logon Autostart Execution","reference":"https://attack.mitre.org/techniques/T1547/","subtechnique":[{"id":"T1547.001","name":"Registry Run Keys / Startup Folder","reference":"https://attack.mitre.org/techniques/T1547/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1106","name":"Native API","reference":"https://attack.mitre.org/techniques/T1106/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1112","name":"Modify Registry","reference":"https://attack.mitre.org/techniques/T1112/"}]}],"to":"now","references":["https://github.com/outflanknl/SharpHide","https://github.com/ewhitehats/InvisiblePersistence/blob/master/InvisibleRegValues_Whitepaper.pdf"],"version":212,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true},{"name":"registry.path","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*","winlogbeat-*","logs-windows.sysmon_operational-*","endgame-*"],"query":"/* Registry Path ends with backslash */\nregistry where host.os.type == \"windows\" and event.type == \"change\" and length(registry.data.strings) > 0 and\n registry.path : (\"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\",\n                  \"HKU\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\",\n                  \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\",\n                  \"HKLM\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\",\n                  \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\\",\n                  \"HKU\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\\")\n","actions":[]}
{"id":"e73b8a84-4671-444a-b2ae-85bb5d2da808","updated_at":"2025-06-15T07:42:39.583Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:40.002Z","created_by":"elastic","name":"Suspicious Browser Child Process","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Initial Access","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the execution of a suspicious browser child process. Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Browser Child Process\n\nWeb browsers are integral to user interaction with the internet, often serving as gateways for adversaries to exploit vulnerabilities. Attackers may execute malicious scripts or commands by spawning child processes from browsers, leveraging scripting languages or command-line tools. The detection rule identifies unusual child processes initiated by browsers on macOS, filtering out known benign activities to highlight potential threats, thus aiding in early threat detection and response.\n\n### Possible investigation steps\n\n- Review the process command line to understand the context of the execution and identify any potentially malicious scripts or commands.\n- Check the parent process name to confirm it is one of the specified browsers (e.g., Google Chrome, Safari) and verify if the browser was expected to be running at the time of the alert.\n- Investigate the user account associated with the process to determine if the activity aligns with their typical behavior or if the account may have been compromised.\n- Examine the network activity around the time of the alert to identify any suspicious connections or data transfers that may indicate further malicious activity.\n- Look for any related alerts or logs that might provide additional context or evidence of a broader attack or compromise.\n- Assess the risk and impact of the detected activity by considering the severity and risk score provided, and determine if immediate response actions are necessary.\n\n### False positive analysis\n\n- Legitimate software updates or installations may trigger the rule if they use shell scripts or command-line tools. Users can create exceptions for known update paths, such as those related to Microsoft AutoUpdate or Google Chrome installations, to prevent these from being flagged.\n- Development or testing activities involving scripting languages like Python or shell scripts may be mistakenly identified as threats. Users should consider excluding specific development directories or command patterns that are frequently used in their workflows.\n- Automated scripts or tools that interact with web browsers for legitimate purposes, such as web scraping or data collection, might be detected. Users can whitelist these processes by specifying their command-line arguments or paths to avoid false positives.\n- System administration tasks that involve remote management or configuration changes via command-line tools could be misinterpreted as suspicious. Users should identify and exclude these routine administrative commands to reduce unnecessary alerts.\n- Browser extensions or plugins that execute scripts for enhanced functionality might trigger the rule. Users should review and whitelist trusted extensions that are known to execute benign scripts.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further malicious activity or lateral movement by the adversary.\n- Terminate the suspicious child process identified in the alert to halt any ongoing malicious execution.\n- Conduct a thorough review of the browser's recent activity and history to identify any potentially malicious websites or downloads that may have triggered the alert.\n- Remove any malicious files or scripts that were executed by the suspicious child process to prevent further exploitation.\n- Apply the latest security patches and updates to the affected browser and macOS system to mitigate known vulnerabilities that could be exploited.\n- Monitor the system for any signs of persistence mechanisms or additional suspicious activity, ensuring that no backdoors or unauthorized access points remain.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems may be affected, ensuring a coordinated response.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"080bc66a-5d56-4d1f-8071-817671716db9","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1203","name":"Exploitation for Client Execution","reference":"https://attack.mitre.org/techniques/T1203/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1189","name":"Drive-by Compromise","reference":"https://attack.mitre.org/techniques/T1189/"}]}],"to":"now","references":["https://objective-see.com/blog/blog_0x43.html","https://fr.slideshare.net/codeblue_jp/cb19-recent-apt-attack-on-crypto-exchange-employees-by-heungsoo-kang"],"version":112,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and\n  process.parent.name like~ (\"Google Chrome\", \"Google Chrome Helper*\", \"firefox\", \"Opera\", \"Safari\", \"com.apple.WebKit.WebContent\", \"Microsoft Edge\") and\n  ((process.name like~ (\"sh\", \"bash\", \"dash\", \"ksh\", \"tcsh\", \"zsh\") and process.command_line : (\"*curl*\", \"*nscurl*\", \"*wget*\", \"*whoami*\", \"*pwd*\")) or\n  process.name like~ (\"curl\", \"wget\", \"python*\", \"perl*\", \"php*\", \"osascript\", \"pwsh\")) and\n  process.command_line != null\n","actions":[]}
{"id":"6ebd971b-9f28-4814-b355-b2c4d5f30643","updated_at":"2025-06-15T07:42:37.580Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:54.401Z","created_by":"elastic","name":"Quarantine Attrib Removed by Unsigned or Untrusted Process","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects deletion of the quarantine attribute by an unusual process (xattr). In macOS, when applications or programs are downloaded from the internet, there is a quarantine flag set on the file. This attribute is read by Apple's Gatekeeper defense program at execution time. An adversary may disable this attribute to evade defenses.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Quarantine Attrib Removed by Unsigned or Untrusted Process\n\nIn macOS, files downloaded from the internet are tagged with a quarantine attribute, which is checked by Gatekeeper to ensure safety before execution. Adversaries may remove this attribute to bypass security checks, allowing potentially harmful applications to run unchecked. The detection rule identifies such actions by monitoring for the removal of this attribute by processes that are either unsigned or untrusted, flagging unusual activity that deviates from expected behavior.\n\n### Possible investigation steps\n\n- Review the process executable path that triggered the alert to determine if it is a known or expected application on the system. Check if it matches any legitimate software that might not be properly signed.\n- Investigate the parent process of the flagged executable to understand the context of its execution. This can help identify if the process was spawned by a legitimate application or a potentially malicious one.\n- Examine the file path from which the quarantine attribute was removed to assess if it is a common location for downloaded files or if it appears suspicious.\n- Check the system for any recent downloads or installations that might correlate with the time of the alert to identify potential sources of the file.\n- Look into the user account under which the process was executed to determine if it aligns with expected user behavior or if it might indicate unauthorized access.\n- Search for any other alerts or logs related to the same process or file path to identify patterns or repeated attempts to bypass security measures.\n\n### False positive analysis\n\n- System processes or legitimate applications may occasionally remove the quarantine attribute as part of their normal operation. Users can create exceptions for known safe processes by adding them to the exclusion list in the detection rule.\n- Software updates or installations from trusted vendors might trigger the rule if they are not properly signed. Verify the legitimacy of the software and consider adding the specific executable path to the exclusion list if it is deemed safe.\n- Custom scripts or automation tools used within an organization might remove the quarantine attribute as part of their workflow. Review these scripts to ensure they are secure and add their paths to the exclusion list to prevent false positives.\n- Temporary files or directories, such as those in /private/var/folders, are already excluded to reduce noise. Ensure that any additional temporary paths used by trusted applications are similarly excluded if they are known to cause false positives.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent potential lateral movement or further compromise.\n- Terminate any untrusted or unsigned processes identified in the alert that are responsible for removing the quarantine attribute.\n- Conduct a thorough scan of the affected system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any malicious software.\n- Restore any affected files from a known good backup if they have been altered or compromised.\n- Review system logs and the specific file paths involved in the alert to identify any additional unauthorized changes or suspicious activity.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement additional monitoring and alerting for similar activities on other macOS systems to enhance detection and response capabilities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"f0b48bbc-549e-4bcf-8ee0-a7a72586c6a7","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.001","name":"Disable or Modify Tools","reference":"https://attack.mitre.org/techniques/T1562/001/"}]}]}],"to":"now","references":["https://nixhacker.com/security-protection-in-macos-1/","https://eclecticlight.co/2020/10/29/quarantine-and-the-quarantine-flag/"],"version":114,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.exists","type":"boolean","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.file*"],"query":"file where event.action == \"extended_attributes_delete\" and host.os.type == \"macos\" and process.executable != null and\n (process.code_signature.trusted == false or process.code_signature.exists == false) and \n not process.executable like (\"/usr/bin/xattr\",\n                              \"/System/*\",\n                              \"/private/tmp/KSInstallAction.*/*/Install Google Software Update.app/Contents/Helpers/ksinstall\",\n                              \"/Applications/CEWE Fotoschau.app/Contents/MacOS/FotoPlus\",\n                              \"/Applications/.com.bomgar.scc.*/Remote Support Customer Client.app/Contents/MacOS/sdcust\") and \n not file.path like \"/private/var/folders/*\"\n","actions":[]}
{"id":"256f2732-c1f1-42d3-8fc0-5184bcea885b","updated_at":"2025-06-15T08:09:34.130Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.187Z","created_by":"elastic","name":"Tampering of Shell Command-Line History","tags":["Domain: Endpoint","OS: Linux","OS: macOS","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Defend","Data Source: Elastic Endgame","Data Source: Auditd Manager","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Adversaries may attempt to clear or disable the Bash command-line history in an attempt to evade detection or forensic investigations.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Tampering of Shell Command-Line History\n\nShell command-line history is a crucial feature in Unix-like systems, recording user commands for convenience and auditing. Adversaries may manipulate this history to hide their tracks, using commands to delete or redirect history files, clear history buffers, or disable history logging. The detection rule identifies such tampering by monitoring for suspicious command patterns and arguments indicative of history manipulation attempts.\n\n### Possible investigation steps\n\n- Review the process execution details to identify the user account associated with the suspicious command, focusing on the process.args field to determine the specific command and arguments used.\n- Check the process execution timeline to correlate the suspicious activity with other events on the system, such as logins or file modifications, to understand the context of the tampering attempt.\n- Investigate the command history files (.bash_history, .zsh_history) for the affected user accounts to assess the extent of tampering and identify any commands that may have been executed prior to the history manipulation.\n- Examine system logs and audit records for any additional indicators of compromise or related suspicious activities, such as unauthorized access attempts or privilege escalation events.\n- Verify the current configuration of the HISTFILE and HISTFILESIZE environment variables for the affected user accounts to ensure they have not been altered to disable history logging.\n\n### False positive analysis\n\n- System administrators or automated scripts may clear command-line history as part of routine maintenance or privacy measures. To handle this, identify and whitelist known scripts or user accounts that perform these actions regularly.\n- Developers or power users might redirect or unset history files to manage disk space or for personal preference. Consider excluding specific user accounts or directories from monitoring if these actions are verified as non-malicious.\n- Security tools or compliance scripts may execute commands that resemble history tampering to ensure systems are in a desired state. Review and exclude these tools from triggering alerts by adding them to an exception list.\n- Temporary testing environments or sandboxed systems might frequently clear history as part of their reset processes. Exclude these environments from the rule to prevent unnecessary alerts.\n- Users with privacy concerns might intentionally disable history logging. Engage with these users to understand their needs and adjust monitoring policies accordingly, possibly by excluding their sessions from the rule.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further tampering or data exfiltration.\n- Conduct a thorough review of the affected user's recent command history and system logs to identify any unauthorized or suspicious activities that may have occurred prior to the tampering.\n- Restore the tampered history files from a secure backup, if available, to aid in further forensic analysis and ensure continuity of auditing.\n- Re-enable and secure shell history logging by resetting the HISTFILE and HISTFILESIZE environment variables to their default values and ensuring they are not set to null or zero.\n- Implement stricter access controls and monitoring on the affected system to prevent unauthorized users from modifying shell history files in the future.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems may have been compromised.\n- Review and update endpoint detection and response (EDR) configurations to enhance monitoring for similar tampering attempts, ensuring alerts are generated for any future suspicious command patterns.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"7bcbb3ac-e533-41ad-a612-d6c3bf666aba","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1070","name":"Indicator Removal","reference":"https://attack.mitre.org/techniques/T1070/","subtechnique":[{"id":"T1070.003","name":"Clear Command History","reference":"https://attack.mitre.org/techniques/T1070/003/"}]}]}],"to":"now","references":["https://www.elastic.co/security-labs/detecting-log4j2-with-elastic-security"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"auditd_manager","version":"^1.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["logs-endpoint.events.*","endgame-*","auditbeat-*","logs-auditd_manager.auditd-*"],"query":"process where event.action in (\"exec\", \"exec_event\", \"executed\", \"process_started\") and event.type == \"start\" and\n (\n  ((process.args : (\"rm\", \"echo\") or\n    (process.args : \"ln\" and process.args : \"-sf\" and process.args : \"/dev/null\") or\n    (process.args : \"truncate\" and process.args : \"-s0\"))\n    and process.args : (\".bash_history\", \"/root/.bash_history\", \"/home/*/.bash_history\",\"/Users/.bash_history\", \"/Users/*/.bash_history\",\n                        \".zsh_history\", \"/root/.zsh_history\", \"/home/*/.zsh_history\", \"/Users/.zsh_history\", \"/Users/*/.zsh_history\")) or\n  (process.args : \"history\" and process.args : \"-c\") or\n  (process.args : \"export\" and process.args : (\"HISTFILE=/dev/null\", \"HISTFILESIZE=0\")) or\n  (process.args : \"unset\" and process.args : \"HISTFILE\") or\n  (process.args : \"set\" and process.args : \"history\" and process.args : \"+o\")\n )\n","actions":[]}
{"id":"95b2c56d-3ce7-4a68-ad1d-b2c679ada298","updated_at":"2025-06-15T07:57:54.891Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:43.076Z","created_by":"elastic","name":"Remote File Download via PowerShell","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Command and Control","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies powershell.exe being used to download an executable file from an untrusted remote destination.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Remote File Download via PowerShell\n\nAttackers commonly transfer tooling or malware from external systems into a compromised environment using the command and control channel. However, they can also abuse signed utilities to drop these files.\n\nPowerShell is one of system administrators' main tools for automation, report routines, and other tasks. This makes it available for use in various environments and creates an attractive way for attackers to execute code and perform actions. This rule correlates network and file events to detect downloads of executable and script files performed using PowerShell.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n> This investigation guide uses the [Investigate Markdown Plugin](https://www.elastic.co/guide/en/security/current/interactive-investigation-guides.html) introduced in Elastic Stack version 8.8.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n  - !{investigate{\"label\":\"Alerts associated with the user in the last 48h\",\"providers\":[[{\"excluded\":false,\"field\":\"event.kind\",\"queryType\":\"phrase\",\"value\":\"signal\",\"valueType\":\"string\"},{\"excluded\":false,\"field\":\"user.id\",\"queryType\":\"phrase\",\"value\":\"{{user.id}}\",\"valueType\":\"string\"}]],\"relativeFrom\":\"now-48h/h\",\"relativeTo\":\"now\"}}\n  - !{investigate{\"label\":\"Alerts associated with the host in the last 48h\",\"providers\":[[{\"excluded\":false,\"field\":\"event.kind\",\"queryType\":\"phrase\",\"value\":\"signal\",\"valueType\":\"string\"},{\"excluded\":false,\"field\":\"host.name\",\"queryType\":\"phrase\",\"value\":\"{{host.name}}\",\"valueType\":\"string\"}]],\"relativeFrom\":\"now-48h/h\",\"relativeTo\":\"now\"}}\n- Check the reputation of the domain or IP address used to host the downloaded file.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the file using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n        - !{investigate{\"label\":\"Investigate the Subject Process Network Events\",\"providers\":[[{\"excluded\":false,\"field\":\"process.entity_id\",\"queryType\":\"phrase\",\"value\":\"{{process.entity_id}}\",\"valueType\":\"string\"},{\"excluded\":false,\"field\":\"event.category\",\"queryType\":\"phrase\",\"value\":\"network\",\"valueType\":\"string\"}]]}}\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- Administrators can use PowerShell legitimately to download executable and script files. Analysts can dismiss the alert if the Administrator is aware of the activity and the triage has not identified suspicious or malicious files.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"33f306e8-417c-411b-965c-c2812d6d3f4d","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1105","name":"Ingress Tool Transfer","reference":"https://attack.mitre.org/techniques/T1105/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":[],"version":113,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"dns.question.name","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.protocol","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.network-*","logs-endpoint.events.file-*"],"query":"sequence by process.entity_id with maxspan=30s\n\n[network where host.os.type == \"windows\" and\n  process.name : (\"powershell.exe\", \"pwsh.exe\", \"powershell_ise.exe\") and network.protocol == \"dns\" and\n   not dns.question.name : (\n          \"localhost\", \"*.microsoft.com\", \"*.azureedge.net\", \"*.powershellgallery.com\",\n          \"*.windowsupdate.com\", \"metadata.google.internal\", \"dist.nuget.org\",\n          \"artifacts.elastic.co\", \"*.digicert.com\", \"packages.chocolatey.org\",\n          \"outlook.office365.com\"\n       ) and not user.id : \"S-1-5-18\"]\n[file where host.os.type == \"windows\" and event.type == \"creation\" and\n  process.name : \"powershell.exe\" and file.extension : (\"exe\", \"dll\", \"ps1\", \"bat\") and\n  not file.name : \"__PSScriptPolicy*.ps1\"]\n","actions":[]}
{"id":"f19f3b00-1301-4045-b8c7-ab155c1fd9f6","updated_at":"2025-06-15T08:06:24.065Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:55.365Z","created_by":"elastic","name":"Potential Reverse Shell via Suspicious Binary","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This detection rule detects the creation of a shell through a chain consisting of the execution of a suspicious binary (located in a commonly abused location or executed manually) followed by a network event and ending with a shell being spawned. Stageless reverse tcp shells display this behaviour. Attackers may spawn reverse shells to establish persistence onto a target system.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Reverse Shell via Suspicious Binary\n\nReverse shells are a common technique used by attackers to gain persistent access to a compromised system. They exploit legitimate shell environments to execute commands remotely. Adversaries often deploy binaries in unusual directories to evade detection. The detection rule identifies suspicious binaries executed in these locations, followed by network activity and shell spawning, indicating potential reverse shell activity. This approach helps in identifying unauthorized access attempts on Linux systems.\n\n### Possible investigation steps\n\n- Review the process execution details to identify the suspicious binary's path and name, focusing on the directories specified in the query such as /tmp, /var/tmp, and /dev/shm.\n- Examine the parent process of the suspicious binary to determine if it was spawned by a legitimate shell process like bash or sh, as indicated in the query.\n- Analyze the network activity associated with the suspicious binary, paying attention to the destination IP address to identify any external connections that are not local (i.e., not 127.0.0.1 or ::1).\n- Check the process tree to see if a new shell was spawned following the network activity, which could indicate a reverse shell attempt.\n- Investigate the user account under which the suspicious process was executed to assess if it aligns with expected behavior or if it might be compromised.\n- Correlate the event timestamps to understand the sequence of actions and verify if they align with typical reverse shell behavior patterns.\n\n### False positive analysis\n\n- Legitimate administrative scripts or binaries may be executed from directories like /tmp or /var/tmp during maintenance tasks. To handle this, create exceptions for known scripts or binaries used by trusted administrators.\n- Automated deployment tools might temporarily use directories such as /dev/shm or /run for staging files. Identify these tools and exclude their processes from triggering the rule.\n- Custom monitoring or backup scripts could initiate network connections from non-standard directories. Review these scripts and whitelist their activities if they are verified as safe.\n- Development or testing environments might involve executing binaries from unusual locations. Ensure these environments are well-documented and exclude their processes from the detection rule.\n- Some legitimate applications may spawn shells as part of their normal operation. Identify these applications and add them to an exception list to prevent false alerts.\n\n### Response and remediation\n\n- Isolate the affected system from the network immediately to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified by the detection rule, especially those originating from unusual directories or involving shell spawning.\n- Conduct a thorough review of the system's scheduled tasks, startup scripts, and cron jobs to identify and remove any unauthorized entries that may have been added by the attacker.\n- Analyze network logs to identify any external IP addresses involved in the suspicious network activity and block these IPs at the firewall to prevent further connections.\n- Restore the affected system from a known good backup to ensure that any malicious changes are reverted.\n- Update and patch the system to the latest security standards to close any vulnerabilities that may have been exploited.\n- Escalate the incident to the security operations team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"fa3a59dc-33c3-43bf-80a9-e8437a922c7f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":["https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"],"version":11,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id, process.entity_id with maxspan=1s\n[ process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n  process.executable : (\n  \"./*\", \"/tmp/*\", \"/var/tmp/*\", \"/var/www/*\", \"/dev/shm/*\", \"/etc/init.d/*\", \"/etc/rc*.d/*\",\n  \"/etc/crontab\", \"/etc/cron.*\", \"/etc/update-motd.d/*\", \"/usr/lib/update-notifier/*\",\n  \"/boot/*\", \"/srv/*\", \"/run/*\", \"/root/*\", \"/etc/rc.local\"\n   ) and\n  process.parent.name : (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and not\n  process.name : (\"curl\", \"wget\", \"ping\", \"apt\", \"dpkg\", \"yum\", \"rpm\", \"dnf\", \"dockerd\") ]\n[ network where host.os.type == \"linux\" and event.type == \"start\" and event.action in (\"connection_attempted\", \"connection_accepted\") and\n  process.executable : (\n  \"./*\", \"/tmp/*\", \"/var/tmp/*\", \"/var/www/*\", \"/dev/shm/*\", \"/etc/init.d/*\", \"/etc/rc*.d/*\",\n  \"/etc/crontab\", \"/etc/cron.*\", \"/etc/update-motd.d/*\", \"/usr/lib/update-notifier/*\",\n  \"/boot/*\", \"/srv/*\", \"/run/*\", \"/root/*\", \"/etc/rc.local\"\n   ) and destination.ip != null and destination.ip != \"127.0.0.1\" and destination.ip != \"::1\" ]\n[ process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n  process.name : (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and\n  process.parent.name : (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") ]\n","actions":[]}
{"id":"753e3ea4-e46c-4db4-8ac6-92206155eaef","updated_at":"2025-06-15T07:42:37.588Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:51.367Z","created_by":"elastic","name":"Parent Process PID Spoofing","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Tactic: Privilege Escalation","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies parent process spoofing used to thwart detection. Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Parent Process PID Spoofing\n\nParent Process PID Spoofing involves manipulating the parent process identifier to disguise the origin of a process, often to bypass security measures or gain elevated privileges. Adversaries exploit this by launching processes with falsified parent PIDs, making them appear benign. The detection rule identifies such anomalies by monitoring process creation events, focusing on unexpected parent-child relationships and unsigned executables, thus flagging potential spoofing attempts.\n\n### Possible investigation steps\n\n- Review the process creation event details to identify the specific executable and its path that triggered the alert. Pay attention to the process.executable field to determine if it matches any suspicious patterns like \"?:\\\\Users\\\\*.exe\" or \"?:\\\\Windows\\\\Temp\\\\*.exe\".\n- Check the process.parent.Ext.real.pid field to confirm if the parent process PID has been spoofed. Investigate the legitimacy of the parent process by examining its name and executable path.\n- Analyze the process.code_signature.status field to determine if the executable is unsigned or has a bad digest, which could indicate tampering or a lack of authenticity.\n- Investigate the user context by reviewing the user.id field to understand which user account was associated with the process creation. This can help determine if the activity aligns with expected user behavior.\n- Correlate the process creation event with other related events on the same host.id within the maxspan of 3 minutes to identify any additional suspicious activities or patterns.\n- Examine the integrity level of the process using the process.Ext.token.integrity_level_name field to assess if the process is running with elevated privileges unexpectedly.\n- Cross-reference the process with known legitimate applications by checking if the process.pe.original_file_name matches common applications like \"winword.exe\" or \"powershell.exe\" to rule out false positives.\n\n### False positive analysis\n\n- Processes like msedge.exe with sihost.exe as the parent may trigger false positives. Consider adding exceptions for these specific parent-child relationships if they are common in your environment.\n- Executables located in user directories or temporary folders may be flagged if they lack valid code signatures. Regularly review and whitelist known benign applications that operate from these paths.\n- Processes with a parent PID mismatch due to legitimate software updates or installations can be mistaken for spoofing. Monitor and document such activities to refine detection rules and reduce false alerts.\n- WerFault.exe and its variants are excluded by default, but if other legitimate system processes are frequently flagged, consider expanding the exclusion list to include them.\n- Regularly update the list of known safe executables and their expected parent processes to ensure the rule remains effective without generating unnecessary alerts.\n\n### Response and remediation\n\n- Isolate the affected host immediately to prevent further spread of the threat. Disconnect the host from the network to contain any potential malicious activity.\n- Terminate any suspicious processes identified by the alert, especially those with spoofed parent PIDs or unsigned executables, to halt any ongoing malicious actions.\n- Conduct a thorough review of the affected system's process tree and logs to identify any additional malicious processes or indicators of compromise that may have been missed.\n- Restore the affected system from a known good backup if any critical system files or configurations have been altered by the threat.\n- Update and patch the affected system to the latest security standards to close any vulnerabilities that may have been exploited by the adversary.\n- Implement enhanced monitoring on the affected host and similar systems to detect any recurrence of the threat, focusing on process creation events and parent-child process relationships.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c88d4bd0-5649-4c52-87ea-9be59dbfbcf2","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/","subtechnique":[{"id":"T1134.004","name":"Parent PID Spoofing","reference":"https://attack.mitre.org/techniques/T1134/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/","subtechnique":[{"id":"T1134.004","name":"Parent PID Spoofing","reference":"https://attack.mitre.org/techniques/T1134/004/"}]}]}],"to":"now","references":["https://blog.didierstevens.com/2017/03/20/","https://www.elastic.co/security-labs/elastic-security-labs-steps-through-the-r77-rootkit"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.Ext.token.integrity_level_name","type":"unknown","ecs":false},{"name":"process.code_signature.exists","type":"boolean","ecs":true},{"name":"process.code_signature.status","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.Ext.real.pid","type":"unknown","ecs":false},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*"],"query":"/* This rule is compatible with Elastic Endpoint only */\n\nsequence by host.id, user.id with maxspan=3m\n\n [process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.Ext.token.integrity_level_name != \"system\" and\n  (\n    process.pe.original_file_name : (\"winword.exe\", \"excel.exe\", \"outlook.exe\", \"powerpnt.exe\", \"eqnedt32.exe\",\n                                     \"fltldr.exe\", \"mspub.exe\", \"msaccess.exe\", \"powershell.exe\", \"pwsh.exe\",\n                                     \"cscript.exe\", \"wscript.exe\", \"rundll32.exe\", \"regsvr32.exe\", \"msbuild.exe\",\n                                     \"mshta.exe\", \"wmic.exe\", \"cmstp.exe\", \"msxsl.exe\") or\n\n    (process.executable : (\"?:\\\\Users\\\\*.exe\",\n                           \"?:\\\\ProgramData\\\\*.exe\",\n                           \"?:\\\\Windows\\\\Temp\\\\*.exe\",\n                           \"?:\\\\Windows\\\\Tasks\\\\*\") and\n      (process.code_signature.exists == false or process.code_signature.status : \"errorBadDigest\")) or\n\n    process.executable : \"?:\\\\Windows\\\\Microsoft.NET\\\\*.exe\"\n  ) and\n\n  not process.executable :\n             (\"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\",\n              \"?:\\\\WINDOWS\\\\SysWOW64\\\\WerFaultSecure.exe\",\n              \"?:\\\\Windows\\\\System32\\\\WerFault.exe\",\n              \"?:\\\\Windows\\\\SysWOW64\\\\WerFault.exe\")\n  ] by process.pid\n [process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.parent.Ext.real.pid > 0 and\n\n  /* process.parent.Ext.real.pid is only populated if the parent process pid doesn't match */\n  not (process.name : \"msedge.exe\" and process.parent.name : \"sihost.exe\") and\n\n   not process.executable :\n             (\"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\",\n              \"?:\\\\WINDOWS\\\\SysWOW64\\\\WerFaultSecure.exe\",\n              \"?:\\\\Windows\\\\System32\\\\WerFault.exe\",\n              \"?:\\\\Windows\\\\SysWOW64\\\\WerFault.exe\")\n ] by process.parent.Ext.real.pid\n","actions":[]}
{"id":"e2f87c7f-7426-4fe0-9752-eb61d1d9cd3f","updated_at":"2025-06-15T07:50:15.079Z","updated_by":"sangpt","created_at":"2025-06-15T07:40:30.954Z","created_by":"sangpt","name":"Potential Admin Group Account Addition","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":0,"description":"Identifies attempts to add an account to the admin group via the command line. This could be an indication of privilege escalation activity.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Admin Group Account Addition\n\nIn macOS environments, tools like `dscl` and `dseditgroup` manage user group memberships, including admin groups. Adversaries may exploit these tools to escalate privileges by adding accounts to admin groups, gaining unauthorized access. The detection rule identifies such attempts by monitoring process activities related to these tools, excluding legitimate management services, to flag potential privilege escalation.\n\n### Possible investigation steps\n\n- Review the process details to confirm the use of `dscl` or `dseditgroup` with arguments indicating an attempt to add an account to the admin group, such as \"/Groups/admin\" and \"-a\" or \"-append\".\n- Check the process's parent executable path to ensure it is not one of the legitimate management services excluded in the query, such as JamfDaemon, JamfManagementService, jumpcloud-agent, or Addigy go-agent.\n- Investigate the user account associated with the process to determine if it has a history of legitimate administrative actions or if it appears suspicious.\n- Examine recent login events and user activity on the host to identify any unusual patterns or unauthorized access attempts.\n- Correlate the alert with other security events or logs from the same host to identify any related suspicious activities or potential indicators of compromise.\n- Assess the risk and impact of the account addition by determining if the account has been successfully added to the admin group and if any unauthorized changes have been made.\n\n### False positive analysis\n\n- Legitimate management services like JAMF and JumpCloud may trigger false positives when they manage user group memberships. These services are already excluded in the rule, but ensure any additional management tools used in your environment are similarly excluded.\n- Automated scripts or maintenance tasks that require temporary admin access might be flagged. Review these scripts and consider adding them to the exclusion list if they are verified as safe.\n- System updates or software installations that modify group memberships could be misidentified. Monitor these activities and adjust the rule to exclude known update processes if they are consistently flagged.\n- User-initiated actions that are part of normal IT operations, such as adding a new admin for legitimate purposes, may appear as false positives. Ensure that such actions are documented and communicated to avoid unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or privilege escalation.\n- Review the process execution logs to confirm unauthorized use of `dscl` or `dseditgroup` for adding accounts to the admin group, ensuring the activity is not part of legitimate administrative tasks.\n- Remove any unauthorized accounts from the admin group to restore proper access controls and prevent further misuse of elevated privileges.\n- Conduct a thorough review of all admin group memberships on the affected system to ensure no other unauthorized accounts have been added.\n- Reset passwords for any accounts that were added to the admin group without authorization to prevent further unauthorized access.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring and alerting for similar activities across the network to detect and respond to future privilege escalation attempts promptly.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"565c2b44-7a21-4818-955f-8d4737967d2e","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/","subtechnique":[{"id":"T1078.003","name":"Local Accounts","reference":"https://attack.mitre.org/techniques/T1078/003/"}]}]}],"to":"now","references":["https://managingosx.wordpress.com/2010/01/14/add-a-user-to-the-admin-group-via-command-line-3-0/"],"version":210,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.Ext.effective_parent.executable","type":"unknown","ecs":false},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.*"],"query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and\n process.name in (\"dscl\", \"dseditgroup\") and process.args like~ (\"/Groups/admin\", \"admin\") and process.args like (\"-a\", \"-append\") and\n not process.Ext.effective_parent.executable like (\"/Library/Application Support/JAMF/Jamf.app/Contents/MacOS/JamfDaemon.app/Contents/MacOS/JamfDaemon\",\n                                                   \"/Library/Application Support/JAMF/Jamf.app/Contents/MacOS/JamfManagementService.app/Contents/MacOS/JamfManagementService\",\n                                                   \"/opt/jc/bin/jumpcloud-agent\",\n                                                   \"/Library/Addigy/go-agent\")\n","actions":[]}
{"id":"d82138db-e8e8-40d3-94f0-1538ac7b4839","updated_at":"2025-06-15T07:42:43.613Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:42.064Z","created_by":"elastic","name":"Privileges Elevation via Parent Process PID Spoofing","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies parent process spoofing used to create an elevated child process. Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Privileges Elevation via Parent Process PID Spoofing\n\nParent Process ID (PPID) spoofing is a technique where adversaries manipulate the PPID of a process to disguise its origin, often to bypass security measures or gain elevated privileges. This is particularly concerning in Windows environments where processes can inherit permissions from their parent. The detection rule identifies suspicious process creation patterns, such as unexpected PPID values and elevated user IDs, while filtering out known legitimate processes and trusted signatures, to flag potential privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the process creation event details, focusing on the process.parent.Ext.real.pid and user.id fields to confirm if the PPID spoofing led to privilege escalation to SYSTEM.\n- Examine the process.executable and process.parent.executable paths to determine if the process is known or expected in the environment, and check against the list of excluded legitimate processes.\n- Investigate the process.code_signature fields to verify if the process is signed by a trusted entity and if the signature is valid, especially if the process is not excluded by the rule.\n- Check the historical activity of the involved user.id and process.parent.executable to identify any unusual patterns or recent changes in behavior.\n- Correlate the alert with other security events or logs to identify any related suspicious activities or potential lateral movement attempts within the network.\n\n### False positive analysis\n\n- Processes related to Windows Error Reporting such as WerFault.exe and Wermgr.exe can trigger false positives. These are legitimate system processes and can be excluded by verifying their signatures and paths.\n- Logon utilities like Utilman.exe spawning processes such as osk.exe, Narrator.exe, or Magnify.exe may appear suspicious but are often legitimate. Exclude these by confirming their usage context and ensuring they are executed by trusted users.\n- Third-party software like TeamViewer, Cisco WebEx, and Dell Inc. may cause false positives due to their legitimate use of process creation. Verify the code signature and trust status to exclude these processes.\n- Windows Update processes involving MpSigStub.exe and wuauclt.exe can be mistakenly flagged. Confirm these are part of regular update activities and exclude them based on their known paths and parent processes.\n- Remote support and management tools such as LogMeIn, GoToAssist, and Chrome Remote Desktop may be flagged. Ensure these are installed and used by authorized personnel and exclude them by their executable paths.\n- Netwrix Corporation's processes like adcrcpy.exe may be flagged if they are part of legitimate auditing activities. Verify the code signature and exclude these processes if they are part of authorized Netwrix Auditor operations.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.\n- Terminate any suspicious processes identified by the alert, especially those with spoofed PPIDs or elevated privileges, to stop potential malicious activities.\n- Review and revoke any unauthorized user accounts or privileges that may have been created or escalated during the incident.\n- Conduct a thorough forensic analysis of the affected system to identify any additional indicators of compromise or persistence mechanisms.\n- Restore the system from a known good backup if necessary, ensuring that all malicious artifacts are removed and system integrity is maintained.\n- Implement additional monitoring and logging on the affected system and network to detect any recurrence of similar activities.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if broader organizational impacts exist.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"26b01043-4f04-4d2f-882a-5a1d2e95751b","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/","subtechnique":[{"id":"T1134.002","name":"Create Process with Token","reference":"https://attack.mitre.org/techniques/T1134/002/"},{"id":"T1134.004","name":"Parent PID Spoofing","reference":"https://attack.mitre.org/techniques/T1134/004/"}]}]}],"to":"now","references":["https://gist.github.com/xpn/a057a26ec81e736518ee50848b9c2cd6","https://blog.didierstevens.com/2017/03/20/","https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-updateprocthreadattribute","https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1134.002/T1134.002.md"],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.Ext.real.pid","type":"unknown","ecs":false},{"name":"process.parent.executable","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*"],"query":"/* This rule is compatible with Elastic Endpoint only */\n\nprocess where host.os.type == \"windows\" and event.action == \"start\" and\n\n /* process creation via seclogon */\n process.parent.Ext.real.pid > 0 and\n\n /* PrivEsc to SYSTEM */\n user.id : \"S-1-5-18\"  and\n\n /* Common FPs - evasion via hollowing is possible, should be covered by code injection */\n not process.executable : (\"?:\\\\Windows\\\\System32\\\\WerFault.exe\",\n                           \"?:\\\\Windows\\\\SysWOW64\\\\WerFault.exe\",\n                           \"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\",\n                           \"?:\\\\Windows\\\\SysWOW64\\\\WerFaultSecure.exe\",\n                           \"?:\\\\Windows\\\\System32\\\\Wermgr.exe\",\n                           \"?:\\\\Windows\\\\SysWOW64\\\\Wermgr.exe\",\n                           \"?:\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\Install\\\\securityhealthsetup.exe\") and\n /* Logon Utilities */\n not (process.parent.executable : \"?:\\\\Windows\\\\System32\\\\Utilman.exe\" and\n     process.executable : (\"?:\\\\Windows\\\\System32\\\\osk.exe\",\n                           \"?:\\\\Windows\\\\System32\\\\Narrator.exe\",\n                           \"?:\\\\Windows\\\\System32\\\\Magnify.exe\")) and\n\n not process.parent.executable : \"?:\\\\Windows\\\\System32\\\\AtBroker.exe\" and\n\n not (process.code_signature.subject_name in\n           (\"philandro Software GmbH\", \"Freedom Scientific Inc.\", \"TeamViewer Germany GmbH\", \"Projector.is, Inc.\",\n            \"TeamViewer GmbH\", \"Cisco WebEx LLC\", \"Dell Inc\") and process.code_signature.trusted == true) and\n\n /* AM_Delta_Patch Windows Update */\n not (process.executable : (\"?:\\\\Windows\\\\System32\\\\MpSigStub.exe\", \"?:\\\\Windows\\\\SysWOW64\\\\MpSigStub.exe\") and\n      process.parent.executable : (\"?:\\\\Windows\\\\System32\\\\wuauclt.exe\",\n                                   \"?:\\\\Windows\\\\SysWOW64\\\\wuauclt.exe\",\n                                   \"?:\\\\Windows\\\\UUS\\\\Packages\\\\Preview\\\\*\\\\wuaucltcore.exe\",\n                                   \"?:\\\\Windows\\\\UUS\\\\amd64\\\\wuauclt.exe\",\n                                   \"?:\\\\Windows\\\\UUS\\\\amd64\\\\wuaucltcore.exe\",\n                                   \"?:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\UUS\\\\*\\\\wuaucltcore.exe\")) and\n not (process.executable : (\"?:\\\\Windows\\\\System32\\\\MpSigStub.exe\", \"?:\\\\Windows\\\\SysWOW64\\\\MpSigStub.exe\") and process.parent.executable == null) and\n\n /* Other third party SW */\n not process.parent.executable :\n                   (\"?:\\\\Program Files (x86)\\\\HEAT Software\\\\HEAT Remote\\\\HEATRemoteServer.exe\",\n                    \"?:\\\\Program Files (x86)\\\\VisualCron\\\\VisualCronService.exe\",\n                    \"?:\\\\Program Files\\\\BinaryDefense\\\\Vision\\\\Agent\\\\bds-vision-agent-app.exe\",\n                    \"?:\\\\Program Files\\\\Tablet\\\\Wacom\\\\WacomHost.exe\",\n                    \"?:\\\\Program Files (x86)\\\\LogMeIn\\\\x64\\\\LogMeIn.exe\",\n                    \"?:\\\\Program Files (x86)\\\\EMC Captiva\\\\Captiva Cloud Runtime\\\\Emc.Captiva.WebCaptureRunner.exe\",\n                    \"?:\\\\Program Files\\\\Freedom Scientific\\\\*.exe\",\n                    \"?:\\\\Program Files (x86)\\\\Google\\\\Chrome Remote Desktop\\\\*\\\\remoting_host.exe\",\n                    \"?:\\\\Program Files (x86)\\\\GoToAssist Remote Support Customer\\\\*\\\\g2ax_comm_customer.exe\") and\n not (\n    process.code_signature.trusted == true and process.code_signature.subject_name == \"Netwrix Corporation\" and\n    process.name : \"adcrcpy.exe\" and process.parent.executable : (\n      \"?:\\\\Program Files (x86)\\\\Netwrix Auditor\\\\Active Directory Auditing\\\\Netwrix.ADA.EventCollector.exe\",\n      \"?:\\\\Program Files (x86)\\\\Netwrix Auditor\\\\Active Directory Auditing\\\\Netwrix.ADA.Analyzer.exe\",\n      \"?:\\\\Netwrix Auditor\\\\Active Directory Auditing\\\\Netwrix.ADA.EventCollector.exe\"\n    )\n )\n","actions":[]}
{"id":"425c533c-26de-49e3-8be3-1a31aa292bf0","updated_at":"2025-06-15T07:42:43.623Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:38.998Z","created_by":"elastic","name":"PowerShell Kerberos Ticket Dump","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects PowerShell scripts that have the capability of dumping Kerberos tickets from LSA, which potentially indicates an attacker's attempt to acquire credentials for lateral movement.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating PowerShell Kerberos Ticket Dump\n\nKerberos is an authentication protocol that relies on tickets to grant access to network resources. Adversaries may abuse this protocol to acquire credentials for lateral movement within a network.\n\nThis rule indicates the use of scripts that contain code capable of dumping Kerberos tickets, which can indicate potential PowerShell abuse for credential theft.\n\n### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate if the script was executed, and if so, which account was targeted.\n- Identify the account involved and contact the owner to confirm whether they are aware of this activity.\n- Check if the script has any other functionality that can be potentially malicious.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate other potentially compromised accounts and hosts. Review login events (like 4624) for suspicious events involving the subject and target accounts.\n\n### False positive analysis\n\n- If this activity is expected and noisy in your environment, consider adding exceptions — preferably with a combination of file path and user ID conditions.\n\n### Related Rules\n\n- PowerShell Kerberos Ticket Request - eb610e70-f9e6-4949-82b9-f1c5bcd37c39\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n  - If malicious activity is confirmed, perform a broader investigation to identify the scope of the compromise and determine the appropriate remediation steps.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Disable or limit involved accounts during the investigation and response.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Reimage the host operating system or restore the compromised files to clean versions.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"fddff193-48a3-484d-8d35-90bb3d323a56","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"},{"id":"T1558","name":"Steal or Forge Kerberos Tickets","reference":"https://attack.mitre.org/techniques/T1558/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://github.com/MzHmO/PowershellKerberos/blob/main/dumper.ps1"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    \"LsaCallAuthenticationPackage\" and\n    (\n      \"KerbRetrieveEncodedTicketMessage\" or\n      \"KerbQueryTicketCacheMessage\" or\n      \"KerbQueryTicketCacheExMessage\" or\n      \"KerbQueryTicketCacheEx2Message\" or\n      \"KerbRetrieveTicketMessage\" or\n      \"KerbDecryptDataMessage\"\n    )\n  )\n","actions":[]}
{"id":"10931736-59e6-4858-b25a-0181b301651d","updated_at":"2025-06-15T07:50:40.086Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:50.287Z","created_by":"elastic","name":"Remote Execution via File Shares","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the execution of a file that was created by the virtual system process. This may indicate lateral movement via network file shares.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Remote Execution via File Shares\n\nAdversaries can use network shares to host tooling to support the compromise of other hosts in the environment. These tools can include discovery utilities, credential dumpers, malware, etc.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Review adjacent login events (e.g., 4624) in the alert timeframe to identify the account used to perform this action.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This activity can happen legitimately. Consider adding exceptions if it is expected and noisy in your environment.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Review the privileges needed to write to the network share and restrict write access as needed.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"ab75c24b-2502-43a0-bf7c-e60e662c811e","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.002","name":"SMB/Windows Admin Shares","reference":"https://attack.mitre.org/techniques/T1021/002/"}]}]}],"to":"now","references":["http://web.archive.org/web/20230329172636/https://blog.menasec.net/2020/08/new-trick-to-detect-lateral-movement.html","https://www.elastic.co/security-labs/hunting-for-lateral-movement-using-event-query-language"],"version":119,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.Ext.header_bytes","type":"unknown","ecs":false},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.file-*"],"query":"sequence with maxspan=1m\n  [file where host.os.type == \"windows\" and event.type in (\"creation\", \"change\") and \n   process.pid == 4 and (file.extension : \"exe\" or file.Ext.header_bytes : \"4d5a*\")] by host.id, file.path\n  [process where host.os.type == \"windows\" and event.type == \"start\" and\n    not (\n      /* Veeam related processes */\n      (\n        process.name : (\n          \"VeeamGuestHelper.exe\", \"VeeamGuestIndexer.exe\", \"VeeamAgent.exe\", \"VeeamLogShipper.exe\",\n          \"Veeam.VSS.Sharepoint20??.exe\", \"OracleProxy.exe\", \"Veeam.SQL.Service\", \"VeeamDeploymentSvc.exe\"\n        ) and process.code_signature.trusted == true and process.code_signature.subject_name : \"Veeam Software Group GmbH\"\n      ) or\n      /* PDQ related processes */\n      (\n        process.name : (\n          \"PDQInventoryScanner.exe\", \"PDQInventoryMonitor.exe\", \"PDQInventory-Scanner-?.exe\",\n          \"PDQInventoryWakeCommand-?.exe\", \"PDQDeployRunner-?.exe\"\n        ) and process.code_signature.trusted == true and process.code_signature.subject_name : \"PDQ.com Corporation\"\n      ) or\n      /* CrowdStrike related processes */\n      (\n        (process.executable : \"?:\\\\Windows\\\\System32\\\\drivers\\\\CrowdStrike\\\\*Sensor*.exe\" and \n         process.code_signature.trusted == true and process.code_signature.subject_name : \"CrowdStrike, Inc.\") or\n        (process.executable : \"?:\\\\Windows\\\\System32\\\\drivers\\\\CrowdStrike\\\\*-CsInstallerService.exe\" and \n         process.code_signature.trusted == true and process.code_signature.subject_name : \"Microsoft Windows Hardware Compatibility Publisher\")\n      ) or\n      /* MS related processes */\n      (\n        process.executable == \"System\" or\n        (process.executable : \"?:\\\\Windows\\\\ccmsetup\\\\ccmsetup.exe\" and \n         process.code_signature.trusted == true and process.code_signature.subject_name : \"Microsoft Corporation\")\n      ) or\n      /* CyberArk processes */\n      (\n        process.executable : \"?:\\\\Windows\\\\CAInvokerService.exe\" and \n        process.code_signature.trusted == true and process.code_signature.subject_name : \"CyberArk Software Ltd.\"\n      )  or\n      /* Sophos processes */\n      (\n        process.executable : \"?:\\\\ProgramData\\\\Sophos\\\\AutoUpdate\\\\Cache\\\\sophos_autoupdate1.dir\\\\SophosUpdate.exe\" and \n        process.code_signature.trusted == true and process.code_signature.subject_name : \"Sophos Ltd\"\n      )  or\n      /* Elastic processes */\n      (\n        process.executable : (\n          \"?:\\\\Program Files\\\\Elastic\\\\Agent\\\\data\\\\elastic-agent-*\\\\components\\\\previous\\\\elastic-endpoint.exe\",\n          \"?:\\\\Program Files\\\\Elastic\\\\Agent\\\\data\\\\elastic-agent-*\\\\elastic-agent.exe\",\n          \"?:\\\\Program Files\\\\Elastic\\\\Agent\\\\data\\\\elastic-agent-*\\\\components\\\\agentbeat.exe\"\n        ) and \n        process.code_signature.trusted == true and process.code_signature.subject_name : \"Elasticsearch, Inc.\"\n      ) \n    )\n  ] by host.id, process.executable\n","actions":[]}
{"id":"2c75e588-301c-4a72-8a6d-c3f1e133d1dc","updated_at":"2025-06-15T07:42:35.571Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.163Z","created_by":"elastic","name":"Incoming DCOM Lateral Movement with MMC","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Tactic: Defense Evasion","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the use of Distributed Component Object Model (DCOM) to run commands from a remote host, which are launched via the MMC20 Application COM Object. This behavior may indicate an attacker abusing a DCOM application to move laterally.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Incoming DCOM Lateral Movement with MMC\n\nDistributed Component Object Model (DCOM) enables software components to communicate over a network, often used in Windows environments for remote management. Adversaries exploit DCOM to execute commands remotely, leveraging applications like MMC20 to move laterally. The detection rule identifies suspicious activity by monitoring network traffic and process creation patterns, flagging potential misuse when MMC initiates remote commands, indicating possible lateral movement or defense evasion tactics.\n\n### Possible investigation steps\n\n- Review the network traffic logs to identify the source IP address that initiated the connection to the host running mmc.exe. Verify if this IP address is known and expected within the network environment.\n- Examine the process creation logs to confirm the parent-child relationship between mmc.exe and any suspicious processes. Investigate the child processes for any unusual or unauthorized activities.\n- Check the source and destination ports (both should be >= 49152) involved in the network connection to determine if they align with typical application behavior or if they are indicative of potential misuse.\n- Investigate the timeline of events to see if there are any other related alerts or activities on the same host or originating from the same source IP address, which could provide additional context or indicate a broader attack pattern.\n- Correlate the findings with any existing threat intelligence or known attack patterns related to DCOM abuse and lateral movement to assess the potential risk and impact on the organization.\n\n### False positive analysis\n\n- Legitimate administrative tasks using MMC may trigger the rule. Regularly review and document routine administrative activities to differentiate them from suspicious behavior.\n- Automated scripts or management tools that use MMC for remote management can cause false positives. Identify and whitelist these tools by their process and network patterns.\n- Internal network scanning or monitoring tools might mimic the behavior detected by the rule. Exclude known IP addresses or ranges associated with these tools to reduce noise.\n- Scheduled tasks or maintenance operations that involve MMC could be misinterpreted as lateral movement. Ensure these tasks are logged and recognized as part of normal operations.\n- Software updates or patches that require MMC to execute remote commands might trigger alerts. Maintain an updated list of such activities and exclude them from triggering the rule.\n\n### Response and remediation\n\n- Isolate the affected host immediately from the network to prevent further lateral movement and contain the threat.\n- Terminate any suspicious processes associated with mmc.exe on the affected host to stop any ongoing malicious activity.\n- Conduct a thorough review of the affected host's event logs and network traffic to identify any additional indicators of compromise or other affected systems.\n- Reset credentials for any accounts that were accessed or potentially compromised during the incident to prevent unauthorized access.\n- Apply patches and updates to the affected systems and any other vulnerable systems in the network to mitigate known vulnerabilities that could be exploited.\n- Implement network segmentation to limit the ability of threats to move laterally within the network in the future.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional actions are necessary.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"51ce96fb-9e52-4dad-b0ba-99b54440fc9a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.003","name":"Distributed Component Object Model","reference":"https://attack.mitre.org/techniques/T1021/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.014","name":"MMC","reference":"https://attack.mitre.org/techniques/T1218/014/"}]}]}],"to":"now","references":["https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/"],"version":211,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"destination.port","type":"long","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.entity_id","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true},{"name":"source.port","type":"long","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-endpoint.events.network-*","logs-windows.sysmon_operational-*"],"query":"sequence by host.id with maxspan=1m\n [network where host.os.type == \"windows\" and event.type == \"start\" and process.name : \"mmc.exe\" and source.port >= 49152 and\n destination.port >= 49152 and source.ip != \"127.0.0.1\" and source.ip != \"::1\" and\n  network.direction : (\"incoming\", \"ingress\") and network.transport == \"tcp\"\n ] by process.entity_id\n [process where host.os.type == \"windows\" and event.type == \"start\" and process.parent.name : \"mmc.exe\"\n ] by process.parent.entity_id\n","actions":[]}
{"id":"69be4f92-2fb7-42bd-be2a-dce910fa332b","updated_at":"2025-06-15T07:42:43.616Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.275Z","created_by":"elastic","name":"Incoming DCOM Lateral Movement via MSHTA","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the use of Distributed Component Object Model (DCOM) to execute commands from a remote host, which are launched via the HTA Application COM Object. This behavior may indicate an attacker abusing a DCOM application to move laterally while attempting to evade detection.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Incoming DCOM Lateral Movement via MSHTA\n\nDCOM allows software components to communicate over a network, enabling remote execution of applications like MSHTA, which runs HTML applications. Adversaries exploit this by executing commands remotely, bypassing traditional security measures. The detection rule identifies suspicious MSHTA activity by monitoring process starts and network traffic, focusing on unusual port usage and remote IP addresses, indicating potential lateral movement attempts.\n\n### Possible investigation steps\n\n- Review the process start event for mshta.exe on the affected host to gather details such as the process entity ID, command-line arguments, and parent process information to understand how mshta.exe was executed.\n- Analyze the network traffic associated with the mshta.exe process, focusing on the source and destination IP addresses and ports, to identify any unusual or unauthorized remote connections.\n- Check the source IP address involved in the network event to determine if it is known or associated with any previous suspicious activity or if it belongs to an internal or external network.\n- Investigate the timeline of events on the host to identify any preceding or subsequent suspicious activities that might indicate a broader attack pattern or lateral movement attempts.\n- Correlate the findings with other security logs and alerts from the same host or network segment to identify any additional indicators of compromise or related malicious activities.\n- Assess the risk and impact of the detected activity by considering the host's role within the network and any sensitive data or systems it may have access to.\n\n### False positive analysis\n\n- Legitimate administrative tasks using MSHTA for remote management can trigger the rule. Identify and document these tasks, then create exceptions for known administrative IP addresses or specific user accounts.\n- Automated software updates or deployments that utilize MSHTA may appear as suspicious activity. Monitor and whitelist the IP addresses and ports associated with these updates to prevent false positives.\n- Internal network scanning tools or security assessments might mimic lateral movement behavior. Coordinate with IT and security teams to recognize these activities and exclude them from triggering alerts.\n- Custom applications that leverage MSHTA for inter-process communication could be flagged. Review these applications and exclude their known processes or network patterns from the detection rule.\n- Remote desktop or support tools that use MSHTA for legitimate purposes should be identified. Whitelist these tools by their process names or associated network traffic to reduce unnecessary alerts.\n\n### Response and remediation\n\n- Isolate the affected host immediately from the network to prevent further lateral movement and potential data exfiltration.\n- Terminate the mshta.exe process on the affected host to stop any ongoing malicious activity.\n- Conduct a thorough examination of the affected host to identify any additional malicious files or processes, focusing on those initiated around the time of the alert.\n- Reset credentials for any accounts that were active on the affected host during the time of the alert to prevent unauthorized access.\n- Review and restrict DCOM permissions and configurations on the affected host and other critical systems to limit the potential for similar attacks.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if other systems have been compromised.\n- Update detection mechanisms and threat intelligence feeds to enhance monitoring for similar DCOM-based lateral movement attempts in the future.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"622ecb68-fa81-4601-90b5-f8cd661e4520","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.003","name":"Distributed Component Object Model","reference":"https://attack.mitre.org/techniques/T1021/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.005","name":"Mshta","reference":"https://attack.mitre.org/techniques/T1218/005/"}]}]}],"to":"now","references":["https://codewhitesec.blogspot.com/2018/07/lethalhta.html"],"version":210,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"destination.port","type":"long","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true},{"name":"source.port","type":"long","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-endpoint.events.network-*","logs-windows.sysmon_operational-*"],"query":"sequence with maxspan=1m\n  [process where host.os.type == \"windows\" and event.type == \"start\" and\n     process.name : \"mshta.exe\" and process.args : \"-Embedding\"\n  ] by host.id, process.entity_id\n  [network where host.os.type == \"windows\" and event.type == \"start\" and process.name : \"mshta.exe\" and\n     network.direction : (\"incoming\", \"ingress\") and network.transport == \"tcp\" and\n     source.port > 49151 and destination.port > 49151 and source.ip != \"127.0.0.1\" and source.ip != \"::1\"\n  ] by host.id, process.entity_id\n","actions":[]}
{"id":"4606f2e3-2775-404e-b183-8108c346f7bf","updated_at":"2025-06-15T07:42:41.608Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:42.054Z","created_by":"elastic","name":"Potential Reverse Shell via Background Process","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Data Source: Elastic Endgame","Data Source: Crowdstrike","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Monitors for the execution of background processes with process arguments capable of opening a socket in the /dev/tcp channel. This may indicate the creation of a backdoor reverse connection, and should be investigated further.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Reverse Shell via Background Process\n\nIn Linux environments, background processes can be manipulated to establish reverse shells, allowing adversaries to gain remote access. By exploiting shell commands to open network sockets, attackers can create backdoor connections. The detection rule identifies suspicious executions of background processes, like 'setsid' or 'nohup', with arguments indicating socket activity in '/dev/tcp', often initiated by common shell interpreters. This helps in flagging potential reverse shell activities for further investigation.\n\n### Possible investigation steps\n\n- Review the process details to confirm the presence of suspicious arguments, specifically looking for '/dev/tcp' in the process.args field, which indicates an attempt to open a network socket.\n- Identify the parent process by examining the process.parent.name field to determine if it is one of the common shell interpreters like 'bash', 'dash', 'sh', etc., which could suggest a script-based execution.\n- Check the user context under which the process was executed to assess if it aligns with expected user behavior or if it indicates potential compromise of a user account.\n- Investigate the network activity associated with the host to identify any unusual outbound connections that could correlate with the reverse shell attempt.\n- Correlate the event with other security alerts or logs from the same host to identify any preceding or subsequent suspicious activities that might indicate a broader attack pattern.\n- Review historical data for similar process executions on the host to determine if this is an isolated incident or part of a recurring pattern.\n\n### False positive analysis\n\n- Legitimate administrative scripts may use background processes with network socket activity for maintenance tasks. Review the script's purpose and source to determine if it is authorized.\n- Automated monitoring tools might execute commands that match the rule's criteria. Identify these tools and consider excluding their specific process names or paths from the rule.\n- Development environments often run test scripts that open network connections. Verify the development context and exclude known development-related processes to reduce noise.\n- Backup or synchronization software may use similar techniques to transfer data. Confirm the software's legitimacy and add exceptions for its processes if necessary.\n- System updates or package management tools might trigger alerts when installing or updating software. Monitor these activities and whitelist trusted update processes.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious background processes identified by the alert, specifically those involving 'setsid' or 'nohup' with '/dev/tcp' in their arguments.\n- Conduct a thorough review of the affected system's process and network activity logs to identify any additional indicators of compromise or lateral movement.\n- Reset credentials for any accounts that were active on the affected system to prevent unauthorized access using potentially compromised credentials.\n- Apply security patches and updates to the affected system to address any vulnerabilities that may have been exploited.\n- Implement network segmentation to limit the ability of compromised systems to communicate with critical infrastructure or sensitive data repositories.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"259be2d8-3b1a-4c2c-a0eb-0c8e77f35e39","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":[],"version":108,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"crowdstrike","version":"^1.1.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process*","logs-sentinel_one_cloud_funnel.*"],"query":"process where host.os.type == \"linux\" and event.type == \"start\" and\n  event.action in (\"exec\", \"exec_event\", \"start\", \"ProcessRollup2\") and\n  process.name in (\"setsid\", \"nohup\") and process.args : \"*/dev/tcp/*0>&1*\" and\n  process.parent.name in (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\")\n","actions":[]}
{"id":"41bb6f2a-d46d-4b68-a1b4-83b49cdf1393","updated_at":"2025-06-15T07:42:35.550Z","updated_by":"sangpt","created_at":"2025-03-25T01:42:29.161Z","created_by":"sangpt","name":"Execution of a Downloaded Windows Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies the creation of a Windows script downloaded from the internet followed by the execution of a scripting utility. Adversaries may use Windows script files for initial access and execution.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Execution of a downloaded windows script\n\nWindows scripts, often used for legitimate automation tasks, can be exploited by adversaries to execute malicious code. Attackers may download scripts via browsers or file utilities, then execute them using scripting tools like wscript or mshta. The detection rule identifies such threats by monitoring script creation from internet sources and subsequent execution, focusing on unusual parent-child process relationships and script attributes.\n\n### Possible investigation steps\n\n- Review the file creation event to identify the specific script file that was downloaded, noting its name, path, and extension to understand the potential threat.\n- Examine the origin URL or referrer URL of the downloaded script to determine the source and assess its legitimacy or potential malicious intent.\n- Investigate the parent process, such as chrome.exe or explorer.exe, to understand how the script was downloaded and whether it aligns with typical user behavior.\n- Analyze the execution event of the scripting utility (wscript.exe or mshta.exe) to identify the command-line arguments used, which may provide insight into the script's intended actions.\n- Check the user account associated with the script execution to determine if the activity is expected for that user or if it indicates a compromised account.\n- Correlate the timing of the script creation and execution events to see if they fall within a suspicious timeframe, such as outside of normal working hours.\n- Look for any additional related alerts or logs on the host that might indicate further malicious activity or lateral movement following the script execution.\n\n### False positive analysis\n\n- Legitimate script automation tools may trigger this rule if they download and execute scripts from the internet. Users can create exceptions for known safe tools by excluding specific file paths or process names.\n- Software updates or installations that download scripts as part of their process might be flagged. To handle this, users can whitelist specific origin URLs or referrer URLs associated with trusted software vendors.\n- Internal scripts distributed via corporate intranet sites could be misidentified as threats. Users should consider excluding scripts with known internal origin URLs or specific user IDs associated with IT operations.\n- Browser extensions or plugins that automate tasks using scripts may cause false positives. Users can exclude these by identifying and excluding the specific browser process names or file extensions involved.\n- Frequent use of file utilities like winrar or 7zFM for legitimate script handling can be excluded by specifying trusted file paths or user IDs that regularly perform these actions.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further execution of potentially malicious scripts and lateral movement.\n- Terminate any suspicious processes identified in the alert, such as wscript.exe or mshta.exe, to stop the execution of the downloaded script.\n- Quarantine the downloaded script file and any associated files to prevent further execution and facilitate forensic analysis.\n- Conduct a thorough scan of the affected system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any additional malicious files or remnants.\n- Review and analyze the origin URL and referrer URL of the downloaded script to identify potential malicious websites or compromised sources, and block these URLs at the network level.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement application whitelisting to restrict the execution of unauthorized scripts and scripting utilities, reducing the risk of similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"79543b00-28a5-4461-81ac-644c4dc4012f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.005","name":"Visual Basic","reference":"https://attack.mitre.org/techniques/T1059/005/"},{"id":"T1059.007","name":"JavaScript","reference":"https://attack.mitre.org/techniques/T1059/007/"},{"id":"T1059.003","name":"Windows Command Shell","reference":"https://attack.mitre.org/techniques/T1059/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.005","name":"Mshta","reference":"https://attack.mitre.org/techniques/T1218/005/"}]}]}],"to":"now","references":[],"version":5,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.origin_referrer_url","type":"unknown","ecs":false},{"name":"file.origin_url","type":"unknown","ecs":false},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args_count","type":"long","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.file-*","logs-endpoint.events.process-*"],"query":"sequence by host.id, user.id with maxspan=3m\n[file where host.os.type == \"windows\" and event.action == \"creation\" and user.id != \"S-1-5-18\" and\n  process.name : (\"chrome.exe\", \"msedge.exe\", \"brave.exe\", \"browser.exe\", \"dragon.exe\", \"vivaldi.exe\", \"explorer.exe\", \"winrar.exe\", \"7zFM.exe\", \"7zG.exe\", \"Bandizip.exe\") and\n  file.extension in~ (\"js\", \"jse\", \"vbs\", \"vbe\", \"wsh\", \"hta\", \"cmd\", \"bat\") and\n  (file.origin_url != null or file.origin_referrer_url != null)]\n[process where host.os.type == \"windows\" and event.type == \"start\" and\n process.parent.name : (\"chrome.exe\", \"msedge.exe\", \"brave.exe\", \"firefox.exe\", \"browser.exe\", \"dragon.exe\", \"vivaldi.exe\", \"explorer.exe\", \"winrar.exe\", \"7zFM.exe\", \"7zG.exe\", \"Bandizip.exe\") and \n process.args_count >= 2 and\n (\n  process.name in~ (\"wscript.exe\", \"mshta.exe\") or\n  (process.name : \"cmd.exe\" and process.command_line : (\"*.cmd*\", \"*.bat*\"))\n  )]\n","actions":[]}
{"id":"a0c27d95-a8c9-4498-b9fe-be97ba7696a3","updated_at":"2025-06-15T07:58:44.925Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.150Z","created_by":"elastic","name":"Suspicious Script Object Execution","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Defend","Data Source: Elastic Endgame","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies scrobj.dll loaded into unusual Microsoft processes. This usually means a malicious scriptlet is being executed in the target process.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Script Object Execution\n\nThe scrobj.dll is a legitimate Windows library used for executing scriptlets, often in automation tasks. However, adversaries can exploit it to run malicious scripts within trusted processes, evading detection. The detection rule identifies unusual loading of scrobj.dll in non-standard processes, flagging potential misuse. By excluding common executables, it focuses on anomalous activity, aiding in early threat detection.\n\n### Possible investigation steps\n\n- Review the process executable path to confirm if it is indeed non-standard for loading scrobj.dll, as specified in the query.\n- Check the parent process of the flagged executable to understand how it was initiated and assess if it aligns with typical behavior.\n- Investigate the user account associated with the process execution to determine if it is a legitimate user or potentially compromised.\n- Analyze recent activity on the host for any other suspicious behavior or anomalies that might correlate with the alert.\n- Examine network connections from the host to identify any unusual or unauthorized external communications that could indicate malicious activity.\n- Review historical data for similar alerts on the same host to identify patterns or repeated suspicious behavior.\n\n### False positive analysis\n\n- Legitimate administrative scripts may trigger the rule if they are executed using non-standard processes. To handle this, identify and document regular administrative tasks that use scriptlets and exclude these specific processes from the rule.\n- Custom enterprise applications that utilize scrobj.dll for legitimate automation purposes might be flagged. Review these applications and add them to the exclusion list if they are verified as safe.\n- Scheduled tasks or maintenance scripts that load scrobj.dll in non-standard processes can cause false positives. Regularly audit scheduled tasks and exclude known safe processes from the detection rule.\n- Development or testing environments where scriptlets are frequently used for automation may generate alerts. Consider creating a separate rule set for these environments to reduce noise while maintaining security monitoring.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further execution of potentially malicious scripts and lateral movement.\n- Terminate any suspicious processes identified as loading scrobj.dll in non-standard executables to halt malicious activity.\n- Conduct a thorough scan of the affected system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any malicious scripts or files.\n- Review and restore any altered system configurations or settings to their default state to ensure system integrity.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.\n- Implement application whitelisting to prevent unauthorized execution of scripts and binaries, focusing on the processes identified in the detection rule.\n- Update detection mechanisms to monitor for similar activities across the network, ensuring that any future attempts to exploit scrobj.dll are promptly identified and addressed.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"4ed678a9-3a4f-41fb-9fea-f85a6e0a0dff","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.010","name":"Regsvr32","reference":"https://attack.mitre.org/techniques/T1218/010/"}]}]}],"to":"now","references":[],"version":212,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"dll.name","type":"keyword","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.library-*","logs-windows.sysmon_operational-*","winlogbeat-*","endgame-*"],"query":"any where host.os.type == \"windows\" and\n (event.category : (\"library\", \"driver\") or (event.category == \"process\" and event.action : \"Image loaded*\")) and\n (?dll.name : \"scrobj.dll\" or ?file.name : \"scrobj.dll\") and\n process.executable : (\"?:\\\\Windows\\\\System32\\\\*.exe\", \"?:\\\\Windows\\\\SysWOW64\\\\*.exe\") and\n not process.executable : (\n       \"?:\\\\Windows\\\\System32\\\\cscript.exe\",\n       \"?:\\\\Windows\\\\SysWOW64\\\\cscript.exe\",\n       \"?:\\\\Windows\\\\system32\\\\msiexec.exe\",\n       \"?:\\\\Windows\\\\SysWOW64\\\\msiexec.exe\",\n       \"?:\\\\Windows\\\\System32\\\\smartscreen.exe\",\n       \"?:\\\\Windows\\\\system32\\\\taskhostw.exe\",\n       \"?:\\\\windows\\\\system32\\\\inetsrv\\\\w3wp.exe\",\n       \"?:\\\\windows\\\\SysWOW64\\\\inetsrv\\\\w3wp.exe\",\n       \"?:\\\\Windows\\\\system32\\\\wscript.exe\",\n       \"?:\\\\Windows\\\\SysWOW64\\\\wscript.exe\",\n       \"?:\\\\Windows\\\\System32\\\\mshta.exe\",\n       \"?:\\\\Windows\\\\system32\\\\mobsync.exe\",\n       \"?:\\\\Windows\\\\SysWOW64\\\\mobsync.exe\",\n       \"?:\\\\Windows\\\\System32\\\\cmd.exe\",\n       \"?:\\\\Windows\\\\SysWOW64\\\\cmd.exe\",\n       \"?:\\\\Windows\\\\System32\\\\OpenWith.exe\",\n       \"?:\\\\Windows\\\\System32\\\\wbem\\\\WMIADAP.exe\",\n       \"?:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\")\n","actions":[]}
{"id":"2a1ebd72-b52e-4f84-a4a2-875c3440f0c3","updated_at":"2025-06-15T07:42:43.617Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.270Z","created_by":"elastic","name":"Interactive Logon by an Unusual Process","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies interactive logon attempt with alternate credentials and by an unusual process. Adversaries may create a new token to escalate privileges and bypass access controls.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Interactive Logon by an Unusual Process\n\nInteractive logons in Windows environments typically involve standard processes like winlogon.exe. Adversaries may exploit alternate processes to create tokens, escalating privileges and bypassing controls. This detection rule identifies anomalies by flagging logons via non-standard executables, focusing on mismatched user SIDs and unusual process paths, thus highlighting potential privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the process executable path to determine if it is a known or expected application for interactive logons. Investigate any unfamiliar or suspicious paths.\n- Examine the SubjectUserSid and TargetUserSid to identify the users involved in the logon attempt. Check for any discrepancies or unusual patterns in user activity.\n- Analyze the event logs around the time of the alert to identify any related or preceding events that might indicate how the unusual process was initiated.\n- Investigate the system for any signs of compromise, such as unexpected changes in system files, unauthorized software installations, or other indicators of malicious activity.\n- Check for any recent privilege escalation attempts or access token manipulations that might correlate with the alert, using the MITRE ATT&CK framework references for guidance.\n\n### False positive analysis\n\n- Legitimate administrative tools or scripts may trigger this rule if they use non-standard executables for logon processes. To manage this, identify and whitelist these known tools by adding their executable paths to the exception list.\n- Custom applications developed in-house that require interactive logon might be flagged. Review these applications and, if verified as safe, exclude their executable paths from the detection rule.\n- Automated tasks or services that use alternate credentials for legitimate purposes can cause false positives. Analyze these tasks and, if they are part of regular operations, adjust the rule to exclude their specific user SIDs or executable paths.\n- Security software or monitoring tools that perform logon actions for scanning or auditing purposes may be incorrectly flagged. Confirm their legitimacy and add them to the exception list to prevent unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious processes identified as executing from non-standard paths that are not part of the legitimate Windows system processes.\n- Revoke any tokens or credentials associated with the anomalous logon session to prevent further misuse.\n- Conduct a thorough review of user accounts involved, focusing on any unauthorized privilege escalations or changes in permissions, and reset passwords as necessary.\n- Analyze the system for any signs of persistence mechanisms or additional malware, and remove any identified threats.\n- Restore the system from a known good backup if any unauthorized changes or malware are detected that cannot be easily remediated.\n- Report the incident to the appropriate internal security team or management for further investigation and potential escalation to law enforcement if necessary.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"61766ef9-48a5-4247-ad74-3349de7eb2ad","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/","subtechnique":[{"id":"T1134.002","name":"Create Process with Token","reference":"https://attack.mitre.org/techniques/T1134/002/"},{"id":"T1134.003","name":"Make and Impersonate Token","reference":"https://attack.mitre.org/techniques/T1134/003/"}]}]}],"to":"now","references":["https://attack.mitre.org/techniques/T1134/002/"],"version":108,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"winlog.event_data.LogonProcessName","type":"keyword","ecs":false},{"name":"winlog.event_data.SubjectUserSid","type":"keyword","ecs":false},{"name":"winlog.event_data.TargetUserSid","type":"keyword","ecs":false},{"name":"winlog.logon.type","type":"unknown","ecs":false}],"setup":"## Setup\n\nAudit event 4624 is needed to trigger this rule.\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"authentication where\n host.os.type : \"windows\" and winlog.event_data.LogonProcessName : \"Advapi*\" and\n winlog.logon.type == \"Interactive\" and winlog.event_data.SubjectUserSid : (\"S-1-5-21*\", \"S-1-12-*\") and\n winlog.event_data.TargetUserSid : (\"S-1-5-21*\", \"S-1-12-*\")  and process.executable : \"C:\\\\*\" and\n not startswith~(winlog.event_data.SubjectUserSid, winlog.event_data.TargetUserSid) and\n not process.executable :\n            (\"?:\\\\Windows\\\\System32\\\\winlogon.exe\",\n             \"?:\\\\Windows\\\\System32\\\\wininit.exe\",\n             \"?:\\\\Program Files\\\\*.exe\",\n             \"?:\\\\Program Files (x86)\\\\*.exe\",\n             \"?:\\\\Windows\\\\SysWOW64\\\\inetsrv\\\\w3wp.exe\",\n             \"?:\\\\Windows\\\\System32\\\\inetsrv\\\\w3wp.exe\",\n             \"?:\\\\Windows\\\\SysWOW64\\\\msiexec.exe\")\n","actions":[]}
{"id":"6fd31017-974a-4259-a590-da7f020112f9","updated_at":"2025-06-15T07:42:35.573Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.183Z","created_by":"elastic","name":"Potential Execution via XZBackdoor","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Persistence","Tactic: Lateral Movement","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"It identifies potential malicious shell executions through remote SSH and detects cases where the sshd service suddenly terminates soon after successful execution, suggesting suspicious behavior similar to the XZ backdoor.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Execution via XZBackdoor\n\nThe XZBackdoor leverages SSH, a secure protocol for remote access, to execute malicious commands stealthily. Adversaries exploit SSH by initiating sessions that mimic legitimate activity, then abruptly terminate them post-execution to evade detection. The detection rule identifies anomalies by tracking SSH processes that start and end unexpectedly, especially when non-standard executables are invoked, signaling potential backdoor activity.\n\n### Possible investigation steps\n\n- Review the SSH session logs on the affected host to identify any unusual or unauthorized access attempts, focusing on sessions that match the process.pid and process.entity_id from the alert.\n- Examine the command history and executed commands for the user associated with the user.id in the alert to identify any suspicious or unexpected activities.\n- Investigate the non-standard executables invoked by the SSH session by checking the process.executable field to determine if they are legitimate or potentially malicious.\n- Analyze the network activity associated with the SSH session, particularly any disconnect_received events, to identify any unusual patterns or connections to suspicious IP addresses.\n- Check the exit codes of the SSH processes, especially those with a non-zero process.exit_code, to understand the reason for the abrupt termination and whether it aligns with typical error codes or indicates malicious activity.\n\n### False positive analysis\n\n- Legitimate administrative SSH sessions may trigger the rule if they involve non-standard executables. To manage this, create exceptions for known administrative scripts or tools that are frequently used in your environment.\n- Automated processes or scripts that use SSH for routine tasks might mimic the behavior of the XZBackdoor. Identify these processes and exclude them by specifying their executable paths or command-line patterns in the rule exceptions.\n- Security tools or monitoring solutions that perform SSH-based checks could be mistaken for malicious activity. Review these tools and add their signatures to the exclusion list to prevent false alerts.\n- Custom applications that use SSH for communication might be flagged. Document these applications and adjust the rule to recognize their specific execution patterns as non-threatening.\n- Temporary network issues causing abrupt SSH session terminations could be misinterpreted as suspicious behavior. Monitor network stability and consider excluding known transient disconnections from triggering alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious SSH sessions identified by the detection rule to stop ongoing malicious activity.\n- Conduct a thorough review of the affected host's SSH configuration and logs to identify unauthorized changes or access patterns.\n- Reset credentials for any user accounts involved in the suspicious SSH activity to prevent further unauthorized access.\n- Restore the affected system from a known good backup if any unauthorized changes or malware are detected.\n- Implement network segmentation to limit SSH access to critical systems and reduce the attack surface.\n- Escalate the incident to the security operations center (SOC) for further investigation and to determine if additional systems are compromised.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"7afc6cc9-8800-4c7f-be6b-b688d2dea248","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1543","name":"Create or Modify System Process","reference":"https://attack.mitre.org/techniques/T1543/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1556","name":"Modify Authentication Process","reference":"https://attack.mitre.org/techniques/T1556/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.004","name":"SSH","reference":"https://attack.mitre.org/techniques/T1021/004/"}]},{"id":"T1563","name":"Remote Service Session Hijacking","reference":"https://attack.mitre.org/techniques/T1563/","subtechnique":[{"id":"T1563.001","name":"SSH Hijacking","reference":"https://attack.mitre.org/techniques/T1563/001/"}]}]}],"to":"now","references":["https://github.com/amlweems/xzbot","https://access.redhat.com/security/cve/CVE-2024-3094","https://www.elastic.co/security-labs/500ms-to-midnight"],"version":8,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.exit_code","type":"long","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.entity_id","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"process.parent.pid","type":"long","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id, user.id with maxspan=1s\n [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and process.name == \"sshd\" and\n    process.args == \"-D\" and process.args == \"-R\"] by process.pid, process.entity_id\n [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and process.parent.name == \"sshd\" and\n  process.executable != null and not (\n    process.executable in (\"/usr/sbin/sshd\", \"/usr/sbin/unix_chkpwd\", \"/usr/bin/google_authorized_keys\", \"/usr/bin/fipscheck\") or\n    process.args like (\"rsync*\", \"systemctl*\", \"/usr/sbin/unix_chkpwd\", \"/usr/bin/google_authorized_keys\", \"/usr/sbin/aad_certhandler*\") or\n    process.command_line like \"sh -c /usr/bin/env -i PATH=*\"\n  )] by process.parent.pid, process.parent.entity_id\n [process where host.os.type == \"linux\" and event.action == \"end\" and process.name == \"sshd\" and process.exit_code != 0] by process.pid, process.entity_id\n [network where host.os.type == \"linux\" and event.type == \"end\" and event.action == \"disconnect_received\" and process.name == \"sshd\"] by process.pid, process.entity_id\n","actions":[]}
{"id":"3c0545ae-6a51-47b4-b009-791f0223bb03","updated_at":"2025-06-15T07:42:41.605Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:53.399Z","created_by":"elastic","name":"Default Cobalt Strike Team Server Certificate","tags":["Tactic: Command and Control","Threat: Cobalt Strike","Use Case: Threat Detection","Domain: Endpoint","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule detects the use of the default Cobalt Strike Team Server TLS certificate. Cobalt Strike is software for Adversary Simulations and Red Team Operations which are security assessments that replicate the tactics and techniques of an advanced adversary in a network. Modifications to the Packetbeat configuration can be made to include MD5 and SHA256 hashing algorithms (the default is SHA1). See the References section for additional information on module configuration.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Default Cobalt Strike Team Server Certificate\n\nCobalt Strike is a tool used for simulating advanced cyber threats, often employed by security teams to test defenses. However, adversaries can exploit its default server certificate to establish covert command and control channels. The detection rule identifies this misuse by monitoring network traffic for specific cryptographic hashes associated with the default certificate, flagging potential unauthorized Cobalt Strike activity.\n\n### Possible investigation steps\n\n- Review the network traffic logs to identify any connections associated with the specific cryptographic hashes: MD5 (950098276A495286EB2A2556FBAB6D83), SHA1 (6ECE5ECE4192683D2D84E25B0BA7E04F9CB7EB7C), or SHA256 (87F2085C32B6A2CC709B365F55873E207A9CAA10BFFECF2FD16D3CF9D94D390C).\n- Identify the source and destination IP addresses involved in the flagged network traffic to determine the potential origin and target of the Cobalt Strike activity.\n- Correlate the identified IP addresses with known assets in the network to assess if any internal systems are potentially compromised.\n- Check for any other suspicious or anomalous network activities around the same time as the alert to identify potential lateral movement or additional command and control channels.\n- Investigate any associated processes or user accounts on the involved systems to determine if there are signs of compromise or unauthorized access.\n- Review historical data to see if there have been previous alerts or similar activities involving the same cryptographic hashes or IP addresses, which might indicate a persistent threat.\n\n### False positive analysis\n\n- Legitimate security testing activities by internal teams using Cobalt Strike may trigger the rule. Coordinate with security teams to whitelist known testing IP addresses or certificate hashes.\n- Some commercial penetration testing services may use Cobalt Strike with default certificates. Verify the legitimacy of such services and exclude their traffic from detection by adding their certificate hashes to an exception list.\n- Network appliances or security tools that simulate adversary behavior for training purposes might use similar certificates. Identify these tools and configure exceptions for their specific network traffic patterns.\n- In environments where Cobalt Strike is used for authorized red team exercises, ensure that the default certificate is replaced with a custom one to avoid false positives.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further communication with the potential Cobalt Strike server.\n- Conduct a thorough forensic analysis of the isolated system to identify any malicious payloads or additional indicators of compromise.\n- Revoke any compromised credentials and enforce a password reset for affected accounts to prevent unauthorized access.\n- Update and patch all systems to the latest security standards to mitigate vulnerabilities that could be exploited by similar threats.\n- Implement network segmentation to limit the lateral movement of threats within the network.\n- Enhance monitoring and logging to capture detailed network traffic and endpoint activity, focusing on the identified cryptographic hashes.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and coordination with external threat intelligence sources if necessary.\n\n## Threat intel\n\nWhile Cobalt Strike is intended to be used for penetration tests and IR training, it is frequently used by actual threat actors (TA) such as APT19, APT29, APT32, APT41, FIN6, DarkHydrus, CopyKittens, Cobalt Group, Leviathan, and many other unnamed criminal TAs. This rule uses high-confidence atomic indicators, so alerts should be investigated rapidly.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"e7075e8d-a966-458e-a183-85cd331af255","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/","subtechnique":[{"id":"T1071.001","name":"Web Protocols","reference":"https://attack.mitre.org/techniques/T1071/001/"}]}]}],"to":"now","references":["https://attack.mitre.org/software/S0154/","https://www.cobaltstrike.com/help-setup-collaboration","https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-tls.html","https://www.elastic.co/guide/en/beats/filebeat/7.9/filebeat-module-suricata.html","https://www.elastic.co/guide/en/beats/filebeat/7.9/filebeat-module-zeek.html","https://www.elastic.co/security-labs/collecting-cobalt-strike-beacons-with-the-elastic-stack"],"version":108,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"network_traffic","version":"^1.1.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"tls.server.hash.md5","type":"keyword","ecs":true},{"name":"tls.server.hash.sha1","type":"keyword","ecs":true},{"name":"tls.server.hash.sha256","type":"keyword","ecs":true}],"setup":"","type":"query","language":"kuery","index":["packetbeat-*","auditbeat-*","filebeat-*","logs-network_traffic.*"],"query":"(event.dataset: network_traffic.tls or event.category: (network or network_traffic))\n  and (tls.server.hash.md5:950098276A495286EB2A2556FBAB6D83\n  or tls.server.hash.sha1:6ECE5ECE4192683D2D84E25B0BA7E04F9CB7EB7C\n  or tls.server.hash.sha256:87F2085C32B6A2CC709B365F55873E207A9CAA10BFFECF2FD16D3CF9D94D390C)\n","actions":[]}
{"id":"26cd1e8e-727b-47a2-965a-9b9ab4081939","updated_at":"2025-06-15T07:42:41.611Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.382Z","created_by":"elastic","name":"User account exposed to Kerberoasting","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Active Directory","Resources: Investigation Guide","Use Case: Active Directory Monitoring","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Detects when a user account has the servicePrincipalName attribute modified. Attackers can abuse write privileges over a user to configure Service Principle Names (SPNs) so that they can perform Kerberoasting. Administrators can also configure this for legitimate purposes, exposing the account to Kerberoasting.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating User account exposed to Kerberoasting\n\nService Principal Names (SPNs) are names by which Kerberos clients uniquely identify service instances for Kerberos target computers.\n\nBy default, only computer accounts have SPNs, which creates no significant risk, since machine accounts have a default domain policy that rotates their passwords every 30 days, and the password is composed of 120 random characters, making them invulnerable to Kerberoasting.\n\nA user account with an SPN assigned is considered a service account, and is accessible to the entire domain. If any user in the directory requests a ticket-granting service (TGS), the domain controller will encrypt it with the secret key of the account executing the service. An attacker can potentially perform a Kerberoasting attack with this information, as the human-defined password is likely to be less complex.\n\nFor scenarios where SPNs cannot be avoided on user accounts, Microsoft provides the Group Managed Service Accounts (gMSA) feature, which ensures that account passwords are robust and changed regularly and automatically. More information can be found [here](https://docs.microsoft.com/en-us/windows-server/security/group-managed-service-accounts/group-managed-service-accounts-overview).\n\nAttackers can also perform \"Targeted Kerberoasting\", which consists of adding fake SPNs to user accounts that they have write privileges to, making them potentially vulnerable to Kerberoasting.\n\n#### Possible investigation steps\n\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate if the target account is a member of privileged groups (Domain Admins, Enterprise Admins, etc.).\n- Investigate if tickets have been requested for the target account.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n\n### False positive analysis\n\n- The use of user accounts as service accounts is a bad security practice and should not be allowed in the domain. The security team should map and monitor any potential benign true positive (B-TP), especially if the account is privileged. Domain Administrators that define this kind of setting can put the domain at risk as user accounts don't have the same security standards as computer accounts (which have long, complex, random passwords that change frequently), exposing them to credential cracking attacks (Kerberoasting, brute force, etc.).\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services. Prioritize privileged accounts.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"0b2f3da5-b5ec-47d1-908b-6ebb74814289","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1558","name":"Steal or Forge Kerberos Tickets","reference":"https://attack.mitre.org/techniques/T1558/","subtechnique":[{"id":"T1558.003","name":"Kerberoasting","reference":"https://attack.mitre.org/techniques/T1558/003/"}]}]}],"to":"now","references":["https://www.thehacker.recipes/ad/movement/access-controls/targeted-kerberoasting","https://www.qomplx.com/qomplx-knowledge-kerberoasting-attacks-explained/","https://www.thehacker.recipes/ad/movement/kerberos/kerberoast","https://attack.stealthbits.com/cracking-kerberos-tgs-tickets-using-kerberoasting","https://adsecurity.org/?p=280","https://github.com/OTRF/Set-AuditRule"],"version":217,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.AttributeLDAPDisplayName","type":"unknown","ecs":false},{"name":"winlog.event_data.ObjectClass","type":"unknown","ecs":false},{"name":"winlog.event_data.OperationType","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Changes (Success,Failure)\n```\n\nThe above policy does not cover User objects, so set up an AuditRule using https://github.com/OTRF/Set-AuditRule.\nAs this specifies the servicePrincipalName Attribute GUID, it is expected to be low noise.\n\n```\nSet-AuditRule -AdObjectPath 'AD:\\CN=Users,DC=Domain,DC=com' -WellKnownSidType WorldSid -Rights WriteProperty -InheritanceFlags Children -AttributeGUID f3a64788-5306-11d1-a9c5-0000f80367c1 -AuditFlags Success\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-system.security*","logs-windows.forwarded*"],"query":"event.code:5136 and winlog.event_data.OperationType:\"%%14674\" and\n  winlog.event_data.ObjectClass:\"user\" and\n  winlog.event_data.AttributeLDAPDisplayName:\"servicePrincipalName\"\n","actions":[]}
{"id":"dd86fb18-7ecd-41f5-89aa-05ba359e03e0","updated_at":"2025-06-15T07:42:35.551Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.914Z","created_by":"elastic","name":"Disabling Windows Defender Security Settings via PowerShell","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Tactic: Execution","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies use of the Set-MpPreference PowerShell command to disable or weaken certain Windows Defender settings.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Disabling Windows Defender Security Settings via PowerShell\n\nMicrosoft Windows Defender is an antivirus product built into Microsoft Windows, which makes it popular across multiple environments. Disabling it is a common step in threat actor playbooks.\n\nThis rule monitors the execution of commands that can tamper the Windows Defender antivirus features.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Validate the activity is not related to planned patches, updates, network administrator activity, or legitimate software installations.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Examine the command line to determine which action was executed. Based on that, examine exceptions, antivirus state, sample submission, etc.\n\n### False positive analysis\n\n- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity, the configuration is justified (for example, it is being used to deploy other security solutions or troubleshooting), and no other suspicious activity has been observed.\n\n### Related rules\n\n- Windows Defender Disabled via Registry Modification - 2ffa1f1e-b6db-47fa-994b-1512743847eb\n- Microsoft Windows Defender Tampering - fe794edd-487f-4a90-b285-3ee54f2af2d3\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Based on the command line, take actions to restore the appropriate Windows Defender antivirus configurations.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Planned Windows Defender configuration changes."],"from":"now-9m","rule_id":"c8cccb06-faf2-4cd5-886e-2c9636cfcb87","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.001","name":"Disable or Modify Tools","reference":"https://attack.mitre.org/techniques/T1562/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://docs.microsoft.com/en-us/powershell/module/defender/set-mppreference?view=windowsserver2019-ps","https://www.elastic.co/security-labs/operation-bleeding-bear","https://www.elastic.co/security-labs/invisible-miners-unveiling-ghostengine"],"version":316,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  (\n    process.name : (\"powershell.exe\", \"pwsh.exe\", \"powershell_ise.exe\") or\n    ?process.pe.original_file_name in (\"powershell.exe\", \"pwsh.dll\", \"powershell_ise.exe\")\n  ) and\n  process.args : \"Set-MpPreference\" and process.args : (\"-Disable*\", \"Disabled\", \"NeverSend\", \"-Exclusion*\")\n","actions":[]}
{"id":"7ee20801-a03c-40ac-beb0-55a91d3b1326","updated_at":"2025-06-15T07:51:11.113Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.106Z","created_by":"elastic","name":"Potential DNS Tunneling via NsLookup","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Command and Control","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne","Data Source: Sysmon"],"interval":"5m","enabled":true,"revision":2,"description":"This rule identifies a large number (15) of nslookup.exe executions with an explicit query type from the same host. This may indicate command and control activity utilizing the DNS protocol.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Potential DNS Tunneling via NsLookup\n\nAttackers can abuse existing network rules that allow DNS communication with external resources to use the protocol as their command and control and/or exfiltration channel.\n\nDNS queries can be used to infiltrate data such as commands to be run, malicious files, etc., and also for exfiltration, since queries can be used to send data to the attacker-controlled DNS server. This process is commonly known as DNS tunneling.\n\nMore information on how tunneling works and how it can be abused can be found on [Palo Alto Unit42 Research](https://unit42.paloaltonetworks.com/dns-tunneling-how-dns-can-be-abused-by-malicious-actors).\n\n#### Possible investigation steps\n\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Inspect the DNS query and identify the information sent.\n- Extract this communication's indicators of compromise (IoCs) and use traffic logs to search for other potentially compromised hosts.\n\n### False positive analysis\n\n- This mechanism can be used legitimately. If the parent process is trusted and the data sent is not sensitive nor command and control related, this alert can be closed.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Immediately block the identified indicators of compromise (IoCs).\n- Implement any temporary network rules, procedures, and segmentation required to contain the attack.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Update firewall rules to be more restrictive.\n- Reimage the host operating system or restore the compromised files to clean versions.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"3a59fc81-99d3-47ea-8cd6-d48d561fca20","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/","subtechnique":[{"id":"T1071.004","name":"DNS","reference":"https://attack.mitre.org/techniques/T1071/004/"}]},{"id":"T1572","name":"Protocol Tunneling","reference":"https://attack.mitre.org/techniques/T1572/"}]}],"to":"now","references":["https://unit42.paloaltonetworks.com/dns-tunneling-in-the-wild-overview-of-oilrigs-dns-tunneling/"],"version":314,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"sequence by host.id with maxspan=5m\n[process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.name : \"nslookup.exe\" and process.args:(\"-querytype=*\", \"-qt=*\", \"-q=*\", \"-type=*\")] with runs = 10\n","actions":[]}
{"id":"444e26ec-b4b4-409b-af19-77c5a545b3e9","updated_at":"2025-06-15T07:42:37.591Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.652Z","created_by":"elastic","name":"Creation of a Hidden Local User Account","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies the creation of a hidden local user account by appending the dollar sign to the account name. This is sometimes done by attackers to increase access to a system and avoid appearing in the results of accounts listing using the net users command.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Creation of a Hidden Local User Account\n\nAttackers can create accounts ending with a `$` symbol to make the account hidden to user enumeration utilities and bypass detections that identify computer accounts by this pattern to apply filters.\n\nThis rule uses registry events to identify the creation of local hidden accounts.\n\n#### Possible investigation steps\n\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positive (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Delete the hidden account.\n- Review the privileges assigned to the involved users to ensure that the least privilege principle is being followed.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"2edc8076-291e-41e9-81e4-e3fcbc97ae5e","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1136","name":"Create Account","reference":"https://attack.mitre.org/techniques/T1136/","subtechnique":[{"id":"T1136.001","name":"Local Account","reference":"https://attack.mitre.org/techniques/T1136/001/"}]}]}],"to":"now","references":["http://web.archive.org/web/20230329153858/https://blog.menasec.net/2019/02/threat-hunting-6-hiding-in-plain-sights_8.html","https://github.com/CyberMonitor/APT_CyberCriminal_Campagin_Collections/tree/master/2020/2020.12.15.Lazarus_Campaign"],"version":313,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"registry.path","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.registry-*","logs-windows.sysmon_operational-*","endgame-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*"],"query":"registry where host.os.type == \"windows\" and event.type == \"change\" and\n  registry.path : (\n    \"HKLM\\\\SAM\\\\SAM\\\\Domains\\\\Account\\\\Users\\\\Names\\\\*$\\\\\",\n    \"\\\\REGISTRY\\\\MACHINE\\\\SAM\\\\SAM\\\\Domains\\\\Account\\\\Users\\\\Names\\\\*$\\\\\",\n    \"MACHINE\\\\SAM\\\\SAM\\\\Domains\\\\Account\\\\Users\\\\Names\\\\*$\\\\\"\n)\n","actions":[]}
{"id":"50fc0745-33c5-4ada-8cd8-cf4d3628c8ac","updated_at":"2025-06-15T07:42:41.614Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:50.328Z","created_by":"elastic","name":"Potential Privilege Escalation via OverlayFS","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Privilege Escalation","Use Case: Vulnerability","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies an attempt to exploit a local privilege escalation (CVE-2023-2640 and CVE-2023-32629) via a flaw in Ubuntu's modifications to OverlayFS. These flaws allow the creation of specialized executables, which, upon execution, grant the ability to escalate privileges to root on the affected machine.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privilege Escalation via OverlayFS\n\nOverlayFS is a union filesystem used in Linux environments to overlay one filesystem on top of another, allowing for efficient file management and updates. Adversaries exploit vulnerabilities in Ubuntu's OverlayFS modifications to execute crafted executables that escalate privileges to root. The detection rule identifies suspicious sequences involving the 'unshare' command with specific arguments and subsequent UID changes to root, indicating potential exploitation attempts.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of the 'unshare' command with the specific arguments '-r', '-rm', 'm', and '*cap_setuid*' as indicated in the query. This will help verify if the command execution aligns with the known exploitation pattern.\n- Check the process tree and parent process information using the process.parent.entity_id to understand the context in which the 'unshare' command was executed. This can provide insights into whether the command was part of a legitimate operation or a potential attack.\n- Investigate the user account associated with the process execution (user.id != \"0\") to determine if the account has a history of suspicious activity or if it has been compromised.\n- Examine the host.id and host.os.type fields to identify the specific Linux host involved and assess its vulnerability status regarding CVE-2023-2640 and CVE-2023-32629. This can help determine if the host is susceptible to the exploitation attempt.\n- Analyze any subsequent UID changes to root (user.id == \"0\") to confirm if the privilege escalation was successful and identify any unauthorized access or actions taken by the elevated process.\n- Review system logs and other security alerts around the time of the event to identify any additional indicators of compromise or related suspicious activities that might corroborate the exploitation attempt.\n\n### False positive analysis\n\n- Legitimate administrative tasks using the 'unshare' command with similar arguments may trigger the rule. Review the context of the command execution and verify if it aligns with routine system maintenance or configuration changes.\n- Automated scripts or system management tools that utilize 'unshare' for containerization or namespace isolation might cause false positives. Identify these scripts and consider excluding their specific process names or paths from the rule.\n- Development environments where developers frequently test applications with elevated privileges could inadvertently match the rule criteria. Implement user-based exceptions for known developer accounts to reduce noise.\n- Security tools or monitoring solutions that simulate privilege escalation scenarios for testing purposes may be flagged. Whitelist these tools by their process hash or signature to prevent unnecessary alerts.\n- Custom applications that require temporary privilege elevation for legitimate operations should be reviewed. If deemed safe, add these applications to an exception list based on their unique identifiers.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further exploitation or lateral movement by the adversary.\n- Terminate any suspicious processes identified by the detection rule, particularly those involving the 'unshare' command with the specified arguments.\n- Conduct a thorough review of user accounts and privileges on the affected system to ensure no unauthorized changes have been made, especially focusing on accounts with root access.\n- Apply the latest security patches and updates to the affected system, specifically addressing CVE-2023-2640 and CVE-2023-32629, to mitigate the vulnerability in OverlayFS.\n- Monitor for any further attempts to exploit the vulnerability by setting up alerts for similar sequences of commands and UID changes.\n- Escalate the incident to the security operations team for a detailed forensic analysis to understand the scope and impact of the exploitation attempt.\n- Implement additional security measures, such as enhanced logging and monitoring, to detect and respond to privilege escalation attempts more effectively in the future.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"b51dbc92-84e2-4af1-ba47-65183fcd0c57","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"}]}],"to":"now","references":["https://www.wiz.io/blog/ubuntu-overlayfs-vulnerability","https://twitter.com/liadeliyahu/status/1684841527959273472"],"version":9,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.entity_id","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"sequence by process.parent.entity_id, host.id with maxspan=5s\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n    process.name == \"unshare\" and process.args : (\"-r\", \"-rm\", \"m\") and process.args : \"*cap_setuid*\"  and user.id != \"0\"]\n  [process where host.os.type == \"linux\" and event.action == \"uid_change\" and event.type == \"change\" and\n    user.id == \"0\"]\n","actions":[]}
{"id":"b501eeb9-a5d5-42f1-9be4-596aaf2e4e65","updated_at":"2025-06-15T07:42:37.593Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:48.222Z","created_by":"elastic","name":"Potential SharpRDP Behavior","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies potential behavior of SharpRDP, which is a tool that can be used to perform authenticated command execution against a remote target via Remote Desktop Protocol (RDP) for the purposes of lateral movement.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential SharpRDP Behavior\n\nRemote Desktop Protocol (RDP) enables users to connect to and control remote systems, facilitating legitimate administrative tasks. However, adversaries can exploit RDP for lateral movement within a network. SharpRDP, a tool for executing commands on remote systems via RDP, can be misused for unauthorized access. The detection rule identifies suspicious RDP activity by monitoring network connections, registry changes, and process executions, flagging potential misuse indicative of SharpRDP behavior.\n\n### Possible investigation steps\n\n- Review the network logs to confirm the presence of incoming RDP connections on port 3389, specifically looking for connections initiated by IP addresses other than localhost (127.0.0.1 or ::1).\n- Examine the registry changes to identify any new RunMRU string values set to cmd, powershell, taskmgr, or tsclient, which could indicate command execution attempts.\n- Investigate the process execution logs to verify if any processes were started with parent processes like cmd.exe, powershell.exe, or taskmgr.exe, and ensure these are not legitimate administrative actions.\n- Correlate the timestamps of the RDP connection, registry change, and process execution to determine if they align within the 1-minute window specified by the detection rule.\n- Check the source IP address of the RDP connection against known threat intelligence feeds to assess if it is associated with any malicious activity.\n- Analyze user account activity associated with the RDP session to determine if the account was compromised or if the actions were authorized.\n\n### False positive analysis\n\n- Legitimate administrative tasks using RDP may trigger the rule if they involve command execution through cmd, powershell, or taskmgr. To manage this, create exceptions for known administrative IP addresses or user accounts frequently performing these tasks.\n- Automated scripts or software updates that modify the RunMRU registry key with benign commands can be mistaken for SharpRDP behavior. Identify and exclude these processes or scripts from the detection rule.\n- Remote management tools that use RDP and execute commands as part of their normal operation might be flagged. Whitelist these tools by their process names or specific command patterns to prevent false positives.\n- Internal network scanning or monitoring tools that simulate RDP connections for security assessments could be misinterpreted. Exclude these tools by their source IP addresses or network behavior signatures.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further lateral movement and unauthorized access.\n- Terminate any suspicious processes identified in the alert, such as those initiated by cmd.exe, powershell.exe, or taskmgr.exe, to halt any ongoing malicious activity.\n- Review and revert any unauthorized registry changes, particularly those related to the RunMRU registry path, to restore system integrity.\n- Conduct a thorough examination of the affected host for additional indicators of compromise, such as unauthorized user accounts or scheduled tasks, and remove any found.\n- Reset credentials for any accounts that were accessed or potentially compromised during the incident to prevent further unauthorized access.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring and logging for RDP connections and registry changes to detect and respond to similar threats more effectively in the future.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"8c81e506-6e82-4884-9b9a-75d3d252f967","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.001","name":"Remote Desktop Protocol","reference":"https://attack.mitre.org/techniques/T1021/001/"}]}]}],"to":"now","references":["https://posts.specterops.io/revisiting-remote-desktop-lateral-movement-8fb905cb46c3","https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Lateral%20Movement/LM_sysmon_3_12_13_1_SharpRDP.evtx","https://www.elastic.co/security-labs/hunting-for-lateral-movement-using-event-query-language"],"version":111,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.port","type":"long","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true},{"name":"registry.path","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.registry-*","logs-endpoint.events.network-*"],"query":"/* Incoming RDP followed by a new RunMRU string value set to cmd, powershell, taskmgr or tsclient, followed by process execution within 1m */\n\nsequence by host.id with maxspan=1m\n  [network where host.os.type == \"windows\" and event.type == \"start\" and process.name : \"svchost.exe\" and destination.port == 3389 and\n   network.direction : (\"incoming\", \"ingress\") and network.transport == \"tcp\" and\n   source.ip != \"127.0.0.1\" and source.ip != \"::1\"\n  ]\n\n  [registry where host.os.type == \"windows\" and event.type == \"change\" and process.name : \"explorer.exe\" and\n   registry.path : (\"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\RunMRU\\\\*\") and\n   registry.data.strings : (\"cmd.exe*\", \"powershell.exe*\", \"taskmgr*\", \"\\\\\\\\tsclient\\\\*.exe\\\\*\")\n  ]\n\n  [process where host.os.type == \"windows\" and event.type == \"start\" and\n   (process.parent.name : (\"cmd.exe\", \"powershell.exe\", \"taskmgr.exe\") or process.args : (\"\\\\\\\\tsclient\\\\*.exe\")) and\n   not process.name : \"conhost.exe\"\n   ]\n","actions":[]}
{"id":"263f97ff-2fb0-42e6-9ac7-8784f3cb718c","updated_at":"2025-06-15T07:42:41.612Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:51.307Z","created_by":"elastic","name":"Potential Privilege Escalation via Enlightenment","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Privilege Escalation","Use Case: Vulnerability","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies an attempt to exploit a local privilege escalation CVE-2022-37706 via a flaw in Linux window manager package Enlightenment. enlightenment_sys in Enlightenment before 0.25.4 allows local users to gain privileges because it is setuid root, and the system library function mishandles pathnames that begin with a /dev/.. substring.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privilege Escalation via Enlightenment\n\nEnlightenment, a Linux window manager, can be exploited for privilege escalation due to a flaw in its setuid root configuration. Attackers may exploit this by manipulating pathnames, gaining unauthorized root access. The detection rule identifies suspicious execution of 'enlightenment_sys' with specific arguments and subsequent UID changes to root, flagging potential exploitation attempts.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of the process \"enlightenment_sys\" with the specified arguments (\"/bin/mount/\", \"-o\", \"noexec\", \"nosuid\", \"nodev\", \"uid=*\") on a Linux host.\n- Check the process execution timeline to verify if the suspicious \"enlightenment_sys\" execution was followed by a UID change to root (user.id == \"0\") within a 5-second window.\n- Investigate the host.id and process.parent.entity_id to identify the parent process and determine if it was initiated by a legitimate user or service.\n- Examine the system logs around the time of the alert to identify any other unusual activities or related processes that might indicate a broader attack or exploitation attempt.\n- Assess the affected system for any unauthorized changes or signs of compromise, focusing on privilege escalation indicators and potential persistence mechanisms.\n- Review user access logs and permissions to determine if the user associated with the process had legitimate reasons to execute \"enlightenment_sys\" with elevated privileges.\n- Consider isolating the affected system to prevent further exploitation and begin remediation steps, such as applying patches or configuration changes to mitigate the vulnerability.\n\n### False positive analysis\n\n- Legitimate administrative tasks using enlightenment_sys may trigger the rule. Review the context of the execution, such as the user and the specific arguments used, to determine if the activity is authorized.\n- Automated scripts or system maintenance processes that involve enlightenment_sys with similar arguments might be flagged. Identify these scripts and consider excluding them by specifying their process hashes or paths in the detection rule.\n- System updates or package installations that temporarily change UID to root could be misinterpreted as exploitation attempts. Monitor these activities and whitelist known update processes to prevent false alerts.\n- Custom user applications that interact with enlightenment_sys for legitimate purposes may cause false positives. Evaluate these applications and, if deemed safe, add them to an exception list based on their unique identifiers.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious processes related to 'enlightenment_sys' that are running with elevated privileges to stop ongoing exploitation.\n- Conduct a thorough review of system logs to identify any unauthorized changes or access patterns, focusing on UID changes to root.\n- Revoke any unauthorized access or privileges granted during the exploitation, ensuring that only legitimate users have root access.\n- Apply the latest security patches and updates to the Enlightenment package, specifically upgrading to version 0.25.4 or later to mitigate the vulnerability.\n- Implement file integrity monitoring to detect unauthorized changes to critical system files and configurations in the future.\n- Escalate the incident to the security operations team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"bc0fc359-68db-421e-a435-348ced7a7f92","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"}]}],"to":"now","references":["https://ubuntu.com/security/CVE-2022-37706","https://www.exploit-db.com/exploits/51180"],"version":6,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.entity_id","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"sequence by host.id, process.parent.entity_id with maxspan=5s\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n    process.name == \"enlightenment_sys\" and process.args in (\"/bin/mount/\", \"-o\",\"noexec\",\"nosuid\",\"nodev\",\"uid=*\") ]\n  [process where host.os.type == \"linux\" and event.action == \"uid_change\" and event.type == \"change\" and user.id == \"0\"]\n","actions":[]}
{"id":"f7bfabb6-2bd0-4c54-83d6-71068a61f42a","updated_at":"2025-06-15T07:42:37.592Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.613Z","created_by":"elastic","name":"Incoming Execution via WinRM Remote Shell","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies remote execution via Windows Remote Management (WinRM) remote shell on a target host. This could be an indication of lateral movement.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Incoming Execution via WinRM Remote Shell\n\nWindows Remote Management (WinRM) is a protocol that allows for remote management and execution of commands on Windows machines. While beneficial for legitimate administrative tasks, adversaries can exploit WinRM for lateral movement by executing commands remotely. The detection rule identifies suspicious activity by monitoring network traffic on specific ports and processes initiated by WinRM, flagging potential unauthorized remote executions.\n\n### Possible investigation steps\n\n- Review the network traffic logs to confirm the presence of incoming connections on ports 5985 or 5986, which are used by WinRM, and verify if these connections are expected or authorized.\n- Identify the source IP address of the incoming connection and determine if it belongs to a known and trusted network or device. Investigate any unfamiliar or suspicious IP addresses.\n- Examine the process tree for the process initiated by winrshost.exe to identify any unusual or unauthorized processes that were started as a result of the remote execution.\n- Check the user account associated with the WinRM session to ensure it is legitimate and has not been compromised. Look for any signs of unauthorized access or privilege escalation.\n- Correlate the event with other security logs, such as authentication logs, to identify any related suspicious activities or patterns that might indicate lateral movement or a broader attack campaign.\n- Investigate the timeline of events to determine if there are any other related alerts or activities occurring around the same time that could provide additional context or evidence of malicious intent.\n\n### False positive analysis\n\n- Legitimate administrative tasks using WinRM can trigger alerts. Regularly review and whitelist known administrative IP addresses or users to reduce false positives.\n- Automated scripts or management tools that use WinRM for routine tasks may be flagged. Identify these scripts and create exceptions for their specific process names or execution paths.\n- Monitoring tools that check system health via WinRM might be misidentified as threats. Exclude these tools by specifying their source IPs or process names in the detection rule.\n- Scheduled tasks that utilize WinRM for updates or maintenance can cause alerts. Document these tasks and adjust the rule to ignore their specific execution patterns.\n- Internal security scans or compliance checks using WinRM should be accounted for. Coordinate with security teams to recognize these activities and exclude them from triggering alerts.\n\n### Response and remediation\n\n- Isolate the affected host immediately from the network to prevent further lateral movement and potential data exfiltration.\n- Terminate any suspicious processes associated with WinRM, particularly those not originating from legitimate administrative tools or known good sources.\n- Review and revoke any unauthorized access credentials or accounts that may have been used to initiate the WinRM session.\n- Conduct a thorough examination of the affected host for any additional signs of compromise, such as unauthorized software installations or changes to system configurations.\n- Restore the affected system from a known good backup if any malicious activity or unauthorized changes are confirmed.\n- Implement network segmentation to limit the ability of threats to move laterally across the network, focusing on restricting access to critical systems.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":["WinRM is a dual-use protocol that can be used for benign or malicious activity. It's important to baseline your environment to determine the amount of noise to expect from this tool."],"from":"now-9m","rule_id":"1cd01db9-be24-4bef-8e7c-e923f0ff78ab","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.006","name":"Windows Remote Management","reference":"https://attack.mitre.org/techniques/T1021/006/"}]}]}],"to":"now","references":[],"version":212,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"destination.port","type":"long","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"source.ip","type":"ip","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-endpoint.events.network-*","logs-windows.sysmon_operational-*"],"query":"sequence by host.id with maxspan=30s\n   [network where host.os.type == \"windows\" and process.pid == 4 and network.direction : (\"incoming\", \"ingress\") and\n    destination.port in (5985, 5986) and source.ip != \"127.0.0.1\" and source.ip != \"::1\"]\n   [process where host.os.type == \"windows\" and\n    event.type == \"start\" and process.parent.name : \"winrshost.exe\" and not process.executable : \"?:\\\\Windows\\\\System32\\\\conhost.exe\"]\n","actions":[]}
{"id":"148157cf-a426-495c-bd14-58746519fe74","updated_at":"2025-06-15T07:42:43.612Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:40.058Z","created_by":"elastic","name":"Process Created with an Elevated Token","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the creation of a process running as SYSTEM and impersonating a Windows core binary privileges. Adversaries may create a new process with a different token to escalate privileges and bypass access controls.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Process Created with an Elevated Token\n\nIn Windows environments, processes can be created with elevated tokens to perform tasks requiring higher privileges. Adversaries exploit this by impersonating system-level binaries to escalate privileges and bypass security controls. The detection rule identifies such activities by monitoring process creation events, focusing on those initiated by privileged binaries and excluding known benign processes. This helps in identifying unauthorized privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the process creation event details to identify the specific executable and its parent process, focusing on the fields process.executable and process.Ext.effective_parent.executable.\n- Check the user.id field to confirm if the process was created with the SYSTEM user ID (S-1-5-18), indicating elevated privileges.\n- Investigate the parent process executable path to determine if it matches any known privileged Microsoft native binaries, which could be targets for token theft.\n- Examine the process code signature details, especially process.code_signature.trusted and process.code_signature.subject_name, to verify if the executable is signed by a trusted entity or if it matches any excluded signatures.\n- Correlate the process creation event with other security logs and alerts to identify any related suspicious activities or patterns that might indicate privilege escalation attempts.\n- Assess the context and timing of the event to determine if it aligns with legitimate administrative tasks or if it appears anomalous in the environment.\n\n### False positive analysis\n\n- Utility Manager in Windows running in debug mode can trigger false positives. To handle this, exclude processes where both the effective parent and parent executables are Utilman.exe with the /debug argument.\n- Windows print spooler service correlated with Access Intelligent Form may cause false alerts. Exclude processes where the parent executable is spoolsv.exe and the process executable is LaunchCreate.exe under Access Intelligent Form.\n- Windows error reporting executables like WerFault.exe can be mistakenly flagged. Exclude these specific executables from the rule to prevent unnecessary alerts.\n- Windows updates initiated by TiWorker.exe running with elevated privileges can be misidentified. Exclude processes where TiWorker.exe is the parent and the process executable matches known update-related paths.\n- Additional parent executables that typically run with elevated privileges, such as AtBroker.exe and svchost.exe, can lead to false positives. Exclude these parent executables from the rule to reduce noise.\n- Trusted Windows binaries with specific signature names, such as those from TeamViewer or Cisco WebEx, may be incorrectly flagged. Exclude processes with a trusted code signature and matching subject names to avoid false alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.\n- Terminate any suspicious processes identified by the detection rule that are running with elevated privileges, especially those not matching known benign processes.\n- Conduct a thorough review of user accounts and privileges on the affected system to identify and disable any unauthorized accounts or privilege escalations.\n- Restore the affected system from a known good backup to ensure any malicious changes are reverted, and verify the integrity of the system post-restoration.\n- Implement additional monitoring on the affected system and network to detect any further attempts at privilege escalation or token manipulation.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if the threat has spread to other systems.\n- Review and update endpoint protection and detection capabilities to ensure they are configured to detect similar threats in the future, leveraging the MITRE ATT&CK framework for guidance on Access Token Manipulation (T1134).","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"02a23ee7-c8f8-4701-b99d-e9038ce313cb","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/","subtechnique":[{"id":"T1134.002","name":"Create Process with Token","reference":"https://attack.mitre.org/techniques/T1134/002/"}]}]}],"to":"now","references":["https://lengjibo.github.io/token/","https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createprocesswithtokenw"],"version":9,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.Ext.effective_parent.executable","type":"unknown","ecs":false},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*"],"query":"/* This rule is only compatible with Elastic Endpoint 8.4+ */\n\nprocess where host.os.type == \"windows\" and event.action == \"start\" and\n\n /* CreateProcessWithToken and effective parent is a privileged MS native binary used as a target for token theft */\n user.id : \"S-1-5-18\"  and\n\n /* Token Theft target process usually running as service are located in one of the following paths */\n process.Ext.effective_parent.executable :\n                (\"?:\\\\Windows\\\\*.exe\",\n                 \"?:\\\\Program Files\\\\*.exe\",\n                 \"?:\\\\Program Files (x86)\\\\*.exe\",\n                 \"?:\\\\ProgramData\\\\*\") and\n\n/* Ignores Utility Manager in Windows running in debug mode */\n not (process.Ext.effective_parent.executable : \"?:\\\\Windows\\\\System32\\\\Utilman.exe\" and\n      process.parent.executable : \"?:\\\\Windows\\\\System32\\\\Utilman.exe\" and process.parent.args : \"/debug\") and\n\n/* Ignores Windows print spooler service with correlation to Access Intelligent Form */\nnot (process.parent.executable : \"?\\\\Windows\\\\System32\\\\spoolsv.exe\" and\n     process.executable: \"?:\\\\Program Files*\\\\Access\\\\Intelligent Form\\\\*\\\\LaunchCreate.exe\") and\n\n/* Ignores Windows error reporting executables */\n not process.executable : (\"?:\\\\Windows\\\\System32\\\\WerFault.exe\",\n                           \"?:\\\\Windows\\\\SysWOW64\\\\WerFault.exe\",\n                           \"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\",\n                           \"?:\\\\Windows\\\\SysWOW64\\\\WerFaultSecure.exe\",\n                           \"?:\\\\windows\\\\system32\\\\WerMgr.exe\",\n                           \"?:\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\Install\\\\securityhealthsetup.exe\")  and\n\n /* Ignores Windows updates from TiWorker.exe that runs with elevated privileges */\n not (process.parent.executable : \"?:\\\\Windows\\\\WinSxS\\\\*\\\\TiWorker.exe\" and\n      process.executable : (\"?:\\\\Windows\\\\Microsoft.NET\\\\Framework*.exe\",\n                            \"?:\\\\Windows\\\\WinSxS\\\\*.exe\",\n                            \"?:\\\\Windows\\\\System32\\\\inetsrv\\\\iissetup.exe\",\n                            \"?:\\\\Windows\\\\SysWOW64\\\\inetsrv\\\\iissetup.exe\",\n                            \"?:\\\\Windows\\\\System32\\\\inetsrv\\\\aspnetca.exe\",\n                            \"?:\\\\Windows\\\\SysWOW64\\\\inetsrv\\\\aspnetca.exe\",\n                            \"?:\\\\Windows\\\\System32\\\\lodctr.exe\",\n                            \"?:\\\\Windows\\\\SysWOW64\\\\lodctr.exe\",\n                            \"?:\\\\Windows\\\\System32\\\\netcfg.exe\",\n                            \"?:\\\\Windows\\\\Microsoft.NET\\\\Framework*\\\\*\\\\ngen.exe\",\n                            \"?:\\\\Windows\\\\Microsoft.NET\\\\Framework*\\\\*\\\\aspnet_regiis.exe\")) and\n\n\n/* Ignores additional parent executables that run with elevated privileges */\n not process.parent.executable :\n               (\"?:\\\\Windows\\\\System32\\\\AtBroker.exe\",\n                \"?:\\\\Windows\\\\system32\\\\svchost.exe\",\n                \"?:\\\\Program Files (x86)\\\\*.exe\",\n                \"?:\\\\Program Files\\\\*.exe\",\n                \"?:\\\\Windows\\\\System32\\\\msiexec.exe\",\n                \"?:\\\\Windows\\\\System32\\\\DriverStore\\\\*\") and\n\n/* Ignores Windows binaries with a trusted signature and specific signature name */\n not (process.code_signature.trusted == true and\n      process.code_signature.subject_name :\n                (\"philandro Software GmbH\",\n                 \"Freedom Scientific Inc.\",\n                 \"TeamViewer Germany GmbH\",\n                 \"Projector.is, Inc.\",\n                 \"TeamViewer GmbH\",\n                 \"Cisco WebEx LLC\",\n                 \"Dell Inc\"))\n","actions":[]}
{"id":"9260052b-41d3-4402-8938-c7bde99203f4","updated_at":"2025-06-15T08:15:30.304Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.145Z","created_by":"elastic","name":"Disable Windows Event and Security Logs Using Built-in Tools","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies attempts to disable EventLog via the logman Windows utility, PowerShell, or auditpol. This is often done by attackers in an attempt to evade detection on a system.","risk_score":21,"severity":"low","note":"## Triage and analysis\n\n### Investigating Disable Windows Event and Security Logs Using Built-in Tools\n\nWindows event logs are a fundamental data source for security monitoring, forensics, and incident response. Adversaries can tamper, clear, and delete this data to break SIEM detections, cover their tracks, and slow down incident response.\n\nThis rule looks for the usage of different utilities to disable the EventLog service or specific event logs.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n  - Verify if any other anti-forensics behaviors were observed.\n- Investigate the event logs prior to the action for suspicious behaviors that an attacker may be trying to cover up.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Re-enable affected logging components, services, and security monitoring.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic","Ivan Ninichuck","Austin Songer"],"false_positives":[],"from":"now-9m","rule_id":"4de76544-f0e5-486a-8f84-eae0b6063cdc","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1070","name":"Indicator Removal","reference":"https://attack.mitre.org/techniques/T1070/","subtechnique":[{"id":"T1070.001","name":"Clear Windows Event Logs","reference":"https://attack.mitre.org/techniques/T1070/001/"}]},{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.002","name":"Disable Windows Event Logging","reference":"https://attack.mitre.org/techniques/T1562/002/"},{"id":"T1562.006","name":"Indicator Blocking","reference":"https://attack.mitre.org/techniques/T1562/006/"}]}]}],"to":"now","references":["https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/logman","https://medium.com/palantir/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63"],"version":317,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n(\n  (\n    (process.name:\"logman.exe\" or ?process.pe.original_file_name == \"Logman.exe\") and\n    process.args : \"EventLog-*\" and process.args : (\"stop\", \"delete\")\n  ) or\n  (\n    (\n      process.name : (\"pwsh.exe\", \"powershell.exe\", \"powershell_ise.exe\") or\n      ?process.pe.original_file_name in (\"pwsh.exe\", \"powershell.exe\", \"powershell_ise.exe\")\n    ) and\n\t  process.args : \"Set-Service\" and process.args: \"EventLog\" and process.args : \"Disabled\"\n  )  or\n  (\n    (process.name:\"auditpol.exe\" or ?process.pe.original_file_name == \"AUDITPOL.EXE\") and process.args : \"/success:disable\"\n  )\n)\n","actions":[]}
{"id":"4bc887f6-016a-4eb9-97a6-6dc06fcb6014","updated_at":"2025-06-15T07:42:37.578Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:39.973Z","created_by":"elastic","name":"Potential Ransomware Note File Dropped via SMB","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Impact","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies an incoming SMB connection followed by the creation of a file with a name similar to ransomware note files. This may indicate a remote ransomware attack via the SMB protocol.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n## Performance\n\n- This rule may cause medium to high performance impact due to logic scoping all icoming SMB network events.\n\n#### Possible investigation steps\n\n- Investigate the source.ip address connecting to port 445 on this host.\n- Identify the user account that performed the file creation via SMB.\n- If the number of files is too high and source.ip connecting over SMB is unusual isolate the host and block the used credentials.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n\n### False positive analysis\n\n- Remote file creation with similar file naming convention via SMB.\n\n\n### Related rules\n\n- Third-party Backup Files Deleted via Unexpected Process - 11ea6bec-ebde-4d71-a8e9-784948f8e3e9\n- Volume Shadow Copy Deleted or Resized via VssAdmin - b5ea4bfe-a1b2-421f-9d47-22a75a6f2921\n- Volume Shadow Copy Deletion via PowerShell - d99a037b-c8e2-47a5-97b9-170d076827c4\n- Volume Shadow Copy Deletion via WMIC - dc9c1f74-dac3-48e3-b47f-eb79db358f57\n- Suspicious File Renamed via SMB - 78e9b5d5-7c07-40a7-a591-3dbbf464c386\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If any other destructive action was identified on the host, it is recommended to prioritize the investigation and look for ransomware preparation and execution activities.\n- If any backups were affected:\n  - Perform data recovery locally or restore the backups from replicated copies (cloud, other servers, etc.).\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"02bab13d-fb14-4d7c-b6fe-4a28874d37c5","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0040","name":"Impact","reference":"https://attack.mitre.org/tactics/TA0040/"},"technique":[{"id":"T1485","name":"Data Destruction","reference":"https://attack.mitre.org/techniques/T1485/"},{"id":"T1490","name":"Inhibit System Recovery","reference":"https://attack.mitre.org/techniques/T1490/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.002","name":"SMB/Windows Admin Shares","reference":"https://attack.mitre.org/techniques/T1021/002/"}]}]}],"to":"now","references":[],"version":6,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.address","type":"keyword","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.type","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"source.address","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true},{"name":"source.port","type":"long","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.file-*","logs-endpoint.events.network-*"],"query":"sequence by host.id with maxspan=1s\n [network where host.os.type == \"windows\" and\n  event.action == \"connection_accepted\" and destination.port == 445 and source.port >= 49152 and process.pid == 4 and\n  source.ip != \"127.0.0.1\" and source.ip != \"::1\" and\n  network.type == \"ipv4\" and not endswith(source.address, destination.address)]\n [file where host.os.type == \"windows\" and event.action == \"creation\" and\n  process.pid == 4 and user.id : (\"S-1-5-21*\", \"S-1-12-*\") and file.extension : (\"hta\", \"txt\", \"readme\", \"htm*\") and\n  file.path : \"C:\\\\Users\\\\*\" and\n   /* ransom file name keywords */\n    file.name : (\"*read*me*\", \"*lock*\", \"*@*\", \"*RECOVER*\", \"*decrypt*\", \"*restore*file*\", \"*FILES_BACK*\", \"*how*to*\")] with runs=3\n","actions":[]}
{"id":"3715d04f-751d-4ce4-a336-1faf9a561de5","updated_at":"2025-06-15T07:55:07.792Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.420Z","created_by":"elastic","name":"Persistence via Scheduled Job Creation","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Microsoft Defender for Endpoint","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"A job can be used to schedule programs or scripts to be executed at a specified date and time. Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Persistence via Scheduled Job Creation\n\nScheduled jobs in Windows environments allow tasks to be automated by executing scripts or programs at specified times. Adversaries exploit this feature to maintain persistence by scheduling malicious code execution. The detection rule identifies suspicious job creation by monitoring specific file paths and extensions, excluding known legitimate processes, to flag potential abuse while minimizing false positives.\n\n### Possible investigation steps\n\n- Review the file path and extension to confirm the presence of a scheduled job in the \"?:\\Windows\\Tasks\\\" directory with a \".job\" extension, which is indicative of a scheduled task.\n- Examine the process executable path to determine if the job creation is associated with any known legitimate processes, such as CCleaner or ManageEngine, which are excluded in the detection rule.\n- Investigate the origin of the process that created the scheduled job by checking the process execution history and command line arguments to identify any potentially malicious behavior.\n- Analyze the scheduled job's content and associated scripts or programs to identify any suspicious or unauthorized code that may indicate malicious intent.\n- Correlate the event with other security logs and alerts from data sources like Elastic Endgame, Sysmon, or Microsoft Defender for Endpoint to gather additional context and identify any related malicious activity.\n- Assess the risk and impact of the scheduled job by determining if it aligns with known adversary tactics, techniques, and procedures (TTPs) related to persistence, as outlined in the MITRE ATT&CK framework.\n\n### False positive analysis\n\n- Scheduled jobs created by CCleaner for crash reporting can trigger false positives. Exclude the path \"?:\\Windows\\Tasks\\CCleanerCrashReporting.job\" when the process executable is \"?:\\Program Files\\CCleaner\\CCleaner64.exe\".\n- ManageEngine UEMS Agent and DesktopCentral Agent may create scheduled jobs for updates, leading to false positives. Exclude the path \"?:\\Windows\\Tasks\\DCAgentUpdater.job\" when the process executable is \"?:\\Program Files (x86)\\ManageEngine\\UEMS_Agent\\bin\\dcagentregister.exe\" or \"?:\\Program Files (x86)\\DesktopCentral_Agent\\bin\\dcagentregister.exe\".\n- Regularly review and update exclusion lists to ensure they reflect the current environment and legitimate software behavior.\n- Consider implementing a whitelist of known legitimate processes and paths to further reduce false positives while maintaining effective threat detection.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further execution of potentially malicious scheduled jobs and limit lateral movement.\n- Terminate any suspicious processes associated with the identified scheduled job, using tools like Task Manager or PowerShell, to halt any ongoing malicious activity.\n- Delete the suspicious scheduled job file from the system to prevent future execution. This can be done using the Task Scheduler or command-line tools.\n- Conduct a thorough scan of the affected system using updated antivirus or endpoint detection and response (EDR) solutions to identify and remove any additional malicious files or remnants.\n- Review and audit other scheduled tasks on the system to ensure no additional unauthorized or suspicious jobs are present.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if other systems are affected.\n- Implement enhanced monitoring and alerting for scheduled job creation activities across the network to detect similar threats in the future, leveraging the specific query fields used in the detection rule.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate scheduled jobs may be created during installation of new software."],"from":"now-9m","rule_id":"1327384f-00f3-44d5-9a8c-2373ba071e92","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1053","name":"Scheduled Task/Job","reference":"https://attack.mitre.org/techniques/T1053/","subtechnique":[{"id":"T1053.005","name":"Scheduled Task","reference":"https://attack.mitre.org/techniques/T1053/005/"}]}]}],"to":"now","references":[],"version":414,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"m365_defender","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.file-*","logs-windows.sysmon_operational-*","endgame-*","logs-sentinel_one_cloud_funnel.*","logs-m365_defender.event-*"],"query":"file where host.os.type == \"windows\" and event.type != \"deletion\" and\n  file.path : \"?:\\\\Windows\\\\Tasks\\\\*\" and file.extension : \"job\" and\n  not (\n    (\n      process.executable : \"?:\\\\Program Files\\\\CCleaner\\\\CCleaner64.exe\" and\n      file.path : \"?:\\\\Windows\\\\Tasks\\\\CCleanerCrashReporting.job\"\n    ) or\n    (\n      process.executable : (\n        \"?:\\\\Program Files (x86)\\\\ManageEngine\\\\UEMS_Agent\\\\bin\\\\dcagentregister.exe\",\n        \"?:\\\\Program Files (x86)\\\\DesktopCentral_Agent\\\\bin\\\\dcagentregister.exe\"\n      ) and\n      file.path : \"?:\\\\Windows\\\\Tasks\\\\DCAgentUpdater.job\"\n    )\n  )\n","actions":[]}
{"id":"01a6a1af-7691-40f4-ac87-0a79b6906e41","updated_at":"2025-06-15T07:42:35.556Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:52.390Z","created_by":"elastic","name":"Interactive Terminal Spawned via Python","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies when a terminal (tty) is spawned via Python. Attackers may upgrade a simple reverse shell to a fully interactive tty after obtaining initial access to a host.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Interactive Terminal Spawned via Python\n\nPython's ability to spawn interactive terminals is a powerful feature often used for legitimate administrative tasks. However, adversaries can exploit this to escalate a basic reverse shell into a fully interactive terminal, enhancing their control over a compromised system. The detection rule identifies such abuse by monitoring processes where Python spawns a shell, focusing on specific patterns in process arguments and parent-child process relationships, indicating potential malicious activity.\n\n### Possible investigation steps\n\n- Review the process tree to understand the parent-child relationship, focusing on the parent process named \"python*\" and the child process that is a shell (e.g., bash, sh, zsh).\n- Examine the command-line arguments of the parent Python process to identify the use of \"pty.spawn\" and the presence of the \"-c\" flag, which may indicate an attempt to spawn an interactive terminal.\n- Check the process start event details, including the timestamp and user context, to determine if the activity aligns with expected administrative tasks or if it appears suspicious.\n- Investigate the source IP address and user account associated with the process to assess if they are known and authorized entities within the network.\n- Look for any related alerts or logs that might indicate prior suspicious activity, such as initial access vectors or other execution attempts, to build a timeline of events.\n- Correlate this activity with any recent changes or incidents reported on the host to determine if this is part of a larger attack or an isolated event.\n\n### False positive analysis\n\n- Administrative scripts or automation tools that use Python to manage system processes may trigger this rule. To handle this, identify and whitelist specific scripts or tools that are known to perform legitimate tasks.\n- Developers or system administrators using Python for interactive debugging or system management might inadvertently match the rule's criteria. Consider excluding processes initiated by trusted user accounts or within specific directories associated with development or administration.\n- Scheduled tasks or cron jobs that utilize Python to execute shell commands could be mistaken for malicious activity. Review and exclude these tasks by specifying their unique process arguments or parent-child process relationships.\n- Security tools or monitoring solutions that leverage Python for executing shell commands as part of their normal operation may also trigger this rule. Identify these tools and create exceptions based on their process signatures or execution context.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious Python processes identified in the alert, especially those spawning shell processes, to disrupt the attacker's control.\n- Conduct a thorough review of the affected system for any additional signs of compromise, such as unauthorized user accounts, scheduled tasks, or modified system files.\n- Reset credentials for any accounts accessed from the compromised host to prevent further unauthorized access.\n- Apply security patches and updates to the affected system to address any vulnerabilities that may have been exploited.\n- Enhance monitoring and logging on the affected host and network to detect any similar activities in the future, focusing on process creation and network connections.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"d76b02ef-fc95-4001-9297-01cb7412232f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.006","name":"Python","reference":"https://attack.mitre.org/techniques/T1059/006/"}]}]}],"to":"now","references":[],"version":214,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.args_count","type":"long","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.args_count","type":"long","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["endgame-*","logs-endpoint.events.process*","logs-sentinel_one_cloud_funnel.*"],"query":"process where host.os.type == \"linux\" and event.type == \"start\" and event.action in (\"exec\", \"exec_event\", \"start\") and\n(\n  (process.parent.name : \"python*\" and process.name in (\"bash\", \"dash\", \"ash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\",\n   \"fish\") and process.parent.args_count >= 3 and process.parent.args : \"*pty.spawn*\" and process.parent.args : \"-c\") or\n  (process.parent.name : \"python*\" and process.name in (\"bash\", \"dash\", \"ash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\",\n   \"fish\") and process.args : \"*sh\" and process.args_count == 1 and process.parent.args_count == 1)\n)\n","actions":[]}
{"id":"b0d04977-2212-4171-8e4c-e5c9d1faf747","updated_at":"2025-06-15T07:42:37.576Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.785Z","created_by":"elastic","name":"Potential Credential Access via Trusted Developer Utility","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: Sysmon"],"interval":"5m","enabled":true,"revision":2,"description":"An instance of MSBuild, the Microsoft Build Engine, loaded DLLs (dynamically linked libraries) responsible for Windows credential management. This technique is sometimes used for credential dumping.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Credential Access via Trusted Developer Utility\n\nThe Microsoft Build Engine is a platform for building applications. This engine, also known as MSBuild, provides an XML schema for a project file that controls how the build platform processes and builds software.\n\nAdversaries can abuse MSBuild to proxy the execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file. MSBuild will compile and execute the inline task. `MSBuild.exe` is a signed Microsoft binary, and the execution of code using it can bypass application control defenses that are configured to allow `MSBuild.exe` execution.\n\nThis rule looks for the MSBuild process loading `vaultcli.dll` or `SAMLib.DLL`, which indicates the execution of credential access activities.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate abnormal behaviors observed by the subject process, such as network connections, registry or file modifications, and any spawned child processes.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Examine the command line to identify the `.csproj` file location.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the file using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":["The Build Engine is commonly used by Windows developers but use by non-engineers is unusual."],"from":"now-9m","rule_id":"9d110cb3-5f4b-4c9a-b9f5-53f0a1707ae5","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.002","name":"Security Account Manager","reference":"https://attack.mitre.org/techniques/T1003/002/"}]},{"id":"T1555","name":"Credentials from Password Stores","reference":"https://attack.mitre.org/techniques/T1555/","subtechnique":[{"id":"T1555.004","name":"Windows Credential Manager","reference":"https://attack.mitre.org/techniques/T1555/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1127","name":"Trusted Developer Utilities Proxy Execution","reference":"https://attack.mitre.org/techniques/T1127/","subtechnique":[{"id":"T1127.001","name":"MSBuild","reference":"https://attack.mitre.org/techniques/T1127/001/"}]}]}],"to":"now","references":[],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"dll.name","type":"keyword","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-endpoint.events.library-*","logs-windows.sysmon_operational-*"],"query":"sequence by process.entity_id\n [process where host.os.type == \"windows\" and event.type == \"start\" and (process.name : \"MSBuild.exe\" or process.pe.original_file_name == \"MSBuild.exe\")]\n [any where host.os.type == \"windows\" and (event.category == \"library\" or (event.category == \"process\" and event.action : \"Image loaded*\")) and\n  (?dll.name : (\"vaultcli.dll\", \"SAMLib.DLL\") or file.name : (\"vaultcli.dll\", \"SAMLib.DLL\"))]\n","actions":[]}
{"id":"b1f41c7c-cc12-4079-afc2-ff02e4507891","updated_at":"2025-06-15T07:42:43.619Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:38.988Z","created_by":"elastic","name":"Suspicious Antimalware Scan Interface DLL","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Endgame","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Microsoft Defender for Endpoint"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the creation of the Antimalware Scan Interface (AMSI) DLL in an unusual location. This may indicate an attempt to bypass AMSI by loading a rogue AMSI module instead of the legit one.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Suspicious Antimalware Scan Interface DLL\n\nThe Windows Antimalware Scan Interface (AMSI) is a versatile interface standard that allows your applications and services to integrate with any antimalware product on a machine. AMSI integrates with multiple Windows components, ranging from User Account Control (UAC) to VBA macros and PowerShell.\n\nAttackers might copy a rogue AMSI DLL to an unusual location to prevent the process from loading the legitimate module, achieving a bypass to execute malicious code.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Identify the process that created the DLL and which account was used.\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate the execution of scripts and macros after the registry modification.\n- Investigate other processes launched from the directory that the DLL was created.\n- Inspect the host for suspicious or abnormal behavior in the alert timeframe:\n  - Observe and collect information about the following activities in the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n\n### False positive analysis\n\n- This modification should not happen legitimately. Any potential benign true positive (B-TP) should be mapped and monitored by the security team as these modifications expose the host to malware infections.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"fa488440-04cc-41d7-9279-539387bf2a17","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.001","name":"Disable or Modify Tools","reference":"https://attack.mitre.org/techniques/T1562/001/"}]},{"id":"T1574","name":"Hijack Execution Flow","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.001","name":"DLL","reference":"https://attack.mitre.org/techniques/T1574/001/"}]}]}],"to":"now","references":["https://github.com/S3cur3Th1sSh1t/Amsi-Bypass-Powershell"],"version":318,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"},{"package":"endpoint","version":"^8.2.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"m365_defender","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.file-*","logs-windows.sysmon_operational-*","endgame-*","logs-sentinel_one_cloud_funnel.*","logs-m365_defender.event-*"],"query":"file where host.os.type == \"windows\" and event.type != \"deletion\" and file.path != null and\n  file.name : (\"amsi.dll\", \"amsi\") and\n  not file.path : (\n    \"?:\\\\$SysReset\\\\CloudImage\\\\Package_for_RollupFix*\",\n    \"?:\\\\Windows\\\\system32\\\\amsi.dll\",\n    \"?:\\\\Windows\\\\Syswow64\\\\amsi.dll\",\n    \"?:\\\\$WINDOWS.~BT\\\\DUImageSandbox\\\\*\",\n    \"?:\\\\$WINDOWS.~BT\\\\NewOS\\\\Windows\\\\WinSXS\\\\*\",\n    \"?:\\\\$WINDOWS.~BT\\\\NewOS\\\\Windows\\\\servicing\\\\LCU\\\\*\",\n    \"?:\\\\$WINDOWS.~BT\\\\Work\\\\*\\\\*\",\n    \"?:\\\\$WINDOWS.~BT\\\\Store\\\\Offline\\\\File\\\\C$\\\\Windows\\\\SoftwareDistribution\\\\Download.bak\\\\*\",\n    \"?:\\\\Windows\\\\CbsTemp\\\\*\\\\f\\\\amsi.dll\",\n    \"?:\\\\Windows\\\\SoftwareDistribution\\\\Download\\\\*\",\n    \"?:\\\\Windows\\\\WinSxS\\\\amd64_microsoft-antimalware-scan-interface_*\\\\amsi.dll\"\n  ) and\n  not\n  (\n    process.executable : \"C:\\\\Windows\\\\System32\\\\wbengine.exe\" and\n    file.path : (\n      \"\\\\Device\\\\HarddiskVolume??\\\\Windows\\\\system32\\\\amsi.dll\",\n      \"\\\\Device\\\\HarddiskVolume??\\\\Windows\\\\syswow64\\\\amsi.dll\",\n      \"\\\\Device\\\\HarddiskVolume??\\\\Windows\\\\WinSxS\\\\*\\\\amsi.dll\",\n      \"\\\\\\\\?\\\\Volume{*}\\\\Windows\\\\WinSxS\\\\*\\\\amsi.dll\",\n      \"\\\\\\\\?\\\\Volume{*}\\\\Windows\\\\system32\\\\amsi.dll\",\n      \"\\\\\\\\?\\\\Volume{*}\\\\Windows\\\\syswow64\\\\amsi.dll\"\n    )\n  )\n","actions":[]}
{"id":"09a53f63-e4d2-4639-87a8-eceb7529b387","updated_at":"2025-06-15T07:42:35.569Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.349Z","created_by":"elastic","name":"Potential Escalation via Vulnerable MSI Repair","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Microsoft Defender for Endpoint","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies when a browser process navigates to the Microsoft Help page followed by spawning an elevated process. This may indicate a successful exploitation for privilege escalation abusing a vulnerable Windows Installer repair setup.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Escalation via Vulnerable MSI Repair\n\nWindows Installer (MSI) is a service used for software installation and maintenance. Adversaries exploit vulnerabilities in MSI repair functions to gain elevated privileges. This detection rule identifies suspicious activity by monitoring browser processes accessing Microsoft Help pages, followed by elevated process creation, indicating potential privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific browser process that accessed the Microsoft Help page, noting the process name and command line details.\n- Check the user domain associated with the process to confirm if it matches \"NT AUTHORITY\", \"AUTORITE NT\", or \"AUTORIDADE NT\", which may indicate a system-level account was used.\n- Investigate the parent process of the browser to determine if it was expected or if it shows signs of compromise or unusual behavior.\n- Examine the timeline of events to see if an elevated process was spawned shortly after the browser accessed the Microsoft Help page, indicating potential exploitation.\n- Correlate the event with other security logs or alerts from data sources like Elastic Endgame, Sysmon, or Microsoft Defender for Endpoint to gather additional context or evidence of malicious activity.\n- Assess the risk and impact of the elevated process by identifying its actions and any changes made to the system, such as modifications to critical files or registry keys.\n\n### False positive analysis\n\n- Legitimate software updates or installations may trigger the rule if they involve browser-based help documentation. To manage this, identify and whitelist known software update processes that frequently access Microsoft Help pages.\n- Automated scripts or administrative tools that use browsers to access Microsoft Help for legitimate purposes can cause false positives. Exclude these scripts or tools by specifying their unique command-line patterns or process names.\n- User-initiated troubleshooting or help-seeking behavior that involves accessing Microsoft Help pages might be misinterpreted as suspicious. Educate users on safe browsing practices and consider excluding specific user accounts or domains that are known to frequently engage in such activities.\n- Security tools or monitoring solutions that simulate browser activity for testing purposes may inadvertently trigger the rule. Identify these tools and create exceptions based on their process names or command-line arguments to prevent unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further exploitation or lateral movement by the adversary.\n- Terminate any suspicious elevated processes that were spawned following the browser's navigation to the Microsoft Help page to halt potential privilege escalation activities.\n- Conduct a thorough review of the affected system's event logs and process creation history to identify any unauthorized changes or additional indicators of compromise.\n- Apply the latest security patches and updates to the Windows Installer service and any other vulnerable components to mitigate the exploited vulnerability.\n- Restore the affected system from a known good backup if unauthorized changes or persistent threats are detected that cannot be easily remediated.\n- Monitor the network for any signs of similar exploitation attempts or related suspicious activities, using enhanced detection rules and threat intelligence feeds.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to ensure comprehensive remediation and recovery efforts.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"043d80a3-c49e-43ef-9c72-1088f0c7b278","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.007","name":"Msiexec","reference":"https://attack.mitre.org/techniques/T1218/007/"}]}]}],"to":"now","references":["https://sec-consult.com/blog/detail/msi-installer-repair-to-system-a-detailed-journey/","https://msrc.microsoft.com/update-guide/en-US/advisory/CVE-2024-38014"],"version":205,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.parent.command_line","type":"wildcard","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"user.domain","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","endgame-*","logs-endpoint.events.process-*","logs-windows.sysmon_operational-*","logs-sentinel_one_cloud_funnel.*","logs-m365_defender.event-*"],"query":"process where event.type == \"start\" and host.os.type == \"windows\" and\n user.domain : (\"NT AUTHORITY\", \"AUTORITE NT\", \"AUTORIDADE NT\") and\n process.parent.name : (\"chrome.exe\", \"msedge.exe\", \"brave.exe\", \"whale.exe\", \"browser.exe\", \"dragon.exe\", \"vivaldi.exe\",\n                        \"opera.exe\", \"iexplore\", \"firefox.exe\", \"waterfox.exe\", \"iexplore.exe\", \"tor.exe\", \"safari.exe\") and\n process.parent.command_line : \"*go.microsoft.com*\"\n","actions":[]}
{"id":"941ce5c0-26ef-4c54-af37-66c80e117893","updated_at":"2025-06-15T07:42:41.618Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.101Z","created_by":"elastic","name":"Suspicious MS Office Child Process","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Initial Access","Tactic: Defense Evasion","Tactic: Execution","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious child processes of frequently targeted Microsoft Office applications (Word, PowerPoint, Excel). These child processes are often launched during exploitation of Office applications or from documents with malicious macros.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Suspicious MS Office Child Process\n\nMicrosoft Office (MS Office) is a suite of applications designed to help with productivity and completing common tasks on a computer. You can create and edit documents containing text and images, work with data in spreadsheets and databases, and create presentations and posters. As it is some of the most-used software across companies, MS Office is frequently targeted for initial access. It also has a wide variety of capabilities that attackers can take advantage of.\n\nThis rule looks for suspicious processes spawned by MS Office programs. This is generally the result of the execution of malicious documents.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Retrieve MS Office documents received and opened by the user that could cause this behavior. Common locations include, but are not limited to, the Downloads and Document folders and the folder configured at the email client.\n- Determine if the collected files are malicious:\n  - Use a private sandboxed malware analysis system to perform analysis.\n    - Observe and collect information about the following activities:\n      - Attempts to contact external domains and addresses.\n      - File and registry access, modification, and creation activities.\n      - Service creation and launch activities.\n      - Scheduled task creation.\n  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.\n    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n  - If the malicious file was delivered via phishing:\n    - Block the email sender from sending future emails.\n    - Block the malicious web pages.\n    - Remove emails from the sender from mailboxes.\n    - Consider improvements to the security awareness program.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"a624863f-a70d-417f-a7d2-7a404638d47f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1566","name":"Phishing","reference":"https://attack.mitre.org/techniques/T1566/","subtechnique":[{"id":"T1566.001","name":"Spearphishing Attachment","reference":"https://attack.mitre.org/techniques/T1566/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"},{"id":"T1059.003","name":"Windows Command Shell","reference":"https://attack.mitre.org/techniques/T1059/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/"}]}],"to":"now","references":["https://www.elastic.co/blog/vulnerability-summary-follina"],"version":317,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.parent.name : (\n      \"eqnedt32.exe\", \"excel.exe\", \"fltldr.exe\", \"msaccess.exe\",\n      \"mspub.exe\", \"powerpnt.exe\", \"winword.exe\", \"outlook.exe\"\n  ) and\n  process.name : (\n      \"Microsoft.Workflow.Compiler.exe\", \"arp.exe\", \"atbroker.exe\", \"bginfo.exe\", \"bitsadmin.exe\", \"cdb.exe\",\n      \"certutil.exe\", \"cmd.exe\", \"cmstp.exe\", \"control.exe\", \"cscript.exe\", \"csi.exe\", \"dnx.exe\", \"dsget.exe\",\n      \"dsquery.exe\", \"forfiles.exe\", \"fsi.exe\", \"ftp.exe\", \"gpresult.exe\", \"hostname.exe\", \"ieexec.exe\", \"iexpress.exe\",\n      \"installutil.exe\", \"ipconfig.exe\", \"mshta.exe\", \"msxsl.exe\", \"nbtstat.exe\", \"net.exe\", \"net1.exe\", \"netsh.exe\",\n      \"netstat.exe\", \"nltest.exe\", \"odbcconf.exe\", \"ping.exe\", \"powershell.exe\", \"pwsh.exe\", \"qprocess.exe\",\n      \"quser.exe\", \"qwinsta.exe\", \"rcsi.exe\", \"reg.exe\", \"regasm.exe\", \"regsvcs.exe\", \"regsvr32.exe\", \"sc.exe\",\n      \"schtasks.exe\", \"systeminfo.exe\", \"tasklist.exe\", \"tracert.exe\", \"whoami.exe\", \"wmic.exe\", \"wscript.exe\",\n      \"xwizard.exe\", \"explorer.exe\", \"rundll32.exe\", \"hh.exe\", \"msdt.exe\"\n  ) and\n  not (\n    process.parent.name : \"outlook.exe\" and\n    process.name : \"rundll32.exe\" and\n    process.args : \"shell32.dll,Control_RunDLL\" and\n    process.args : \"srchadmin.dll\"\n  )\n","actions":[]}
{"id":"4ac51448-af39-4b21-a9ce-887fc8a82420","updated_at":"2025-06-15T07:56:26.844Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:46.291Z","created_by":"elastic","name":"Network Connection via Recently Compiled Executable","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule monitors a sequence involving a program compilation event followed by its execution and a subsequent network connection event. This behavior can indicate the set up of a reverse tcp connection to a command-and-control server. Attackers may spawn reverse shells to establish persistence onto a target system.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Network Connection via Recently Compiled Executable\n\nIn Linux environments, compiling and executing programs is routine for development. However, adversaries exploit this by compiling malicious code to establish reverse shells, enabling remote control. The detection rule identifies this threat by monitoring sequences of compilation, execution, and network activity, flagging unusual connections that deviate from typical patterns, thus indicating potential compromise.\n\n### Possible investigation steps\n\n- Review the process execution details to identify the compiler used (e.g., gcc, g++, cc) and examine the arguments passed during the compilation to understand the nature of the compiled code.\n- Investigate the file creation event associated with the linker (ld) to determine the output executable file and its location on the system.\n- Analyze the subsequent process execution to identify the newly compiled executable and verify its legitimacy by checking its hash against known malware databases.\n- Examine the network connection attempt details, focusing on the destination IP address, to determine if it is associated with known malicious activity or command-and-control servers.\n- Check the process name involved in the network connection attempt to ensure it is not a commonly used legitimate process, as specified in the query exclusions (e.g., simpleX, conftest, ssh, python, ispnull, pvtui).\n- Correlate the timing of the compilation, execution, and network connection events to assess if they align with typical user behavior or indicate suspicious activity.\n\n### False positive analysis\n\n- Development activities involving frequent compilation and execution of new code can trigger false positives. To manage this, exclude specific user accounts or directories commonly used for legitimate development work.\n- Automated build systems or continuous integration pipelines may compile and execute code regularly. Identify and exclude these processes or IP addresses from monitoring to prevent false alerts.\n- Legitimate software updates or installations that involve compiling source code can be mistaken for malicious activity. Exclude known update processes or package managers from the rule.\n- Network connections to internal or trusted IP addresses that are not part of the typical exclusion list might be flagged. Update the exclusion list to include these trusted IP ranges.\n- Certain legitimate applications that compile and execute code as part of their normal operation, such as IDEs or scripting environments, should be identified and excluded from the rule to reduce noise.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified in the alert, especially those related to the recently compiled executable and any associated network connections.\n- Conduct a forensic analysis of the affected system to identify any additional indicators of compromise, such as unauthorized user accounts or scheduled tasks.\n- Remove any malicious executables or scripts identified during the investigation from the system to prevent re-execution.\n- Reset credentials for any accounts that may have been compromised, focusing on those with elevated privileges.\n- Update and patch the affected system to close any vulnerabilities that may have been exploited by the attacker.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"64cfca9e-0f6f-4048-8251-9ec56a055e9e","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":[],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.file*","logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id with maxspan=1m\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n   process.name in (\"gcc\", \"g++\", \"cc\")] by process.args\n  [file where host.os.type == \"linux\" and event.action == \"creation\" and process.name == \"ld\"] by file.name\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\"] by process.name\n  [network where host.os.type == \"linux\" and event.action == \"connection_attempted\" and destination.ip != null and not (\n     cidrmatch(destination.ip, \"127.0.0.0/8\", \"169.254.0.0/16\", \"224.0.0.0/4\", \"::1\") or\n     process.name in (\"simpleX\", \"conftest\", \"ssh\", \"python\", \"ispnull\", \"pvtui\", \"npreal2d\", \"ruby\", \"source\", \"ssh\")\n   )] by process.name\n","actions":[]}
{"id":"a82fc769-3a03-404a-9887-a83ee509bfac","updated_at":"2025-06-15T08:09:45.142Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:49.267Z","created_by":"elastic","name":"Potential Enumeration via Active Directory Web Service","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Discovery","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies processes loading Active Directory related modules followed by a network connection to the ADWS dedicated TCP port. Adversaries may abuse the ADWS Windows service that allows Active Directory to be queried via this web service.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Enumeration via Active Directory Web Service\n\nActive Directory Web Service (ADWS) facilitates querying Active Directory (AD) over a network, providing a web-based interface for directory services. Adversaries may exploit ADWS to enumerate network resources and user accounts, gaining insights into the environment. The detection rule identifies suspicious activity by monitoring processes that load AD-related modules and establish network connections to the ADWS port, indicating potential unauthorized enumeration attempts.\n\n### Possible investigation steps\n\n- Review the process entity ID to identify the specific process that triggered the alert and gather details such as the process name, executable path, and user context.\n- Examine the user ID associated with the process to determine if it belongs to a legitimate user or service account, and verify if the user has a history of accessing Active Directory resources.\n- Investigate the network connection details, focusing on the destination IP address and port 9389, to identify the target server and assess if it is a legitimate Active Directory Web Service endpoint.\n- Check for any recent changes or unusual activity on the host machine, such as new software installations or configuration changes, that could explain the loading of Active Directory-related modules.\n- Correlate the alert with other security events or logs from the same timeframe to identify any patterns or additional suspicious activities that might indicate a broader attack or reconnaissance effort.\n\n### False positive analysis\n\n- Legitimate administrative tools or scripts may load Active Directory-related modules and connect to the ADWS port. To handle this, create exceptions for known administrative processes that regularly perform these actions.\n- Scheduled tasks or automated scripts running under service accounts might trigger the rule. Identify these tasks and exclude their associated user IDs or process paths from the detection rule.\n- Security or monitoring software that queries Active Directory for legitimate purposes can cause false positives. Review and whitelist these applications by adding their executable paths to the exclusion list.\n- Development or testing environments where developers frequently interact with Active Directory services may generate alerts. Consider excluding specific user IDs or process paths associated with these environments to reduce noise.\n- Ensure that any exceptions or exclusions are regularly reviewed and updated to reflect changes in the environment or administrative practices.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified in the alert that are loading Active Directory-related modules and making network connections to the ADWS port.\n- Conduct a thorough review of the affected system's user accounts and permissions to identify any unauthorized changes or access.\n- Reset credentials for any accounts that were potentially compromised or used in the suspicious activity.\n- Implement network segmentation to limit access to the ADWS port (9389) to only trusted systems and users.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Update and enhance monitoring rules to detect similar enumeration attempts in the future, focusing on unusual process behavior and network connections to critical services.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"9c951837-7d13-4b0c-be7a-f346623c8795","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0007","name":"Discovery","reference":"https://attack.mitre.org/tactics/TA0007/"},"technique":[{"id":"T1018","name":"Remote System Discovery","reference":"https://attack.mitre.org/techniques/T1018/"}]}],"to":"now","references":["https://github.com/FalconForceTeam/SOAPHound"],"version":5,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"dll.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"source.port","type":"long","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.library-*","logs-endpoint.events.network-*"],"query":"sequence by process.entity_id with maxspan=3m\n [library where host.os.type == \"windows\" and\n  dll.name : (\"System.DirectoryServices*.dll\", \"System.IdentityModel*.dll\") and\n  not user.id in (\"S-1-5-18\", \"S-1-5-19\", \"S-1-5-20\") and\n  not process.executable :\n                (\"?:\\\\windows\\\\system32\\\\dsac.exe\",\n                 \"?:\\\\program files\\\\powershell\\\\?\\\\pwsh.exe\",\n                 \"?:\\\\windows\\\\system32\\\\windowspowershell\\\\*.exe\",\n                 \"?:\\\\windows\\\\syswow64\\\\windowspowershell\\\\*.exe\",\n                 \"?:\\\\program files\\\\microsoft monitoring agent\\\\*.exe\",\n                 \"?:\\\\windows\\\\adws\\\\microsoft.activedirectory.webservices.exe\")]\n [network where host.os.type == \"windows\" and destination.port == 9389 and source.port >= 49152 and\n  network.direction == \"egress\" and network.transport == \"tcp\" and not cidrmatch(destination.ip, \"127.0.0.0/8\", \"::1/128\")]\n","actions":[]}
{"id":"fb72b80f-7efa-4eb0-a163-93b12fae09bc","updated_at":"2025-06-15T08:11:48.207Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:41.030Z","created_by":"elastic","name":"Persistence via a Windows Installer","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Defense Evasion","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies when the Windows installer process msiexec.exe creates a new persistence entry via scheduled tasks or startup.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Persistence via a Windows Installer\n\nWindows Installer, through msiexec.exe, facilitates software installation and configuration. Adversaries exploit this by creating persistence mechanisms, such as scheduled tasks or startup entries, to maintain access. The detection rule identifies suspicious activity by monitoring msiexec.exe for file creation in startup directories or registry modifications linked to auto-run keys, signaling potential persistence tactics.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific file path or registry path involved in the suspicious activity, focusing on the paths specified in the query such as \"?:\\\\Windows\\\\System32\\\\Tasks\\\\*\" or \"H*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\".\n- Check the creation or modification timestamps of the files or registry entries to determine when the suspicious activity occurred and correlate it with other events or logs around the same time.\n- Investigate the parent process of msiexec.exe to understand how it was executed and whether it was initiated by a legitimate user action or another suspicious process.\n- Examine the contents of the created or modified files or registry entries to identify any scripts, executables, or commands that may indicate malicious intent.\n- Look for any associated network activity or connections initiated by msiexec.exe or related processes to identify potential command and control communication.\n- Cross-reference the involved file or registry paths with known indicators of compromise or threat intelligence sources to assess the risk level and potential threat actor involvement.\n- If applicable, isolate the affected system and perform a deeper forensic analysis to uncover any additional persistence mechanisms or lateral movement within the network.\n\n### False positive analysis\n\n- Legitimate software installations or updates may trigger the rule when msiexec.exe creates scheduled tasks or startup entries. Users can create exceptions for known software vendors or specific installation paths to reduce noise.\n- System administrators might use msiexec.exe for deploying software across the network, which can appear as suspicious activity. To handle this, exclude specific administrative accounts or IP ranges from the rule.\n- Some enterprise management tools may utilize msiexec.exe for legitimate configuration changes, including registry modifications. Identify and exclude these tools by their process names or associated registry paths.\n- Automated scripts or deployment tools that rely on msiexec.exe for software management can generate false positives. Consider excluding these scripts or tools by their execution context or associated file paths.\n- Regularly review and update the exclusion list to ensure it aligns with the current software deployment and management practices within the organization.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.\n- Terminate the msiexec.exe process if it is confirmed to be involved in creating unauthorized persistence mechanisms.\n- Remove any scheduled tasks or startup entries created by msiexec.exe that are identified as malicious or unauthorized.\n- Restore any modified registry keys to their original state if they were altered to establish persistence.\n- Conduct a thorough scan of the system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any additional malicious files or processes.\n- Review and update security policies to restrict the use of msiexec.exe for non-administrative users, reducing the risk of exploitation.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate scheduled tasks may be created during installation of new software."],"from":"now-9m","rule_id":"1719ee47-89b8-4407-9d55-6dff2629dd4c","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1053","name":"Scheduled Task/Job","reference":"https://attack.mitre.org/techniques/T1053/","subtechnique":[{"id":"T1053.005","name":"Scheduled Task","reference":"https://attack.mitre.org/techniques/T1053/005/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.007","name":"Msiexec","reference":"https://attack.mitre.org/techniques/T1218/007/"}]}]}],"to":"now","references":[],"version":4,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"Effective_process.name","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"registry.path","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*","logs-endpoint.events.file-*"],"query":"any where host.os.type == \"windows\" and\n (process.name : \"msiexec.exe\" or Effective_process.name : \"msiexec.exe\") and\n (\n  (event.category == \"file\" and event.action == \"creation\" and\n   file.path : (\"?:\\\\Windows\\\\System32\\\\Tasks\\\\*\",\n                \"?:\\\\programdata\\\\microsoft\\\\windows\\\\start menu\\\\programs\\\\startup\\\\*\",\n                \"?:\\\\Users\\\\*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\*\")) or\n\n  (event.category == \"registry\" and event.action == \"modification\" and\n   registry.path : (\"H*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                    \"H*\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                    \"H*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*\",\n                    \"H*\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*\"))\n  )\n","actions":[]}
{"id":"1a835f85-ab75-49d4-9c6f-57d11990adeb","updated_at":"2025-06-15T07:42:35.554Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.289Z","created_by":"elastic","name":"Suspicious Access to LDAP Attributes","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Discovery","Data Source: Windows Security Event Logs","Data Source: Active Directory","Data Source: Windows","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identify read access to a high number of Active Directory object attributes. The knowledge of objects properties can help adversaries find vulnerabilities, elevate privileges or collect sensitive information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Access to LDAP Attributes\n\nLDAP (Lightweight Directory Access Protocol) is crucial for querying and modifying directory services like Active Directory, which stores user credentials and permissions. Adversaries exploit LDAP to enumerate directory attributes, seeking vulnerabilities or sensitive data. The detection rule identifies unusual read access patterns, such as excessive attribute queries, which may indicate reconnaissance or privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the event logs for the specific event code 4662 to gather details about the suspicious read access, focusing on the winlog.event_data.Properties field to understand which attributes were accessed.\n- Identify the user associated with the suspicious activity by examining the winlog.event_data.SubjectUserSid field, and determine if this user has a legitimate reason to access a high number of Active Directory object attributes.\n- Check the user's recent activity and login history to identify any unusual patterns or anomalies that could indicate compromised credentials or unauthorized access.\n- Investigate the source machine from which the LDAP queries originated to determine if it is a known and trusted device or if it shows signs of compromise or unauthorized use.\n- Correlate this event with other security alerts or logs to identify if this activity is part of a larger pattern of reconnaissance or privilege escalation attempts within the network.\n\n### False positive analysis\n\n- Regular system maintenance or updates may trigger high attribute read access. Exclude known maintenance accounts from the rule to prevent false alerts.\n- Automated scripts or applications that query Active Directory for legitimate purposes can cause excessive attribute reads. Identify and whitelist these scripts or applications to reduce noise.\n- Security audits or compliance checks often involve extensive directory queries. Coordinate with IT and security teams to recognize these activities and adjust the rule to exclude them.\n- Service accounts with legitimate high-volume access patterns should be reviewed and, if deemed non-threatening, added to an exception list to avoid unnecessary alerts.\n- Consider the context of the access, such as time of day or associated user activity, to differentiate between normal and suspicious behavior. Adjust the rule to account for these patterns where applicable.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.\n- Conduct a thorough review of the user account associated with the suspicious LDAP access to determine if it has been compromised. Reset the account credentials and enforce multi-factor authentication.\n- Analyze the event logs to identify any other systems or accounts that may have been accessed using similar methods, and apply the same containment measures.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine the full scope of the breach.\n- Implement additional monitoring on LDAP queries and Active Directory access to detect similar patterns of excessive attribute queries in the future.\n- Review and tighten access controls and permissions within Active Directory to ensure that only necessary attributes are accessible to users based on their roles.\n- Conduct a post-incident review to identify any gaps in security controls and update policies or procedures to prevent recurrence of similar threats.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"68ad737b-f90a-4fe5-bda6-a68fa460044e","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0007","name":"Discovery","reference":"https://attack.mitre.org/tactics/TA0007/"},"technique":[{"id":"T1069","name":"Permission Groups Discovery","reference":"https://attack.mitre.org/techniques/T1069/"}]}],"to":"now","references":[],"version":106,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.AccessMaskDescription","type":"unknown","ecs":false},{"name":"winlog.event_data.Properties","type":"unknown","ecs":false},{"name":"winlog.event_data.SubjectUserSid","type":"keyword","ecs":false}],"setup":"The 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Changes (Success,Failure)\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"any where event.code == \"4662\" and not winlog.event_data.SubjectUserSid : \"S-1-5-18\" and\n winlog.event_data.AccessMaskDescription == \"Read Property\" and length(winlog.event_data.Properties) >= 2000\n","actions":[]}
{"id":"c3c66162-992c-4949-976a-ae4dd5747a35","updated_at":"2025-06-15T07:45:17.689Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.657Z","created_by":"elastic","name":"Bypass UAC via Event Viewer","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Microsoft Defender for Endpoint","Data Source: Windows Security Event Logs","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies User Account Control (UAC) bypass via eventvwr.exe. Attackers bypass UAC to stealthily execute code with elevated permissions.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Bypass UAC via Event Viewer\n\nWindows User Account Control (UAC) allows a program to elevate its privileges (tracked as low to high integrity levels) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. UAC can deny an operation under high-integrity enforcement, or allow the user to perform the action if they are in the local administrators group and enter an administrator password when prompted.\n\nFor more information about the UAC and how it works, check the [official Microsoft docs page](https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/how-user-account-control-works).\n\nDuring startup, `eventvwr.exe` checks the registry value of the `HKCU\\Software\\Classes\\mscfile\\shell\\open\\command` registry key for the location of `mmc.exe`, which is used to open the `eventvwr.msc` saved console file. If the location of another binary or script is added to this registry value, it will be executed as a high-integrity process without a UAC prompt being displayed to the user. This rule detects this UAC bypass by monitoring processes spawned by `eventvwr.exe` other than `mmc.exe` and `werfault.exe`.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Inspect the host for suspicious or abnormal behavior in the alert timeframe.\n- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications, and any spawned child processes.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"31b4c719-f2b4-41f6-a9bd-fce93c2eaf62","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]}],"to":"now","references":[],"version":319,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.parent.name : \"eventvwr.exe\" and\n  not process.executable : (\n        \"?:\\\\Windows\\\\SysWOW64\\\\mmc.exe\",\n        \"?:\\\\Windows\\\\System32\\\\mmc.exe\",\n        \"?:\\\\Windows\\\\SysWOW64\\\\WerFault.exe\",\n        \"?:\\\\Windows\\\\System32\\\\WerFault.exe\",\n        \"?\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\Sys?????\\\\mmc.exe\",\n        \"?\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\Sys?????\\\\WerFault.exe\"\n  )\n","actions":[]}
{"id":"ca5a66fb-b254-40bf-a3c1-d0067639f383","updated_at":"2025-06-15T07:42:41.613Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:45.127Z","created_by":"elastic","name":"Potential Reverse Shell via Java","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This detection rule identifies the execution of a Linux shell process from a Java JAR application post an incoming network connection. This behavior may indicate reverse shell activity via a Java application.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Reverse Shell via Java\n\nJava applications, often run on Linux systems, can be exploited by adversaries to establish reverse shells, allowing remote control over a compromised system. Attackers may execute shell commands via Java processes post-network connection. The detection rule identifies suspicious Java activity by monitoring for shell executions following network connections, excluding benign processes, to flag potential reverse shell attempts.\n\n### Possible investigation steps\n\n- Review the network connection details, focusing on the destination IP address to determine if it is external or potentially malicious, as the rule excludes common internal and reserved IP ranges.\n- Examine the Java process that initiated the network connection, including its executable path and arguments, to identify any unusual or unauthorized JAR files being executed.\n- Investigate the child shell process spawned by the Java application, checking its command-line arguments and execution context to assess if it aligns with known reverse shell patterns.\n- Cross-reference the parent Java process and the child shell process with known benign applications or services, such as Jenkins or NetExtender, to rule out false positives.\n- Analyze historical data for the host to identify any previous similar activities or patterns that might indicate a persistent threat or repeated exploitation attempts.\n\n### False positive analysis\n\n- Java-based administrative tools like Jenkins may trigger false positives when executing shell commands. Exclude known benign Java applications such as Jenkins by adding their specific JAR paths to the exception list.\n- Automated scripts or maintenance tasks that use Java to execute shell commands can be mistaken for reverse shell activity. Identify and exclude these scripts by specifying their unique process arguments or executable paths.\n- Development environments where Java applications frequently execute shell commands for testing purposes can generate false alerts. Consider excluding these environments by filtering based on specific host identifiers or network segments.\n- Security tools that utilize Java for network operations and shell executions might be flagged. Verify and exclude these tools by adding their process names or executable paths to the exception list.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious Java processes identified in the alert to stop potential reverse shell activity.\n- Conduct a thorough review of the affected system's logs to identify any additional indicators of compromise or lateral movement attempts.\n- Remove any unauthorized or malicious Java JAR files and associated scripts from the system.\n- Apply security patches and updates to the Java environment and any other vulnerable software on the affected host.\n- Restore the system from a known good backup if any unauthorized changes or persistent threats are detected.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"5a3d5447-31c9-409a-aed1-72f9921594fd","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":["https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"],"version":12,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.entity_id","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id with maxspan=5s\n  [network where host.os.type == \"linux\" and event.action in (\"connection_accepted\", \"connection_attempted\") and\n   process.executable : (\"/usr/bin/java\", \"/bin/java\", \"/usr/lib/jvm/*\", \"/usr/java/*\") and\n   not (destination.ip == null or destination.ip == \"0.0.0.0\" or cidrmatch(\n     destination.ip, \"10.0.0.0/8\", \"127.0.0.0/8\", \"169.254.0.0/16\", \"172.16.0.0/12\", \"192.0.0.0/24\", \"192.0.0.0/29\",\n     \"192.0.0.8/32\", \"192.0.0.9/32\", \"192.0.0.10/32\", \"192.0.0.170/32\", \"192.0.0.171/32\", \"192.0.2.0/24\",\n     \"192.31.196.0/24\", \"192.52.193.0/24\", \"192.168.0.0/16\", \"192.88.99.0/24\", \"224.0.0.0/4\", \"100.64.0.0/10\",\n     \"192.175.48.0/24\",\"198.18.0.0/15\", \"198.51.100.0/24\", \"203.0.113.0/24\", \"240.0.0.0/4\", \"::1\", \"FE80::/10\",\n     \"FF00::/8\"\n    )\n  )] by process.entity_id\n  [process where host.os.type == \"linux\" and event.action == \"exec\" and\n   process.parent.executable : (\"/usr/bin/java\", \"/bin/java\", \"/usr/lib/jvm/*\", \"/usr/java/*\") and\n   process.parent.args : \"-jar\" and process.name in (\"bash\", \"dash\", \"ash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\")\n   and not process.parent.args in (\n     \"/usr/share/java/jenkins.war\", \"/etc/remote-iot/services/remoteiot.jar\",\n     \"/usr/lib64/NetExtender.jar\", \"/usr/lib/jenkins/jenkins.war\"\n   )] by process.parent.entity_id\n","actions":[]}
{"id":"6bfd1c92-4281-4626-9f18-5ecf1e2615a0","updated_at":"2025-06-15T07:42:37.575Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.172Z","created_by":"elastic","name":"Suspicious File Renamed via SMB","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Impact","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies an incoming SMB connection followed by a suspicious file rename operation. This may indicate a remote ransomware attack via the SMB protocol.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n## Performance\n\n- This rule may cause medium to high performance impact due to logic scoping all icoming SMB network events.\n\n#### Possible investigation steps\n\n- Investigate the source.ip address connecting to port 445 on this host.\n- Identify the user account that performed the file creation via SMB.\n- If the number of files is too high and source.ip connecting over SMB is unusual isolate the host and block the used credentials.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n\n### False positive analysis\n\n- Remote file rename over SMB.\n\n### Related rules\n\n- Third-party Backup Files Deleted via Unexpected Process - 11ea6bec-ebde-4d71-a8e9-784948f8e3e9\n- Volume Shadow Copy Deleted or Resized via VssAdmin - b5ea4bfe-a1b2-421f-9d47-22a75a6f2921\n- Volume Shadow Copy Deletion via PowerShell - d99a037b-c8e2-47a5-97b9-170d076827c4\n- Volume Shadow Copy Deletion via WMIC - dc9c1f74-dac3-48e3-b47f-eb79db358f57\n- Potential Ransomware Note File Dropped via SMB - 02bab13d-fb14-4d7c-b6fe-4a28874d37c5\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Consider isolating the involved host to prevent destructive behavior, which is commonly associated with this activity.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If any other destructive action was identified on the host, it is recommended to prioritize the investigation and look for ransomware preparation and execution activities.\n- If any backups were affected:\n  - Perform data recovery locally or restore the backups from replicated copies (cloud, other servers, etc.).\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"78e9b5d5-7c07-40a7-a591-3dbbf464c386","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0040","name":"Impact","reference":"https://attack.mitre.org/tactics/TA0040/"},"technique":[{"id":"T1485","name":"Data Destruction","reference":"https://attack.mitre.org/techniques/T1485/"},{"id":"T1490","name":"Inhibit System Recovery","reference":"https://attack.mitre.org/techniques/T1490/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.002","name":"SMB/Windows Admin Shares","reference":"https://attack.mitre.org/techniques/T1021/002/"}]}]}],"to":"now","references":["https://news.sophos.com/en-us/2023/12/21/akira-again-the-ransomware-that-keeps-on-taking/"],"version":6,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.address","type":"keyword","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"file.Ext.entropy","type":"unknown","ecs":false},{"name":"file.Ext.original.name","type":"unknown","ecs":false},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.type","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"source.address","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true},{"name":"source.port","type":"long","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.file-*","logs-endpoint.events.network-*"],"query":"sequence by host.id with maxspan=1s\n [network where host.os.type == \"windows\" and\n  event.action == \"connection_accepted\" and destination.port == 445 and source.port >= 49152 and process.pid == 4 and\n  source.ip != \"127.0.0.1\" and source.ip != \"::1\" and\n  network.type == \"ipv4\" and not endswith(source.address, destination.address)]\n [file where host.os.type == \"windows\" and\n  event.action == \"rename\" and process.pid == 4 and user.id : (\"S-1-5-21*\", \"S-1-12-*\") and\n  file.extension != null and file.Ext.entropy >= 6 and file.path : \"C:\\\\Users\\\\*\" and\n  file.Ext.original.name : (\"*.jpg\", \"*.bmp\", \"*.png\", \"*.pdf\", \"*.doc\", \"*.docx\", \"*.xls\", \"*.xlsx\", \"*.ppt\", \"*.pptx\", \"*.lnk\") and\n  not file.extension : (\"jpg\", \"bmp\", \"png\", \"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"*.lnk\")] with runs=3\n","actions":[]}
{"id":"36974007-4cc1-47a0-8e9a-22b0dbe1a62a","updated_at":"2025-06-15T07:42:41.610Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.219Z","created_by":"elastic","name":"Potential Remote Credential Access via Registry","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Tactic: Credential Access","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies remote access to the registry to potentially dump credential data from the Security Account Manager (SAM) registry hive in preparation for credential access and privileges elevation.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Remote Credential Access via Registry\n\nDumping registry hives is a common way to access credential information. Some hives store credential material, such as the SAM hive, which stores locally cached credentials (SAM secrets), and the SECURITY hive, which stores domain cached credentials (LSA secrets). Dumping these hives in combination with the SYSTEM hive enables the attacker to decrypt these secrets.\n\nAttackers can use tools like secretsdump.py or CrackMapExec to dump the registry hives remotely, and use dumped credentials to access other systems in the domain.\n\n#### Possible investigation steps\n\n- Identify the specifics of the involved assets, such as their role, criticality, and associated users.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Determine the privileges of the compromised accounts.\n- Investigate other alerts associated with the user/source host during the past 48 hours.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (e.g., 4624) to the target host.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious must be monitored by the security team.\n\n### Related rules\n\n- Credential Acquisition via Registry Hive Dumping - a7e7bfa3-088e-4f13-b29e-3986e0e756b8\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine if other hosts were compromised.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Reimage the host operating system or restore the compromised files to clean versions.\n- Ensure that the machine has the latest security updates and is not running unsupported Windows versions.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"850d901a-2a3c-46c6-8b22-55398a01aad8","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.002","name":"Security Account Manager","reference":"https://attack.mitre.org/techniques/T1003/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/"}]}],"to":"now","references":["https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py","https://www.elastic.co/security-labs/detect-credential-access"],"version":113,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"file.Ext.header_bytes","type":"unknown","ecs":false},{"name":"file.path","type":"keyword","ecs":true},{"name":"file.size","type":"long","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule uses Elastic Endpoint file creation and system integration events for correlation. Both data should be collected from the host for this detection to work.\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["logs-endpoint.events.file-*"],"query":"file where host.os.type == \"windows\" and\n  event.action == \"creation\" and process.name : \"svchost.exe\" and\n  file.Ext.header_bytes : \"72656766*\" and user.id : (\"S-1-5-21-*\", \"S-1-12-1-*\") and file.size >= 30000 and\n  file.path : (\"?:\\\\Windows\\\\system32\\\\*.tmp\", \"?:\\\\WINDOWS\\\\Temp\\\\*.tmp\")\n","actions":[]}
{"id":"98be7717-a6f2-4db8-aa5e-1f040ec69638","updated_at":"2025-06-15T07:42:41.615Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:52.397Z","created_by":"elastic","name":"Untrusted Driver Loaded","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies attempt to load an untrusted driver. Adversaries may modify code signing policies to enable execution of unsigned or self-signed code.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Untrusted Driver Loaded\n\nMicrosoft created the Windows Driver Signature Enforcement (DSE) security feature to prevent drivers with invalid signatures from loading and executing into the kernel (ring 0). DSE aims to protect systems by blocking attackers from loading malicious drivers on targets. \n\nThis protection is essential for maintaining system security. However, attackers or administrators can disable DSE and load untrusted drivers, which can put the system at risk. Therefore, it's important to keep this feature enabled and only load drivers from trusted sources to ensure system integrity and security.\n\nThis rule identifies an attempt to load an untrusted driver, which effectively means that DSE was disabled or bypassed. This can indicate that the system was compromised.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Examine the driver loaded to identify potentially suspicious characteristics. The following actions can help you gain context:\n  - Identify the path that the driver was loaded from. If you're using Elastic Defend, path information can be found in the `dll.path` field.\n  - Examine the file creation and modification timestamps:\n    - On Elastic Defend, those can be found in the `dll.Ext.relative_file_creation_time` and `dll.Ext.relative_file_name_modify_time` fields. The values are in seconds.\n    - Search for file creation events sharing the same file name as the `dll.name` field and identify the process responsible for the operation.\n      - Investigate any other abnormal behavior by the subject process, such as network connections, registry or file modifications, and any spawned child processes.\n  - Use the driver SHA-256 (`dll.hash.sha256` field) hash value to search for the existence and reputation in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- Use Osquery to investigate the drivers loaded into the system.\n  - !{osquery{\"label\":\"Osquery - Retrieve All Non-Microsoft Drivers with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, class, description, directory, image,\\nissuer_name, manufacturer, service, signed, subject_name FROM drivers JOIN authenticode ON drivers.image =\\nauthenticode.path JOIN hash ON drivers.image = hash.path WHERE NOT (provider == \\\"Microsoft\\\" AND signed == \\\"1\\\")\\n\"}}\n  - !{osquery{\"label\":\"Osquery - Retrieve All Unsigned Drivers with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, class, description, directory, image,\\nissuer_name, manufacturer, service, signed, subject_name FROM drivers JOIN authenticode ON drivers.image =\\nauthenticode.path JOIN hash ON drivers.image = hash.path WHERE signed == \\\"0\\\"\\n\"}}\n- Identify the driver's `Device Name` and `Service Name`.\n- Check for alerts from the rules specified in the `Related Rules` section.\n\n### False positive analysis\n\n- This activity should not happen legitimately. The security team should address any potential benign true positive (B-TP), as this configuration can put the user and the domain at risk.\n\n### Related Rules\n\n- First Time Seen Driver Loaded - df0fd41e-5590-4965-ad5e-cd079ec22fa9\n- Code Signing Policy Modification Through Registry - da7733b1-fe08-487e-b536-0a04c6d8b0cd\n- Code Signing Policy Modification Through Built-in tools - b43570de-a908-4f7f-8bdb-b2df6ffd8c80\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Disable and uninstall all suspicious drivers found in the system. This can be done via Device Manager. (Note that this step may require you to boot the system into Safe Mode.)\n- Remove the related services and registry keys found in the system. Note that the service will probably not stop if the driver is still installed.\n  - This can be done via PowerShell `Remove-Service` cmdlet.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Ensure that the Driver Signature Enforcement is enabled on the system.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"d8ab1ec1-feeb-48b9-89e7-c12e189448aa","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/","subtechnique":[{"id":"T1036.001","name":"Invalid Code Signature","reference":"https://attack.mitre.org/techniques/T1036/001/"}]}]}],"to":"now","references":["https://github.com/hfiref0x/TDL","https://docs.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653559(v=vs.85)?redirectedfrom=MSDN"],"version":12,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"dll.code_signature.status","type":"keyword","ecs":true},{"name":"dll.code_signature.trusted","type":"boolean","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.library-*"],"query":"driver where host.os.type == \"windows\" and process.pid == 4 and\n  dll.code_signature.trusted != true and \n  not dll.code_signature.status : (\"errorExpired\", \"errorRevoked\", \"errorCode_endpoint:*\")\n","actions":[]}
{"id":"9fe3abeb-16e3-4579-9754-f62a61176e50","updated_at":"2025-06-15T07:42:35.572Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.632Z","created_by":"elastic","name":"Web Shell Detection: Script Process Child of Common Web Processes","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Initial Access","Tactic: Execution","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: SentinelOne","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious commands executed via a web server, which may suggest a vulnerability and remote shell access.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Web Shell Detection: Script Process Child of Common Web Processes\n\nAdversaries may backdoor web servers with web shells to establish persistent access to systems. A web shell is a web script that is placed on an openly accessible web server to allow an adversary to use the web server as a gateway into a network. A web shell may provide a set of functions to execute or a command-line interface on the system that hosts the web server.\n\nThis rule detects a web server process spawning script and command-line interface programs, potentially indicating attackers executing commands using the web shell.\n\n#### Possible investigation steps\n\n- Investigate abnormal behaviors observed by the subject process such as network connections, registry or file modifications, and any other spawned child processes.\n- Examine the command line to determine which commands or scripts were executed.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- If scripts or executables were dropped, retrieve the files and determine if they are malicious:\n  - Use a private sandboxed malware analysis system to perform analysis.\n    - Observe and collect information about the following activities:\n      - Attempts to contact external domains and addresses.\n      - File and registry access, modification, and creation activities.\n      - Service creation and launch activities.\n      - Scheduled task creation.\n  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.\n    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious must be monitored by the security team.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Security audits, maintenance, and network administrative scripts may trigger this alert when run under web processes."],"from":"now-9m","rule_id":"2917d495-59bd-4250-b395-c29409b76086","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1505","name":"Server Software Component","reference":"https://attack.mitre.org/techniques/T1505/","subtechnique":[{"id":"T1505.003","name":"Web Shell","reference":"https://attack.mitre.org/techniques/T1505/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1190","name":"Exploit Public-Facing Application","reference":"https://attack.mitre.org/techniques/T1190/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1047","name":"Windows Management Instrumentation","reference":"https://attack.mitre.org/techniques/T1047/"},{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"},{"id":"T1059.003","name":"Windows Command Shell","reference":"https://attack.mitre.org/techniques/T1059/003/"},{"id":"T1059.005","name":"Visual Basic","reference":"https://attack.mitre.org/techniques/T1059/005/"}]}]}],"to":"now","references":["https://www.microsoft.com/security/blog/2020/02/04/ghost-in-the-shell-investigating-web-shell-attacks/","https://www.elastic.co/security-labs/elastic-response-to-the-the-spring4shell-vulnerability-cve-2022-22965","https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1"],"version":419,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.parent.name : (\"w3wp.exe\", \"httpd.exe\", \"nginx.exe\", \"php.exe\", \"php-cgi.exe\", \"tomcat.exe\") and\n  process.name : (\"cmd.exe\", \"cscript.exe\", \"powershell.exe\", \"pwsh.exe\", \"powershell_ise.exe\", \"wmic.exe\", \"wscript.exe\") and\n  not\n  (\n    process.parent.name : (\"php.exe\", \"httpd.exe\") and process.name : \"cmd.exe\" and\n    process.command_line : (\n      \"cmd.exe /c mode CON\",\n      \"cmd.exe /s /c \\\"mode CON\\\"\",\n      \"cmd.exe /c \\\"mode\\\"\",\n      \"cmd.exe /s /c \\\"tput colors 2>&1\\\"\"\n    )\n  )\n","actions":[]}
{"id":"1df45f9a-96b8-45bf-80c3-d5138a3747f9","updated_at":"2025-06-15T07:42:43.622Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:45.109Z","created_by":"elastic","name":"Dumping of Keychain Content via Security Command","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Adversaries may dump the content of the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Dumping of Keychain Content via Security Command\n\nKeychains in macOS securely store user credentials, including passwords and certificates. Adversaries exploit this by using commands to extract keychain data, aiming to access sensitive information. The detection rule identifies suspicious activity by monitoring processes that initiate keychain dumps, specifically looking for command-line arguments associated with this malicious behavior, thus alerting analysts to potential credential theft attempts.\n\n### Possible investigation steps\n\n- Review the process details to identify the parent process and determine if the keychain dump was initiated by a legitimate application or user.\n- Examine the user account associated with the process to verify if the activity aligns with their typical behavior or if the account may be compromised.\n- Check the timestamp of the event to correlate with any other suspicious activities or anomalies on the system around the same time.\n- Investigate the command-line arguments used in the process to confirm if they match known patterns of malicious keychain dumping attempts.\n- Analyze any network connections or data transfers initiated by the process to identify potential exfiltration of the dumped keychain data.\n- Look for additional alerts or logs from the same host or user to assess if this is part of a broader attack campaign.\n\n### False positive analysis\n\n- Legitimate administrative tasks or system maintenance activities may trigger the rule if they involve keychain access. Users should review the context of the process initiation to determine if it aligns with routine administrative operations.\n- Security or IT tools that perform regular audits or backups of keychain data might be flagged. Users can create exceptions for these tools by identifying their specific process names or paths and excluding them from the rule.\n- Developers or advanced users testing applications that require keychain access might inadvertently trigger the rule. Users should document these activities and consider temporary exclusions during development phases.\n- Automated scripts or workflows that interact with keychain data for legitimate purposes could be mistaken for malicious activity. Users should ensure these scripts are well-documented and consider adding them to an allowlist if they are frequently used.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified by the detection rule, specifically those involving the \"dump-keychain\" command, to halt ongoing credential theft attempts.\n- Conduct a thorough review of the system's keychain access logs to identify any unauthorized access or export of credentials and determine the scope of the compromise.\n- Change all credentials stored in the keychain, including passwords for Wi-Fi, websites, and any other services, to mitigate the risk of unauthorized access using stolen credentials.\n- Restore the system from a known good backup if any unauthorized changes or malware are detected, ensuring that the backup predates the compromise.\n- Escalate the incident to the security operations team for further investigation and to assess whether additional systems may be affected.\n- Implement enhanced monitoring and alerting for similar suspicious activities, focusing on keychain access and command-line arguments related to credential dumping, to prevent future incidents.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"565d6ca5-75ba-4c82-9b13-add25353471c","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1555","name":"Credentials from Password Stores","reference":"https://attack.mitre.org/techniques/T1555/","subtechnique":[{"id":"T1555.001","name":"Keychain","reference":"https://attack.mitre.org/techniques/T1555/001/"}]}]}],"to":"now","references":["https://ss64.com/osx/security.html"],"version":112,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and \n process.args like~ \"dump-keychain\" and process.args == \"-d\"\n","actions":[]}
{"id":"d3e1a64b-4a95-4606-9a47-6261394dd2c7","updated_at":"2025-06-15T07:42:39.588Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.137Z","created_by":"elastic","name":"PowerShell Invoke-NinjaCopy script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects PowerShell scripts that contain the default exported functions used on Invoke-NinjaCopy. Attackers can use Invoke-NinjaCopy to read SYSTEM files that are normally locked, such as the NTDS.dit file or registry hives.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating PowerShell Invoke-NinjaCopy script\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks, making it available for use in various environments, creating an attractive way for attackers to execute code.\n\nInvoke-NinjaCopy is a PowerShell script capable of reading SYSTEM files that were normally locked, such as `NTDS.dit` or sensitive registry locations. It does so by using the direct volume access technique, which enables attackers to bypass access control mechanisms and file system monitoring by reading the raw data directly from the disk and extracting the file by parsing the file system structures.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Determine whether the script stores the captured data locally.\n- Check if the imported function was executed and which file it targeted.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious must be monitored by the security team.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"b8386923-b02c-4b94-986a-d223d9b01f88","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.002","name":"Security Account Manager","reference":"https://attack.mitre.org/techniques/T1003/002/"},{"id":"T1003.003","name":"NTDS","reference":"https://attack.mitre.org/techniques/T1003/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1006","name":"Direct Volume Access","reference":"https://attack.mitre.org/techniques/T1006/"}]}],"to":"now","references":["https://github.com/BC-SECURITY/Empire/blob/main/empire/server/data/module_source/collection/Invoke-NinjaCopy.ps1"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    \"StealthReadFile\" or\n    \"StealthReadFileAddr\" or\n    \"StealthCloseFileDelegate\" or\n    \"StealthOpenFile\" or\n    \"StealthCloseFile\" or\n    \"StealthReadFile\" or\n    \"Invoke-NinjaCopy\"\n   )\n  and not user.id : \"S-1-5-18\"\n  and not powershell.file.script_block_text : (\n    \"sentinelbreakpoints\" and \"Set-PSBreakpoint\" and \"PowerSploitIndicators\"\n  )\n","actions":[]}
{"id":"0873d44c-46a7-48f4-ac47-ab5fef9ddebc","updated_at":"2025-06-15T08:11:38.195Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:42.111Z","created_by":"elastic","name":"Potential Reverse Shell via Child","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This detection rule identifies suspicious network traffic patterns associated with TCP reverse shell activity. This activity consists of a network event that is followed by the creation of a shell process with suspicious command line arguments. An attacker may establish a Linux TCP reverse shell to gain remote access to a target system.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Reverse Shell via Child\n\nReverse shells are a technique where attackers gain remote access to a system by initiating a connection from the target back to the attacker's machine. This is often achieved using shell processes like bash or socat. Adversaries exploit this by executing commands remotely, bypassing firewalls. The detection rule identifies such activity by monitoring for network events followed by suspicious shell process executions, focusing on unusual command-line arguments and parent-child process relationships.\n\n### Possible investigation steps\n\n- Review the network event details to identify the source and destination IP addresses involved in the connection attempt or acceptance. Pay special attention to any external IP addresses that are not part of the internal network.\n- Examine the process execution details, focusing on the command-line arguments used by the shell process. Look for unusual or suspicious arguments such as \"-i\" or \"-l\" that may indicate interactive or login shells.\n- Investigate the parent-child process relationship, especially if the parent process is \"socat\" with arguments containing \"exec\". This could suggest an attempt to execute a reverse shell.\n- Check the timeline of events to determine if the network event and shell process execution occurred within a short time frame (maxspan=5s), which may indicate a coordinated attack.\n- Correlate the alert with any other recent suspicious activities on the host, such as unauthorized access attempts or changes in system configurations, to assess the broader context of the potential threat.\n- Verify the legitimacy of the involved processes and connections by consulting with system owners or reviewing system documentation to rule out any false positives due to legitimate administrative activities.\n\n### False positive analysis\n\n- Legitimate administrative scripts or tools that use shell processes with interactive flags may trigger the rule. To manage this, identify and document these scripts, then create exceptions for their specific command-line arguments or parent processes.\n- Automated maintenance tasks or cron jobs that involve shell execution with similar command-line arguments can be mistaken for reverse shell activity. Review these tasks and exclude them by specifying their unique process names or arguments.\n- Development or testing environments where developers frequently use shell processes for debugging or testing purposes might cause false positives. Consider excluding these environments by filtering based on host identifiers or specific user accounts.\n- Network monitoring tools or legitimate applications that use socat for network connections may appear suspicious. Identify these applications and exclude their specific process names or parent-child relationships from the detection rule.\n- Custom scripts or applications that mimic reverse shell behavior for legitimate purposes should be reviewed and excluded by adding their specific process names or command-line patterns to the exception list.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious shell processes identified by the detection rule, especially those initiated by or involving the listed shell programs (e.g., bash, socat).\n- Conduct a forensic analysis of the affected system to identify any additional indicators of compromise, such as unauthorized user accounts or modified system files.\n- Review and reset credentials for any accounts that may have been compromised, ensuring the use of strong, unique passwords.\n- Apply relevant security patches and updates to the affected system to address any vulnerabilities that may have been exploited.\n- Monitor network traffic for any further suspicious activity, particularly outgoing connections to unknown or suspicious IP addresses.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"2138bb70-5a5e-42fd-be5e-b38edf6a6777","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":["https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"],"version":7,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows\nthe Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click Add integrations.\n- In the query bar, search for Elastic Defend and select the integration to see more details about it.\n- Click Add Elastic Defend.\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either Traditional Endpoints or Cloud Workloads.\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest to select \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in New agent policy name. If other agent policies already exist, you can click the Existing hosts tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click Save and Continue.\n- To complete the integration, select Add Elastic Agent to your hosts and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id, process.entity_id with maxspan=5s\n  [network where event.type == \"start\" and host.os.type == \"linux\" and\n     event.action in (\"connection_attempted\", \"connection_accepted\") and\n     process.name : (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\", \"socat\") and destination.ip != null and\n     not cidrmatch(destination.ip, \"127.0.0.0/8\", \"169.254.0.0/16\", \"224.0.0.0/4\", \"::1\")]\n  [process where event.type == \"start\" and host.os.type == \"linux\" and event.action == \"exec\" and\n     process.name in (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and (\n       (process.args : (\"-i\", \"-l\")) or (process.parent.name == \"socat\" and process.parent.args : \"*exec*\")\n   )]\n","actions":[]}
{"id":"f1588eb4-fccc-476f-9edb-f1520d1ab674","updated_at":"2025-06-15T07:42:37.578Z","updated_by":"sangpt","created_at":"2025-03-25T01:27:10.960Z","created_by":"sangpt","name":"Remote Desktop File Opened from Suspicious Path","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Initial Access","Tactic: Command and Control","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies attempts to open a remote desktop file from suspicious paths. Adversaries may abuse RDP files for initial access.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Remote Desktop File Opened from Suspicious Path\n\nRemote Desktop Protocol (RDP) allows users to connect to and control a computer remotely, facilitating remote work and administration. However, adversaries can exploit RDP files, which store connection settings, to gain unauthorized access. They may distribute malicious RDP files via phishing, placing them in suspicious directories. The detection rule identifies when RDP files are opened from unusual paths, signaling potential misuse and enabling analysts to investigate further.\n\n### Possible investigation steps\n\n- Review the process execution details to confirm the presence of \"mstsc.exe\" and verify the suspicious path from which the RDP file was opened, as specified in the query.\n- Check the user account associated with the process to determine if the activity aligns with their typical behavior or if it appears anomalous.\n- Investigate the source of the RDP file by examining recent email activity or downloads to identify potential phishing attempts or unauthorized file transfers.\n- Analyze the system's event logs for any other unusual activities or processes that occurred around the same time as the RDP file execution.\n- Assess the network connections established by the system during the time of the alert to identify any suspicious or unauthorized remote connections.\n- Consult threat intelligence sources to determine if the identified path or file name pattern is associated with known malicious campaigns or threat actors.\n\n### False positive analysis\n\n- Users frequently download legitimate RDP files from trusted sources like corporate emails or internal portals. To manage this, create exceptions for known safe domains or email addresses in your security tools.\n- Temporary directories often store RDP files during legitimate software installations or updates. Monitor these activities and whitelist specific processes or software that are known to use RDP files during their operations.\n- Employees working remotely may use RDP files stored in their Downloads folder for legitimate access to company resources. Implement a policy to educate users on safe RDP file handling and consider excluding the Downloads folder from alerts if it is a common practice.\n- Some business applications may generate RDP files in temporary directories as part of their normal operation. Identify these applications and configure your detection systems to exclude their specific file paths or process names.\n- Automated scripts or IT management tools might use RDP files for routine administrative tasks. Document these scripts and tools, and adjust your detection rules to ignore their specific activities.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Terminate any active RDP sessions initiated from the suspicious paths identified in the alert to cut off potential attacker access.\n- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to identify and remove any malicious files or software.\n- Review and remove any unauthorized RDP files from the suspicious directories listed in the detection query to prevent future misuse.\n- Reset credentials for any accounts that were used to open the suspicious RDP files, ensuring that new passwords are strong and unique.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are compromised.\n- Implement enhanced monitoring and logging for RDP activities across the network to detect and respond to similar threats more effectively in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"f401a0e3-5eeb-4591-969a-f435488e7d12","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1566","name":"Phishing","reference":"https://attack.mitre.org/techniques/T1566/","subtechnique":[{"id":"T1566.001","name":"Spearphishing Attachment","reference":"https://attack.mitre.org/techniques/T1566/001/"}]}]}],"to":"now","references":["https://www.microsoft.com/en-us/security/blog/2024/10/29/midnight-blizzard-conducts-large-scale-spear-phishing-campaign-using-rdp-files/","https://www.blackhillsinfosec.com/rogue-rdp-revisiting-initial-access-methods/","https://shorsec.io/blog/malrdp-implementing-rouge-rdp-manually/"],"version":5,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n process.name : \"mstsc.exe\" and\n process.args : (\"?:\\\\Users\\\\*\\\\Downloads\\\\*.rdp\",\n                 \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\Temp?_*.rdp\",\n                 \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\7z*.rdp\",\n                 \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\Rar$*\\\\*.rdp\",\n                 \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\BNZ.*.rdp\",\n                 \"C:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\INetCache\\\\Content.Outlook\\\\*.rdp\")\n","actions":[]}
{"id":"44506e3f-52ad-4599-babd-03de0912f845","updated_at":"2025-06-15T07:42:37.590Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.111Z","created_by":"elastic","name":"NTDS or SAM Database File Copied","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne","Data Source: Sysmon","Data Source: Crowdstrike","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies a copy operation of the Active Directory Domain Database (ntds.dit) or Security Account Manager (SAM) files. Those files contain sensitive information including hashed domain and/or local credentials.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating NTDS or SAM Database File Copied\n\nThe Active Directory Domain Database (ntds.dit) and Security Account Manager (SAM) files are critical components in Windows environments, containing sensitive information such as hashed domain and local credentials.\n\nThis rule identifies copy operations of these files using specific command-line tools, such as Cmd.Exe, PowerShell.EXE, XCOPY.EXE, and esentutl.exe. By monitoring for the presence of these tools and their associated arguments, the rule aims to detect potential credential access activities.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, command lines, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Check for any recent changes in user account privileges or group memberships that may have allowed the unauthorized access.\n- Determine whether the file was potentially exfiltrated from the subject host.\n- Scope compromised credentials and disable the accounts.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process's `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Look for the presence of relevant artifacts on other systems. Identify commonalities and differences between potentially compromised systems.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n  - If malicious activity is confirmed, perform a broader investigation to identify the scope of the compromise and determine the appropriate remediation steps.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Restore the affected system to its operational state by applying any necessary patches, updates, or configuration changes.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic","Austin Songer"],"false_positives":[],"from":"now-9m","rule_id":"3bc6deaa-fbd4-433a-ae21-3e892f95624f","max_signals":33,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.002","name":"Security Account Manager","reference":"https://attack.mitre.org/techniques/T1003/002/"},{"id":"T1003.003","name":"NTDS","reference":"https://attack.mitre.org/techniques/T1003/003/"}]}]}],"to":"now","references":["https://thedfirreport.com/2020/11/23/pysa-mespinoza-ransomware/","https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.002/T1003.002.md#atomic-test-3---esentutlexe-sam-copy","https://www.elastic.co/security-labs/detect-credential-access","https://www.elastic.co/security-labs/siestagraph-new-implant-uncovered-in-asean-member-foreign-ministry"],"version":319,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  (\n    ((?process.pe.original_file_name in (\"Cmd.Exe\", \"PowerShell.EXE\", \"XCOPY.EXE\") or process.name : (\"Cmd.Exe\", \"PowerShell.EXE\", \"XCOPY.EXE\")) and\n       process.args : (\"copy\", \"xcopy\", \"Copy-Item\", \"move\", \"cp\", \"mv\")\n    ) or\n    ((?process.pe.original_file_name : \"esentutl.exe\" or process.name : \"esentutl.exe\") and process.args : (\"*/y*\", \"*/vss*\", \"*/d*\"))\n  ) and\n  process.command_line : (\"*\\\\ntds.dit*\", \"*\\\\config\\\\SAM*\", \"*\\\\*\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy*\\\\*\", \"*/system32/config/SAM*\", \"*\\\\User Data\\\\*\")\n","actions":[]}
{"id":"0dc25001-f346-41a9-8976-e2390c6c5e5d","updated_at":"2025-06-15T08:11:31.382Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.288Z","created_by":"elastic","name":"Scheduled Task Created by a Windows Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"A scheduled task was created by a Windows script via cscript.exe, wscript.exe or powershell.exe. This can be abused by an adversary to establish persistence.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\nDecode the base64 encoded Tasks Actions registry value to investigate the task's configured action.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":["Legitimate scheduled tasks may be created during installation of new software."],"from":"now-9m","rule_id":"689b9d57-e4d5-4357-ad17-9c334609d79a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1053","name":"Scheduled Task/Job","reference":"https://attack.mitre.org/techniques/T1053/","subtechnique":[{"id":"T1053.005","name":"Scheduled Task","reference":"https://attack.mitre.org/techniques/T1053/005/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"},{"id":"T1059.005","name":"Visual Basic","reference":"https://attack.mitre.org/techniques/T1059/005/"}]}]}],"to":"now","references":[],"version":211,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"dll.name","type":"keyword","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"registry.path","type":"keyword","ecs":true},{"name":"registry.value","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.registry-*","logs-endpoint.events.library-*","logs-windows.sysmon_operational-*","endgame-*"],"query":"sequence by host.id with maxspan = 30s\n  [any where host.os.type == \"windows\" and \n    (event.category : (\"library\", \"driver\") or (event.category == \"process\" and event.action : \"Image loaded*\")) and\n    (?dll.name : \"taskschd.dll\" or file.name : \"taskschd.dll\") and\n    process.name : (\"cscript.exe\", \"wscript.exe\", \"powershell.exe\", \"pwsh.exe\", \"powershell_ise.exe\")]\n  [registry where host.os.type == \"windows\" and event.type == \"change\" and registry.value : \"Actions\" and\n    registry.path : (\n      \"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Schedule\\\\TaskCache\\\\Tasks\\\\*\\\\Actions\",\n      \"\\\\REGISTRY\\\\MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Schedule\\\\TaskCache\\\\Tasks\\\\*\\\\Actions\"\n  )]\n","actions":[]}
{"id":"f735f5af-7a67-486d-8c36-e9da1ca29b81","updated_at":"2025-06-15T08:12:15.238Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.160Z","created_by":"elastic","name":"Potential Reverse Shell via Suspicious Child Process","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This detection rule detects the creation of a shell through a suspicious process chain. Any reverse shells spawned by the specified utilities that are initialized from a single process followed by a network connection attempt will be captured through this rule. Attackers may spawn reverse shells to establish persistence onto a target system.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Reverse Shell via Suspicious Child Process\n\nReverse shells are a common technique used by attackers to gain remote access to a compromised system. They exploit scripting languages and utilities like Python, Perl, and Netcat to execute commands remotely. The detection rule identifies suspicious process chains and network activities, such as unexpected shell spawns and outbound connections, to flag potential reverse shell attempts, leveraging process and network event analysis to detect anomalies.\n\n### Possible investigation steps\n\n- Review the process chain to identify the parent process and determine if it is expected behavior for the system. Check the process.parent.name field for any unusual or unauthorized parent processes.\n- Analyze the process arguments captured in the alert, such as process.args, to understand the command being executed and assess if it aligns with known reverse shell patterns.\n- Investigate the network connection details, focusing on the destination.ip field, to determine if the connection is to a known malicious IP or an unexpected external address.\n- Check the process.name field to identify the specific utility used (e.g., python, perl, nc) and verify if its usage is legitimate or if it indicates a potential compromise.\n- Correlate the alert with other security events or logs from the same host.id to identify any additional suspicious activities or patterns that may indicate a broader attack.\n- Consult threat intelligence sources to gather information on any identified IP addresses or domains involved in the network connection to assess their reputation and potential threat level.\n\n### False positive analysis\n\n- Development and testing environments may frequently execute scripts using languages like Python, Perl, or Ruby, which can trigger the rule. To manage this, consider excluding specific host IDs or process names associated with known development activities.\n- Automated scripts or cron jobs that utilize network connections for legitimate purposes, such as data backups or updates, might be flagged. Identify these processes and add them to an exception list based on their parent process names or specific arguments.\n- System administrators might use tools like Netcat or OpenSSL for troubleshooting or monitoring network connections. If these activities are routine and verified, exclude them by specifying the administrator's user ID or the specific command patterns used.\n- Security tools or monitoring solutions that simulate attack scenarios for testing purposes can also trigger this rule. Ensure these tools are recognized and excluded by their process names or associated network activities.\n- Custom scripts that use shell commands to interact with remote systems for maintenance tasks may appear suspicious. Review these scripts and exclude them by their unique process arguments or parent process names.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified by the detection rule, particularly those involving scripting languages or utilities like Python, Perl, or Netcat.\n- Conduct a forensic analysis of the affected system to identify any additional indicators of compromise, such as unauthorized user accounts or modified system files.\n- Review and reset credentials for any accounts that may have been accessed or compromised during the incident.\n- Apply security patches and updates to the affected system to address any vulnerabilities that may have been exploited.\n- Monitor network traffic for any signs of further suspicious activity, focusing on outbound connections from the affected host.\n- Escalate the incident to the security operations center (SOC) or relevant security team for further investigation and to ensure comprehensive remediation efforts.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"76e4d92b-61c1-4a95-ab61-5fd94179a1ee","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":["https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"],"version":13,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.args_count","type":"long","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id, process.entity_id with maxspan=1s\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action in (\"exec\", \"fork\") and (\n    (process.name : \"python*\" and process.args : \"-c\" and process.args : (\n     \"*import*pty*spawn*\", \"*import*subprocess*call*\"\n    )) or\n    (process.name : \"perl*\" and process.args : \"-e\" and process.args : \"*socket*\" and process.args : (\n     \"*exec*\", \"*system*\"\n    )) or\n    (process.name : \"ruby*\" and process.args : (\"-e\", \"-rsocket\") and process.args : (\n     \"*TCPSocket.new*\", \"*TCPSocket.open*\"\n     )) or\n    (process.name : \"lua*\" and process.args : \"-e\" and process.args : \"*socket.tcp*\" and process.args : (\n     \"*io.popen*\", \"*os.execute*\"\n    )) or\n    (process.name : \"php*\" and process.args : \"-r\" and process.args : \"*fsockopen*\" and process.args : \"*/bin/*sh*\") or\n    (process.name : (\"awk\", \"gawk\", \"mawk\", \"nawk\") and process.args : \"*/inet/tcp/*\") or\n    (process.name : \"openssl\" and process.args : \"-connect\") or\n    (process.name : (\"nc\", \"ncat\", \"netcat\") and process.args == \"-e\" and process.args_count >= 3 and\n     not process.args == \"-z\") or\n    (process.name : \"telnet\" and process.args_count >= 3)\n  ) and process.parent.name : (\n    \"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\", \"python*\", \"php*\", \"perl\", \"ruby\", \"lua*\",\n    \"openssl\", \"nc\", \"netcat\", \"ncat\", \"telnet\", \"awk\")]\n  [network where host.os.type == \"linux\" and event.type == \"start\" and event.action in (\"connection_attempted\", \"connection_accepted\") and\n    process.name : (\"python*\", \"php*\", \"perl\", \"ruby\", \"lua*\", \"openssl\", \"nc\", \"netcat\", \"ncat\", \"telnet\", \"awk\") and\n    destination.ip != null and not cidrmatch(destination.ip, \"127.0.0.0/8\", \"169.254.0.0/16\", \"224.0.0.0/4\", \"::1\")]\n","actions":[]}
{"id":"2de8945e-9dad-4d90-9b90-2502b17bfc03","updated_at":"2025-06-15T07:50:51.098Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:38.985Z","created_by":"elastic","name":"Privileged Account Brute Force","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies multiple consecutive logon failures targeting an Admin account from the same source address and within a short time interval. Adversaries will often brute force login attempts across multiple users with a common or known password, in an attempt to gain access to accounts.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Privileged Account Brute Force\n\nAdversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to guess the password using a repetitive or iterative mechanism systematically. More details can be found [here](https://attack.mitre.org/techniques/T1110/001/).\n\nThis rule identifies potential password guessing/brute force activity from a single address against an account that contains the `admin` pattern on its name, which is likely a highly privileged account.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the logon failure reason code and the targeted user name.\n  - Prioritize the investigation if the account is critical or has administrative privileges over the domain.\n- Investigate the source IP address of the failed Network Logon attempts.\n  - Identify whether these attempts are coming from the internet or are internal.\n- Investigate other alerts associated with the involved users and source host during the past 48 hours.\n- Identify the source and the target computer and their roles in the IT environment.\n- Check whether the involved credentials are used in automation or scheduled tasks.\n- If this activity is suspicious, contact the account owner and confirm whether they are aware of it.\n- Examine the source host for derived artifacts that indicate compromise:\n  - Observe and collect information about the following activities in the alert source host:\n    - Attempts to contact external domains and addresses.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the host which is the source of this activity.\n\n### False positive analysis\n\n- Authentication misconfiguration or obsolete credentials.\n- Service account password expired.\n- Domain trust relationship issues.\n- Infrastructure or availability issues.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the source host to prevent further post-compromise behavior.\n- If the asset is exposed to the internet with RDP or other remote services available, take the necessary measures to restrict access to the asset. If not possible, limit the access via the firewall to only the needed IP addresses. Also, ensure the system uses robust authentication mechanisms and is patched regularly.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"f9790abf-bd0c-45f9-8b5f-d0b74015e029","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1110","name":"Brute Force","reference":"https://attack.mitre.org/techniques/T1110/","subtechnique":[{"id":"T1110.001","name":"Password Guessing","reference":"https://attack.mitre.org/techniques/T1110/001/"},{"id":"T1110.003","name":"Password Spraying","reference":"https://attack.mitre.org/techniques/T1110/003/"}]}]}],"to":"now","references":["https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625"],"version":114,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true},{"name":"user.name","type":"keyword","ecs":true},{"name":"winlog.computer_name","type":"keyword","ecs":false},{"name":"winlog.event_data.Status","type":"keyword","ecs":false},{"name":"winlog.logon.type","type":"unknown","ecs":false}],"setup":"","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"sequence by winlog.computer_name, source.ip with maxspan=10s\n  [authentication where event.action == \"logon-failed\" and winlog.logon.type : \"Network\" and\n    source.ip != null and source.ip != \"127.0.0.1\" and source.ip != \"::1\" and user.name : \"*admin*\" and\n\n    /* noisy failure status codes often associated to authentication misconfiguration */\n    not winlog.event_data.Status : (\"0xC000015B\", \"0XC000005E\", \"0XC0000133\", \"0XC0000192\")] with runs=5\n","actions":[]}
{"id":"297ca1ad-2aa4-4a6a-b4f4-7e51a25ce8f0","updated_at":"2025-06-15T07:50:07.067Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:42.081Z","created_by":"elastic","name":"Shell Configuration Creation or Modification","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Persistence","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule monitors the creation/alteration of a shell configuration file. Unix systems use shell configuration files to set environment variables, create aliases, and customize the user's environment. Adversaries may modify or add a shell configuration file to execute malicious code and gain persistence in the system. This behavior is consistent with the Kaiji malware family.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Shell Configuration Creation or Modification\n\nShell configuration files in Unix-like systems are crucial for setting up user environments by defining variables, aliases, and startup scripts. Adversaries exploit these files to execute malicious code persistently. The detection rule identifies suspicious creation or modification of these files, excluding benign processes, to flag potential threats, aligning with tactics like persistence and event-triggered execution.\n\n### Possible investigation steps\n\n- Review the specific file path involved in the alert to determine if it is a system-wide or user-specific shell configuration file, as listed in the query.\n- Identify the process executable that triggered the alert and verify if it is part of the excluded benign processes. If not, investigate the process's origin and purpose.\n- Check the modification or creation timestamp of the file to correlate with any known user activities or scheduled tasks that might explain the change.\n- Examine the contents of the modified or newly created shell configuration file for any suspicious or unauthorized entries, such as unexpected scripts or commands.\n- Investigate the user account associated with the file modification to determine if the activity aligns with their typical behavior or if the account may have been compromised.\n- Cross-reference the alert with other security logs or alerts to identify any related suspicious activities or patterns that could indicate a broader attack campaign.\n\n### False positive analysis\n\n- System package managers like dpkg, rpm, and yum often modify shell configuration files during software installations or updates. To handle these, exclude processes with executables such as /bin/dpkg or /usr/bin/rpm from triggering alerts.\n- Automated system management tools like Puppet and Chef may alter shell configuration files as part of their routine operations. Exclude these processes by adding exceptions for executables like /opt/puppetlabs/puppet/bin/puppet or /usr/bin/chef-client.\n- User account management activities, such as adding new users, can lead to shell configuration file modifications. Exclude processes like /usr/sbin/adduser or /sbin/useradd to prevent false positives in these scenarios.\n- Temporary files created by text editors (e.g., .swp files) during editing sessions can trigger alerts. Exclude file extensions such as swp, swpx, and swx to avoid these false positives.\n- Virtualization and containerization tools like Docker and Podman may modify shell configuration files as part of their operations. Exclude executables like /usr/bin/dockerd or /usr/bin/podman to manage these cases.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further malicious activity and lateral movement.\n- Review the modified or newly created shell configuration files to identify and remove any unauthorized or malicious code.\n- Restore the affected shell configuration files from a known good backup to ensure the system's environment is clean and secure.\n- Conduct a thorough scan of the system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any additional malware or persistence mechanisms.\n- Monitor the system and network for any signs of re-infection or related suspicious activity, focusing on the indicators of compromise (IOCs) associated with the Kaiji malware family.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.\n- Implement additional monitoring and alerting for changes to shell configuration files to enhance detection of similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate user shell modification activity."],"from":"now-9m","rule_id":"28f6f34b-8e16-487a-b5fd-9d22eb903db8","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1546","name":"Event Triggered Execution","reference":"https://attack.mitre.org/techniques/T1546/","subtechnique":[{"id":"T1546.004","name":"Unix Shell Configuration Modification","reference":"https://attack.mitre.org/techniques/T1546/004/"}]}]}],"to":"now","references":["https://intezer.com/blog/research/kaiji-new-chinese-linux-malware-turning-to-golang/","https://www.elastic.co/security-labs/primer-on-persistence-mechanisms"],"version":8,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"file.Ext.original.extension","type":"unknown","ecs":false},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.file*"],"query":"file where host.os.type == \"linux\" and event.action in (\"rename\", \"creation\") and file.path : (\n  // system-wide configurations\n  \"/etc/profile\", \"/etc/profile.d/*\", \"/etc/bash.bashrc\", \"/etc/bash.bash_logout\", \"/etc/zsh/*\",\n  \"/etc/csh.cshrc\", \"/etc/csh.login\", \"/etc/fish/config.fish\", \"/etc/ksh.kshrc\",\n  // root and user configurations\n  \"/home/*/.profile\", \"/home/*/.bashrc\", \"/home/*/.bash_login\", \"/home/*/.bash_logout\", \"/home/*/.bash_profile\",\n  \"/root/.profile\", \"/root/.bashrc\", \"/root/.bash_login\", \"/root/.bash_logout\", \"/root/.bash_profile\",\n  \"/home/*/.zprofile\", \"/home/*/.zshrc\", \"/root/.zprofile\", \"/root/.zshrc\",\n  \"/home/*/.cshrc\", \"/home/*/.login\", \"/home/*/.logout\", \"/root/.cshrc\", \"/root/.login\", \"/root/.logout\",\n  \"/home/*/.config/fish/config.fish\", \"/root/.config/fish/config.fish\",\n  \"/home/*/.kshrc\", \"/root/.kshrc\"\n) and not (\n  process.executable in (\n    \"/bin/dpkg\", \"/usr/bin/dpkg\", \"/bin/dockerd\", \"/usr/bin/dockerd\", \"/usr/sbin/dockerd\", \"/bin/microdnf\",\n    \"/usr/bin/microdnf\", \"/bin/rpm\", \"/usr/bin/rpm\", \"/bin/snapd\", \"/usr/bin/snapd\", \"/bin/yum\", \"/usr/bin/yum\",\n    \"/bin/dnf\", \"/usr/bin/dnf\", \"/bin/podman\", \"/usr/bin/podman\", \"/bin/dnf-automatic\", \"/usr/bin/dnf-automatic\",\n    \"/bin/pacman\", \"/usr/bin/pacman\", \"/usr/bin/dpkg-divert\", \"/bin/dpkg-divert\", \"/sbin/apk\", \"/usr/sbin/apk\",\n    \"/usr/local/sbin/apk\", \"/usr/bin/apt\", \"/usr/sbin/pacman\", \"/bin/podman\", \"/usr/bin/podman\", \"/usr/bin/puppet\",\n    \"/bin/puppet\", \"/opt/puppetlabs/puppet/bin/puppet\", \"/usr/bin/chef-client\", \"/bin/chef-client\",\n    \"/bin/autossl_check\", \"/usr/bin/autossl_check\", \"/proc/self/exe\", \"/dev/fd/*\",  \"/usr/bin/pamac-daemon\",\n    \"/bin/pamac-daemon\", \"/usr/lib/snapd/snapd\", \"/usr/sbin/adduser\", \"/usr/sbin/useradd\", \"/usr/local/bin/dockerd\",\n    \"/usr/sbin/gdm\", \"/usr/bin/unzip\", \"/usr/bin/gnome-shell\", \"/sbin/mkhomedir_helper\", \"/usr/sbin/sshd\",\n    \"/opt/puppetlabs/puppet/bin/ruby\", \"/usr/bin/xfce4-session\", \"/usr/libexec/oddjob/mkhomedir\", \"/sbin/useradd\",\n    \"/usr/lib/systemd/systemd\", \"/usr/sbin/crond\", \"/usr/bin/pamac-daemon\", \"/usr/sbin/mkhomedir_helper\",\n    \"/opt/pbis/sbin/lwsmd\", \"/usr/sbin/oddjobd\"\n  ) or\n  file.extension in (\"swp\", \"swpx\", \"swx\", \"dpkg-remove\") or\n  file.Ext.original.extension == \"dpkg-new\" or\n  process.executable : (\n    \"/nix/store/*\", \"/var/lib/dpkg/*\", \"/tmp/vmis.*\", \"/snap/*\", \"/dev/fd/*\", \"/usr/lib/virtualbox/*\",\n    \"/usr/libexec/platform-python*\"\n  ) or\n  process.executable == null or\n  process.name in (\"adclient\", \"mkhomedir_helper\", \"teleport\", \"mkhomedir\", \"adduser\", \"desktopDaemon\", \"executor\", \"crio\") or\n  (process.name == \"sed\" and file.name : \"sed*\") or\n  (process.name == \"perl\" and file.name : \"e2scrub_all.tmp*\")\n)\n","actions":[]}
{"id":"7fd313b3-e2be-4beb-9967-ecd210c6df4e","updated_at":"2025-06-15T07:42:37.590Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.597Z","created_by":"elastic","name":"File Creation Time Changed","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies modification of a file creation time. Adversaries may modify file time attributes to blend malicious content with existing files. Timestomping is a technique that modifies the timestamps of a file often to mimic files that are in trusted directories.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating File Creation Time Changed\nFile creation timestamps are crucial for tracking file history and integrity. Adversaries may alter these timestamps, a tactic known as timestomping, to disguise malicious files as benign. This detection rule leverages Sysmon logs to identify suspicious changes in file creation times, excluding trusted processes and file types, thus highlighting potential evasion attempts by attackers.\n\n### Possible investigation steps\n\n- Review the Sysmon logs to confirm the event code 2, which indicates a file creation time change, and verify the associated process and file details.\n- Identify the process executable path that triggered the alert and determine if it is outside the list of trusted paths specified in the query.\n- Check the file extension and name to ensure they are not part of the excluded types such as \"temp\", \"tmp\", or \"LOG\".\n- Investigate the user account associated with the event to determine if it is a non-system account, as the query excludes \"SYSTEM\", \"Local Service\", and \"Network Service\".\n- Correlate the file creation time change event with other security events or logs to identify any related suspicious activities or patterns.\n- Assess the file's location and context to determine if it is in a sensitive or unusual directory that could indicate malicious intent.\n- If necessary, perform a deeper forensic analysis on the file and process to identify any potential malicious behavior or indicators of compromise.\n\n### False positive analysis\n\n- Trusted software updates or installations may alter file creation times. Exclude known update processes like msiexec.exe from detection to reduce noise.\n- System maintenance tasks, such as disk cleanup, can modify timestamps. Exclude cleanmgr.exe to prevent these benign changes from triggering alerts.\n- User-initiated actions in trusted applications like Chrome or Firefox might change file creation times. Exclude these applications to avoid unnecessary alerts.\n- Temporary files created by legitimate processes may have altered timestamps. Exclude file extensions like temp and tmp to minimize false positives.\n- System accounts such as SYSTEM or Local Service may perform legitimate file operations. Exclude these user names to focus on suspicious activities.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further malicious activity and lateral movement by the adversary.\n- Conduct a thorough review of the file in question to determine if it is malicious. Use a combination of antivirus scans and manual analysis to assess the file's behavior and origin.\n- If the file is confirmed to be malicious, remove it from the system and any other locations it may have been copied to. Ensure that all associated processes are terminated.\n- Restore any affected files from a known good backup to ensure data integrity and continuity.\n- Review and update endpoint protection settings to ensure that similar threats are detected and blocked in the future. This may include adjusting Sysmon configurations to enhance logging and detection capabilities.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems have been compromised.\n- Document the incident, including all actions taken, to improve future response efforts and update threat intelligence databases with any new indicators of compromise (IOCs) identified.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"166727ab-6768-4e26-b80c-948b228ffc06","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1070","name":"Indicator Removal","reference":"https://attack.mitre.org/techniques/T1070/","subtechnique":[{"id":"T1070.006","name":"Timestomp","reference":"https://attack.mitre.org/techniques/T1070/006/"}]}]}],"to":"now","references":[],"version":109,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"event.provider","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"user.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-windows.sysmon_operational-*"],"query":"file where host.os.type == \"windows\" and\n  event.provider == \"Microsoft-Windows-Sysmon\" and\n  /* File creation time change */\n  event.code == \"2\" and\n  not process.executable :\n           (\"?:\\\\Program Files\\\\*\",\n            \"?:\\\\Program Files (x86)\\\\*\",\n            \"?:\\\\Windows\\\\system32\\\\cleanmgr.exe\",\n            \"?:\\\\Windows\\\\system32\\\\msiexec.exe\",\n            \"?:\\\\Windows\\\\syswow64\\\\msiexec.exe\",\n            \"?:\\\\Windows\\\\system32\\\\svchost.exe\",\n            \"?:\\\\WINDOWS\\\\system32\\\\backgroundTaskHost.exe\",\n            \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\",\n            \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Mozilla Firefox\\\\firefox.exe\",\n            \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\slack\\\\app-*\\\\slack.exe\",\n            \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\GitHubDesktop\\\\app-*\\\\GitHubDesktop.exe\",\n            \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Microsoft\\\\Teams\\\\current\\\\Teams.exe\",\n            \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Microsoft\\\\OneDrive\\\\OneDrive.exe\") and\n  not file.extension : (\"temp\", \"tmp\", \"~tmp\", \"xml\", \"newcfg\") and not user.name : (\"SYSTEM\", \"Local Service\", \"Network Service\") and\n  not file.name : (\"LOG\", \"temp-index\", \"license.rtf\", \"iconcache_*.db\")\n","actions":[]}
{"id":"5adf7a92-3106-4b99-8601-42f03aef6086","updated_at":"2025-06-15T07:45:21.700Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.477Z","created_by":"elastic","name":"PowerShell Suspicious Payload Encoded and Compressed","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the use of .NET functionality for decompression and base64 decoding combined in PowerShell scripts, which malware and security tools heavily use to deobfuscate payloads and load them directly in memory to bypass defenses.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating PowerShell Suspicious Payload Encoded and Compressed\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nAttackers can embed compressed and encoded payloads in scripts to load directly into the memory without touching the disk. This strategy can circumvent string and file-based security protections.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the script using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately outside engineering or IT business units. As long as the analyst did not identify malware or suspicious activity related to the user or host, this alert can be dismissed.\n\n### Related rules\n\n- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe\n- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d\n- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate PowerShell Scripts which makes use of compression and encoding."],"from":"now-9m","rule_id":"81fe9dc6-a2d7-4192-a2d8-eed98afc766a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1027","name":"Obfuscated Files or Information","reference":"https://attack.mitre.org/techniques/T1027/"},{"id":"T1140","name":"Deobfuscate/Decode Files or Information","reference":"https://attack.mitre.org/techniques/T1140/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":[],"version":317,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    (\n      \"System.IO.Compression.DeflateStream\" or\n      \"System.IO.Compression.GzipStream\" or\n      \"IO.Compression.DeflateStream\" or\n      \"IO.Compression.GzipStream\"\n    ) and\n    FromBase64String\n  ) and\n  not user.id : \"S-1-5-18\"\n","filters":[{"meta":{"negate":true},"query":{"wildcard":{"file.path":{"case_insensitive":true,"value":"?:\\\\ProgramData\\\\Microsoft\\\\Windows Defender Advanced Threat Protection\\\\Downloads\\\\*"}}}}],"actions":[]}
{"id":"7f5d6e9f-a527-4e81-8026-3c908212ca0d","updated_at":"2025-06-15T08:15:47.559Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.161Z","created_by":"elastic","name":"PowerShell Script with Windows Defender Tampering Capabilities","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: PowerShell Logs","Rule Type: BBR"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies PowerShell scripts containing cmdlets and parameters that attackers can abuse to disable Windows Defender features. Attackers can tamper with antivirus to reduce the risk of detection when executing their payloads.","risk_score":21,"severity":"low","building_block_type":"default","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c124dc1b-cef2-4d01-8d74-ff6b0d5096b6","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.001","name":"Disable or Modify Tools","reference":"https://attack.mitre.org/techniques/T1562/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":[],"version":106,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"file.directory","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category: \"process\" and host.os.type:windows and\n(\n  powershell.file.script_block_text: \"Set-MpPreference\" and\n  powershell.file.script_block_text: (\n    DisableArchiveScanning or DisableBehaviorMonitoring or\n    DisableIntrusionPreventionSystem or DisableIOAVProtection or\n    DisableRemovableDriveScanning or DisableBlockAtFirstSeen or\n    DisableScanningMappedNetworkDrivesForFullScan or\n    DisableScanningNetworkFiles or DisableScriptScanning or\n    DisableRealtimeMonitoring or LowThreatDefaultAction or\n    ModerateThreatDefaultAction or HighThreatDefaultAction\n  )\n) and\nnot powershell.file.script_block_text : (\n  (\"cmdletization\" and \"cdxml-Help.xml\") or\n  (\"function Set-MpPreference\" and \"Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.SubmitSamplesConsentType\")\n) and\nnot file.directory : \"C:\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection\\SenseCM\"\n","actions":[]}
{"id":"ed662d5f-6bef-49e0-811a-ecd43fef3162","updated_at":"2025-06-15T07:46:04.828Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.650Z","created_by":"elastic","name":"Potential Process Injection via PowerShell","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Tactic: Execution","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Detects the use of Windows API functions that are commonly abused by malware and security tools to load malicious code or inject it into remote processes.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Process Injection via PowerShell\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nPowerShell also has solid capabilities to make the interaction with the Win32 API in an uncomplicated and reliable way, like the execution of inline C# code, PSReflect, Get-ProcAddress, etc.\n\nRed Team tooling and malware developers take advantage of these capabilities to develop stagers and loaders that inject payloads directly into the memory without touching the disk to circumvent file-based security protections.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Check if the imported function was executed and which process it targeted.\n- Check if the injected code can be retrieved (hardcoded in the script or on command line logs).\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Related rules\n\n- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate PowerShell scripts that make use of these functions."],"from":"now-9m","rule_id":"2e29e96a-b67c-455a-afe4-de6183431d0d","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1055","name":"Process Injection","reference":"https://attack.mitre.org/techniques/T1055/","subtechnique":[{"id":"T1055.001","name":"Dynamic-link Library Injection","reference":"https://attack.mitre.org/techniques/T1055/001/"},{"id":"T1055.002","name":"Portable Executable Injection","reference":"https://attack.mitre.org/techniques/T1055/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]},{"id":"T1106","name":"Native API","reference":"https://attack.mitre.org/techniques/T1106/"}]}],"to":"now","references":["https://github.com/EmpireProject/Empire/blob/master/data/module_source/management/Invoke-PSInject.ps1","https://github.com/EmpireProject/Empire/blob/master/data/module_source/management/Invoke-ReflectivePEInjection.ps1","https://github.com/BC-SECURITY/Empire/blob/master/empire/server/data/module_source/credentials/Invoke-Mimikatz.ps1","https://www.elastic.co/security-labs/detect-credential-access"],"version":215,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"file.directory","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n   (VirtualAlloc or VirtualAllocEx or VirtualProtect or LdrLoadDll or LoadLibrary or LoadLibraryA or\n      LoadLibraryEx or GetProcAddress or OpenProcess or OpenProcessToken or AdjustTokenPrivileges) and\n   (WriteProcessMemory or CreateRemoteThread or NtCreateThreadEx or CreateThread or QueueUserAPC or\n      SuspendThread or ResumeThread or GetDelegateForFunctionPointer)\n  ) and not \n  file.directory: (\n    \"C:\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection\\SenseCM\" or\n    \"C:\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection\\Downloads\"\n  )\n","actions":[]}
{"id":"e599ca2c-0adc-42d1-ae1c-fab48dfe62b2","updated_at":"2025-06-15T07:42:39.589Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:43.070Z","created_by":"elastic","name":"RPC (Remote Procedure Call) to the Internet","tags":["Tactic: Initial Access","Domain: Endpoint","Use Case: Threat Detection","Data Source: PAN-OS","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule detects network events that may indicate the use of RPC traffic to the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating RPC (Remote Procedure Call) to the Internet\n\nRPC enables remote management and resource sharing across networks, crucial for system administration. However, when exposed to the Internet, it becomes a target for attackers seeking initial access or backdoor entry. The detection rule identifies suspicious RPC traffic from internal IPs to external networks, flagging potential exploitation attempts by monitoring specific ports and IP ranges.\n\n### Possible investigation steps\n\n- Review the source IP address from the alert to identify the internal system initiating the RPC traffic. Check if this IP belongs to a known or authorized device within the network.\n- Examine the destination IP address to determine if it is a known or suspicious external entity. Use threat intelligence sources to assess if the IP has been associated with malicious activity.\n- Analyze the network traffic logs for the specific event.dataset values (network_traffic.flow or zeek.dce_rpc) to gather more context about the nature and volume of the RPC traffic.\n- Investigate the destination port, specifically port 135, to confirm if the traffic is indeed RPC-related and assess if there are any legitimate reasons for this communication.\n- Check for any recent changes or anomalies in the network configuration or system settings of the source IP that might explain the unexpected RPC traffic.\n- Correlate this alert with other security events or logs to identify any patterns or additional indicators of compromise that might suggest a broader attack campaign.\n\n### False positive analysis\n\n- Internal testing environments may generate RPC traffic to external IPs for legitimate purposes. Identify and document these environments, then create exceptions in the detection rule to prevent unnecessary alerts.\n- Cloud-based services or applications that require RPC communication for integration or management might trigger false positives. Review these services and whitelist their IP addresses if they are verified as non-threatening.\n- VPN or remote access solutions that use RPC for secure connections can be mistaken for suspicious activity. Ensure that the IP ranges of these solutions are excluded from the rule to avoid false alerts.\n- Automated backup or synchronization tools that use RPC to communicate with external servers could be flagged. Verify these tools and add their destination IPs to an exception list if they are part of routine operations.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.\n- Conduct a thorough analysis of the affected system to identify any unauthorized changes or installed backdoors, focusing on processes and services related to RPC.\n- Revoke any compromised credentials and enforce a password reset for all accounts that may have been accessed or used during the incident.\n- Apply necessary patches and updates to the affected system and any other systems with similar vulnerabilities to mitigate the risk of exploitation.\n- Monitor network traffic for any signs of lateral movement or additional suspicious activity, particularly focusing on RPC-related traffic.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement enhanced logging and monitoring for RPC traffic to detect and respond to similar threats more effectively in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"32923416-763a-4531-bb35-f33b9232ecdb","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1190","name":"Exploit Public-Facing Application","reference":"https://attack.mitre.org/techniques/T1190/"}]}],"to":"now","references":["https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"network_traffic","version":"^1.1.0"},{"package":"panw","version":"^5.0.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true}],"setup":"","type":"query","language":"kuery","index":["packetbeat-*","auditbeat-*","filebeat-*","logs-network_traffic.*","logs-panw.panos*"],"query":"(event.dataset: network_traffic.flow or (event.category: (network or network_traffic))) and\n  network.transport:tcp and (destination.port:135 or event.dataset:zeek.dce_rpc) and\n  source.ip:(\n    10.0.0.0/8 or\n    172.16.0.0/12 or\n    192.168.0.0/16\n  ) and\n  not destination.ip:(\n    10.0.0.0/8 or\n    127.0.0.0/8 or\n    169.254.0.0/16 or\n    172.16.0.0/12 or\n    192.0.0.0/24 or\n    192.0.0.0/29 or\n    192.0.0.8/32 or\n    192.0.0.9/32 or\n    192.0.0.10/32 or\n    192.0.0.170/32 or\n    192.0.0.171/32 or\n    192.0.2.0/24 or\n    192.31.196.0/24 or\n    192.52.193.0/24 or\n    192.168.0.0/16 or\n    192.88.99.0/24 or\n    224.0.0.0/4 or\n    100.64.0.0/10 or\n    192.175.48.0/24 or\n    198.18.0.0/15 or\n    198.51.100.0/24 or\n    203.0.113.0/24 or\n    240.0.0.0/4 or\n    \"::1\" or\n    \"FE80::/10\" or\n    \"FF00::/8\"\n  )\n","actions":[]}
{"id":"a863b25e-92a2-4b5b-98fd-f726a6d65323","updated_at":"2025-06-15T07:42:39.604Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:45.113Z","created_by":"elastic","name":"VNC (Virtual Network Computing) from the Internet","tags":["Tactic: Command and Control","Domain: Endpoint","Use Case: Threat Detection","Data Source: PAN-OS","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule detects network events that may indicate the use of VNC traffic from the Internet. VNC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating VNC (Virtual Network Computing) from the Internet\n\nVNC allows remote control of systems, facilitating maintenance and resource sharing. However, when exposed to the Internet, it becomes a target for attackers seeking unauthorized access. Adversaries exploit VNC for initial access or as a backdoor. The detection rule identifies suspicious VNC traffic by monitoring specific TCP ports and filtering out trusted IP ranges, flagging potential threats for further investigation.\n\n### Possible investigation steps\n\n- Review the source IP address of the alert to determine if it is from an untrusted or suspicious location, as the rule filters out known trusted IP ranges.\n- Check the destination IP address to confirm it belongs to an internal network (10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16) and verify if the system is authorized to receive VNC traffic.\n- Analyze the network traffic logs for the specified TCP ports (5800-5810) to identify any unusual patterns or repeated access attempts that could indicate malicious activity.\n- Investigate the context of the event by correlating it with other security alerts or logs to determine if there are signs of a broader attack or compromise.\n- Assess the risk and impact of the potential threat by evaluating the criticality of the affected system and any sensitive data it may contain.\n\n### False positive analysis\n\n- Internal testing or maintenance activities may trigger the rule if VNC is used for legitimate purposes within a controlled environment. To manage this, create exceptions for known internal IP addresses that frequently use VNC for authorized tasks.\n- Automated systems or scripts that utilize VNC for routine operations might be flagged. Identify these systems and exclude their IP addresses from the rule to prevent unnecessary alerts.\n- Remote workers using VPNs that route traffic through public IPs could be mistakenly identified as threats. Ensure that VPN IP ranges are included in the trusted IP list to avoid false positives.\n- Misconfigured network devices that inadvertently expose VNC ports to the Internet can cause alerts. Regularly audit network configurations to ensure VNC ports are not exposed and adjust the rule to exclude known safe configurations.\n- Third-party service providers accessing systems via VNC for support purposes might be flagged. Establish a list of trusted IPs for these providers and update the rule to exclude them from detection.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any active VNC sessions originating from untrusted IP addresses to cut off potential attacker access.\n- Conduct a thorough review of system logs and network traffic to identify any unauthorized changes or data access that may have occurred during the VNC session.\n- Reset credentials for any accounts that were accessed or could have been compromised during the unauthorized VNC session.\n- Apply security patches and updates to the VNC software and any other potentially vulnerable applications on the affected system.\n- Implement network segmentation to ensure that VNC services are only accessible from trusted internal networks and not exposed to the Internet.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems may be affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["VNC connections may be received directly to Linux cloud server instances but such connections are usually made only by engineers. VNC is less common than SSH or RDP but may be required by some work-flows such as remote access and support for specialized software products or servers. Such work-flows are usually known and not unexpected. Usage that is unfamiliar to server or network owners can be unexpected and suspicious."],"from":"now-9m","rule_id":"5700cb81-df44-46aa-a5d7-337798f53eb8","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1219","name":"Remote Access Tools","reference":"https://attack.mitre.org/techniques/T1219/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1190","name":"Exploit Public-Facing Application","reference":"https://attack.mitre.org/techniques/T1190/"}]}],"to":"now","references":["https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml"],"version":109,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"network_traffic","version":"^1.1.0"},{"package":"panw","version":"^5.0.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true}],"setup":"","type":"query","language":"kuery","index":["packetbeat-*","auditbeat-*","filebeat-*","logs-network_traffic.*","logs-panw.panos*"],"query":"(event.dataset: network_traffic.flow or (event.category: (network or network_traffic))) and\n  network.transport:tcp and destination.port >= 5800 and destination.port <= 5810 and\n  not source.ip:(\n    10.0.0.0/8 or\n    127.0.0.0/8 or\n    169.254.0.0/16 or\n    172.16.0.0/12 or\n    192.0.0.0/24 or\n    192.0.0.0/29 or\n    192.0.0.8/32 or\n    192.0.0.9/32 or\n    192.0.0.10/32 or\n    192.0.0.170/32 or\n    192.0.0.171/32 or\n    192.0.2.0/24 or\n    192.31.196.0/24 or\n    192.52.193.0/24 or\n    192.168.0.0/16 or\n    192.88.99.0/24 or\n    224.0.0.0/4 or\n    100.64.0.0/10 or\n    192.175.48.0/24 or\n    198.18.0.0/15 or\n    198.51.100.0/24 or\n    203.0.113.0/24 or\n    240.0.0.0/4 or\n    \"::1\" or\n    \"FE80::/10\" or\n    \"FF00::/8\"\n  ) and\n  destination.ip:(\n    10.0.0.0/8 or\n    172.16.0.0/12 or\n    192.168.0.0/16\n  )\n","actions":[]}
{"id":"539761d1-e43b-4990-a794-8940fb2b58ce","updated_at":"2025-06-15T07:42:43.611Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.660Z","created_by":"elastic","name":"Potential Antimalware Scan Interface Bypass via PowerShell","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the execution of PowerShell script with keywords related to different Antimalware Scan Interface (AMSI) bypasses. An adversary may attempt first to disable AMSI before executing further malicious powershell scripts to evade detection.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Antimalware Scan Interface Bypass via PowerShell\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nThe Windows Antimalware Scan Interface (AMSI) is a versatile interface standard that allows your applications and services to integrate with any antimalware product on a machine. AMSI integrates with multiple Windows components, ranging from User Account Control (UAC) to VBA macros and PowerShell.\n\nThis rule identifies scripts that contain methods and classes that can be abused to bypass AMSI.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Determine whether the script was executed and capture relevant information, such as arguments that reveal intent or are indicators of compromise (IoCs).\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate commands and scripts executed after this activity was observed.\n- Inspect the host for suspicious or abnormal behavior in the alert timeframe:\n  - Observe and collect information about the following activities in the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"1f0a69c0-3392-4adf-b7d5-6012fd292da8","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.001","name":"Disable or Modify Tools","reference":"https://attack.mitre.org/techniques/T1562/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://github.com/S3cur3Th1sSh1t/Amsi-Bypass-Powershell"],"version":115,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:\"process\" and host.os.type:windows and\n  (\n    powershell.file.script_block_text : (\n      \"System.Management.Automation.AmsiUtils\" or\n\t\t\tamsiInitFailed or \n\t\t\t\"Invoke-AmsiBypass\" or \n\t\t\t\"Bypass.AMSI\" or \n\t\t\t\"amsi.dll\" or \n\t\t\tAntimalwareProvider  or \n\t\t\tamsiSession or \n\t\t\tamsiContext or\n\t\t\tAmsiInitialize or \n\t\t\tunloadobfuscated or \n\t\t\tunloadsilent or \n\t\t\tAmsiX64 or \n\t\t\tAmsiX32 or \n\t\t\tFindAmsiFun or\n\t\t    \"AllocHGlobal((9076\" or\n\t\t    \"[cHAr](65)+[cHaR]([byTe]0x6d)+[ChaR]([ByTe]0x73)+[CHaR]([BYte]0x69\"\n    ) or\n    powershell.file.script_block_text:(\"[Ref].Assembly.GetType(('System.Management.Automation\" and \".SetValue(\") or\n    powershell.file.script_block_text:(\"::AllocHGlobal((\" and \".SetValue(\" and \"-replace\" and \".NoRMALiZe(\")\n  ) and\n  not powershell.file.script_block_text : (\n    \"sentinelbreakpoints\" and \"Set-PSBreakpoint\"\n  )\n","actions":[]}
{"id":"29f5c891-0e13-4960-b31f-9ad399a1e826","updated_at":"2025-06-15T07:42:43.610Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.516Z","created_by":"elastic","name":"Potential PowerShell Pass-the-Hash/Relay Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Detects PowerShell scripts that can execute pass-the-hash (PtH) attacks, intercept and relay NTLM challenges, and carry out other man-in-the-middle (MitM) attacks.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential PowerShell Pass-the-Hash/Relay Script\n\nPowerShell is a powerful scripting language used for task automation and configuration management in Windows environments. Adversaries exploit PowerShell to perform pass-the-hash attacks, where they use stolen hashed credentials to authenticate without knowing the actual password. The detection rule identifies scripts attempting to execute such attacks by monitoring for specific NTLM negotiation patterns and hex sequences indicative of credential relay activities, while excluding legitimate system processes.\n\n### Possible investigation steps\n\n- Review the PowerShell script block text associated with the alert to identify any suspicious patterns or hex sequences, such as \"NTLMSSPNegotiate\" or specific hex values like \"4E544C4D53535000\".\n- Check the process execution details, including the parent process and command line arguments, to determine if the script was executed by a legitimate user or process.\n- Investigate the source and destination IP addresses involved in the NTLM negotiation to identify any unusual or unauthorized network activity.\n- Examine the user account associated with the process to verify if it has been compromised or if there are any signs of unauthorized access.\n- Correlate the alert with other security events or logs, such as Windows Event Logs or network traffic logs, to gather additional context and identify potential lateral movement or further compromise.\n- Assess the file directory from which the script was executed, ensuring it is not a known safe location like \"C:\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection\\Downloads\", which is excluded in the query.\n\n### False positive analysis\n\n- Legitimate system processes may occasionally trigger the rule if they perform operations that mimic NTLM negotiation patterns. To manage this, users can create exceptions for specific processes known to be safe by excluding their file paths or hashes.\n- Security tools or network monitoring solutions that perform NTLM authentication checks might generate false positives. Users should identify these tools and exclude their associated scripts or directories from the detection rule.\n- Automated scripts for system administration that involve NTLM authentication could be flagged. Review these scripts and, if verified as safe, add them to an exclusion list based on their directory or script block text.\n- PowerShell scripts used for legitimate penetration testing or security assessments may trigger alerts. Ensure these activities are documented and exclude the relevant scripts or directories during the testing period.\n- Regular updates or patches from Microsoft might include scripts that temporarily match the detection criteria. Monitor updates and adjust exclusions as necessary to prevent false positives from these legitimate updates.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further credential relay or unauthorized access.\n- Terminate any suspicious PowerShell processes identified by the detection rule to halt ongoing malicious activities.\n- Conduct a thorough review of recent authentication logs and network traffic from the isolated system to identify any lateral movement or additional compromised accounts.\n- Reset passwords for any accounts suspected to be compromised, ensuring that new credentials are not reused or easily guessable.\n- Apply patches and updates to the affected system and any other vulnerable systems to mitigate known exploits used in pass-the-hash attacks.\n- Implement network segmentation to limit the spread of similar attacks in the future, focusing on restricting access to critical systems and sensitive data.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"951779c2-82ad-4a6c-82b8-296c1f691449","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1557","name":"Adversary-in-the-Middle","reference":"https://attack.mitre.org/techniques/T1557/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1550","name":"Use Alternate Authentication Material","reference":"https://attack.mitre.org/techniques/T1550/","subtechnique":[{"id":"T1550.002","name":"Pass the Hash","reference":"https://attack.mitre.org/techniques/T1550/002/"}]}]}],"to":"now","references":["https://github.com/Kevin-Robertson/Invoke-TheHash/blob/master/Invoke-WMIExec.ps1","https://github.com/Kevin-Robertson/Invoke-TheHash/blob/master/Invoke-SMBExec.ps1","https://github.com/dafthack/Check-LocalAdminHash/blob/master/Check-LocalAdminHash.ps1","https://github.com/nettitude/PoshC2/blob/master/resources/modules/Invoke-Tater.ps1","https://github.com/Kevin-Robertson/Inveigh/blob/master/Inveigh.ps1"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"file.directory","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    (\"NTLMSSPNegotiate\" and (\"NegotiateSMB\" or \"NegotiateSMB2\")) or\n    \"4E544C4D53535000\" or\n    \"0x4e,0x54,0x4c,0x4d,0x53,0x53,0x50\" or\n    \"0x4e,0x54,0x20,0x4c,0x4d\" or\n    \"0x53,0x4d,0x42,0x20,0x32\" or\n    \"0x81,0xbb,0x7a,0x36,0x44,0x98,0xf1,0x35,0xad,0x32,0x98,0xf0,0x38\"\n  ) and\n  not file.directory : \"C:\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection\\Downloads\"\n","actions":[]}
{"id":"877a99d3-67fb-4c86-b325-b9e9fa910a55","updated_at":"2025-06-15T07:42:43.618Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:51.364Z","created_by":"elastic","name":"SMB Connections via LOLBin or Untrusted Process","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies potentially suspicious processes that are not trusted or living-off-the-land binaries (LOLBin) making Server Message Block (SMB) network connections over port 445. Windows File Sharing is typically implemented over SMB, which communicates between hosts using port 445. Legitimate connections are generally established by the kernel (PID 4). This rule helps to detect processes that might be port scanners, exploits, or user-level processes attempting lateral movement within the network by leveraging SMB connections.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Performance\n\nThis rule may have low to medium performance impact due to filtering for LOLBins processes starting, followed by network connections over port 445. Additional filtering is applied to reduce the volume of matching events and improve performance.\n\n### Investigating SMB Connections via LOLBin or Untrusted Process\n\nThis rule looks for unexpected processes or LOLBins making network connections over port 445. Windows file sharing is typically implemented over Server Message Block (SMB), which communicates between hosts using port 445. When legitimate, these network connections are established by the kernel (PID 4). Occurrences of non-system processes using this port can indicate port scanners, exploits, and tools used to move laterally on the environment.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications, and any spawned child processes.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n\n### False positive analysis\n\n- If this rule is noisy in your environment due to expected activity, consider adding exceptions — preferably with a combination of user and command line conditions.\n- In hybrid environments, SMB may be used for legitimate purposes if operations are performed in Azure. In such cases, consider adding exceptions for known Azure services and operations.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c82c7d8f-fb9e-4874-a4bd-fd9e3f9becf1","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.002","name":"SMB/Windows Admin Shares","reference":"https://attack.mitre.org/techniques/T1021/002/"}]}]}],"to":"now","references":["https://www.elastic.co/security-labs/elastic-protects-against-data-wiper-malware-targeting-ukraine-hermeticwiper","https://www.elastic.co/security-labs/hunting-for-lateral-movement-using-event-query-language"],"version":116,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.port","type":"long","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.network-*"],"query":"sequence by process.entity_id with maxspan=1m\n\n  /* first sequence to capture the start of Windows processes */\n  [process where host.os.type == \"windows\" and event.type == \"start\" and process.pid != 4 and\n\n    /* ignore NT Authority and Network Service accounts */\n    not user.id in (\"S-1-5-19\", \"S-1-5-20\") and\n\n    /* filter out anything trusted but not from Microsoft */\n    /* LOLBins will be inherently trusted and signed, so ignore everything else trusted */\n    not (process.code_signature.trusted == true and not startsWith(process.code_signature.subject_name, \"Microsoft\")) and\n\n    /* filter out PowerShell scripts from Windows Defender ATP */\n    not (\n      process.name : \"powershell.exe\" and\n      process.args :\"?:\\\\ProgramData\\\\Microsoft\\\\Windows Defender Advanced Threat Protection\\\\Downloads\\\\PSScript_*.ps1\")]\n\n  /* second sequence to capture network connections over port 445 related to SMB */\n  [network where host.os.type == \"windows\" and destination.port == 445 and process.pid != 4]\n","actions":[]}
{"id":"46bb8654-40d7-4e38-8d48-40d335c7dc7f","updated_at":"2025-06-15T07:42:41.618Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.929Z","created_by":"elastic","name":"Privilege Escalation via Windir Environment Variable","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies a privilege escalation attempt via a rogue Windows directory (Windir) environment variable. This is a known primitive that is often combined with other vulnerabilities to elevate privileges.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Privilege Escalation via Windir Environment Variable\n\nThe Windir environment variable points to the Windows directory, crucial for system operations. Adversaries may alter this variable to redirect processes to malicious directories, gaining elevated privileges. The detection rule monitors changes to this variable in the registry, flagging deviations from expected paths like \"C:\\windows,\" thus identifying potential privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the registry change event details to identify the specific user account associated with the altered Windir or SystemRoot environment variable. This can be done by examining the registry path and user context in the event data.\n- Check the registry data strings to determine the new path set for the Windir or SystemRoot variable. Investigate if this path points to a known malicious directory or an unexpected location.\n- Correlate the event with other recent registry changes or system events on the same host to identify any patterns or additional suspicious activities that might indicate a broader attack.\n- Investigate the process or application that initiated the registry change by reviewing process creation logs or command-line arguments around the time of the event. This can help identify the source of the change.\n- Assess the affected system for any signs of compromise or unauthorized access, such as unusual network connections, unexpected running processes, or new user accounts.\n- Consult threat intelligence sources to determine if the observed behavior matches any known attack patterns or campaigns, particularly those involving privilege escalation techniques.\n- If possible, restore the Windir or SystemRoot environment variable to its expected value and monitor the system for any further unauthorized changes.\n\n### False positive analysis\n\n- System updates or patches may temporarily alter the Windir environment variable. Monitor for these events during known maintenance windows and consider excluding them from alerts.\n- Custom scripts or applications that modify environment variables for legitimate purposes can trigger false positives. Identify these scripts and whitelist their activity in the detection rule.\n- User profile migrations or system restorations might change the Windir path. Exclude these operations if they are part of routine IT processes.\n- Virtual environments or sandboxed applications may use different Windir paths. Verify these environments and adjust the detection rule to accommodate their specific configurations.\n- Administrative tools that modify user environments for configuration management can cause alerts. Document these tools and create exceptions for their expected behavior.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Revert the Windir environment variable to its legitimate value, typically \"C:\\windows\", to restore normal system operations.\n- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to identify and remove any malicious software or scripts.\n- Review recent user activity and system logs to identify any unauthorized access or changes, focusing on the time frame around the detected registry change.\n- Reset passwords for any user accounts that may have been compromised, especially those with elevated privileges.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring on the affected system and similar endpoints to detect any further attempts to alter critical environment variables or other suspicious activities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"d563aaba-2e72-462b-8658-3e5ea22db3a6","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1574","name":"Hijack Execution Flow","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.007","name":"Path Interception by PATH Environment Variable","reference":"https://attack.mitre.org/techniques/T1574/007/"}]}]}],"to":"now","references":["https://www.tiraniddo.dev/2017/05/exploiting-environment-variables-in.html"],"version":311,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true},{"name":"registry.path","type":"keyword","ecs":true},{"name":"registry.value","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*","endgame-*","logs-windows.sysmon_operational-*","winlogbeat-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*"],"query":"registry where host.os.type == \"windows\" and event.type == \"change\" and\nregistry.value : (\"windir\", \"systemroot\") and\nregistry.path : (\n    \"HKEY_USERS\\\\*\\\\Environment\\\\windir\",\n    \"HKEY_USERS\\\\*\\\\Environment\\\\systemroot\",\n    \"HKU\\\\*\\\\Environment\\\\windir\",\n    \"HKU\\\\*\\\\Environment\\\\systemroot\",\n    \"HKCU\\\\*\\\\Environment\\\\windir\",\n    \"HKCU\\\\*\\\\Environment\\\\systemroot\",\n    \"\\\\REGISTRY\\\\USER\\\\*\\\\Environment\\\\windir\",\n    \"\\\\REGISTRY\\\\USER\\\\*\\\\Environment\\\\systemroot\",\n    \"USER\\\\*\\\\Environment\\\\windir\",\n    \"USER\\\\*\\\\Environment\\\\systemroot\"\n    ) and\n not registry.data.strings : (\"C:\\\\windows\", \"%SystemRoot%\")\n","actions":[]}
{"id":"b5471d04-5945-4b06-8bd7-1b98c3085344","updated_at":"2025-06-15T07:42:41.617Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:38.962Z","created_by":"elastic","name":"LSASS Memory Dump Creation","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Endgame","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the creation of a Local Security Authority Subsystem Service (lsass.exe) default memory dump. This may indicate a credential access attempt via trusted system utilities such as Task Manager (taskmgr.exe) and SQL Dumper (sqldumper.exe) or known pentesting tools such as Dumpert and AndrewSpecial.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating LSASS Memory Dump Creation\n\nLocal Security Authority Server Service (LSASS) is a process in Microsoft Windows operating systems that is responsible for enforcing security policy on the system. It verifies users logging on to a Windows computer or server, handles password changes, and creates access tokens.\n\nThis rule looks for the creation of memory dump files with file names compatible with credential dumping tools or that start with `lsass`.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Identify the process responsible for creating the dump file.\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious must be monitored by the security team.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timeline_id":"4d4c0b59-ea83-483f-b8c1-8c360ee53c5c","timeline_title":"Comprehensive File Timeline","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"f2f46686-6f3c-4724-bd7d-24e31c70f98f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"to":"now","references":["https://github.com/outflanknl/Dumpert","https://github.com/hoangprod/AndrewSpecial"],"version":314,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.file-*","logs-windows.sysmon_operational-*","endgame-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*"],"query":"file where host.os.type == \"windows\" and event.action != \"deletion\" and\n  file.name : (\"lsass*.dmp\", \"dumpert.dmp\", \"Andrew.dmp\", \"SQLDmpr*.mdmp\", \"Coredump.dmp\") and\n\n  not (\n        process.executable : (\n          \"?:\\\\Program Files\\\\Microsoft SQL Server\\\\*\\\\Shared\\\\SqlDumper.exe\",\n          \"?:\\\\Program Files\\\\Microsoft SQL Server Reporting Services\\\\SSRS\\\\ReportServer\\\\bin\\\\SqlDumper.exe\",\n          \"?:\\\\Windows\\\\System32\\\\dllhost.exe\"\n        ) and\n        file.path : (\n          \"?:\\\\*\\\\Reporting Services\\\\Logfiles\\\\SQLDmpr*.mdmp\",\n          \"?:\\\\Program Files\\\\Microsoft SQL Server Reporting Services\\\\SSRS\\\\Logfiles\\\\SQLDmpr*.mdmp\",\n          \"?:\\\\Program Files\\\\Microsoft SQL Server\\\\*\\\\Shared\\\\ErrorDumps\\\\SQLDmpr*.mdmp\",\n          \"?:\\\\Program Files\\\\Microsoft SQL Server\\\\*\\\\MSSQL\\\\LOG\\\\SQLDmpr*.mdmp\"\n        )\n      ) and\n\n  not (\n        process.executable : (\n          \"?:\\\\Windows\\\\system32\\\\WerFault.exe\",\n          \"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\"\n          ) and\n        file.path : (\n          \"?:\\\\Windows\\\\System32\\\\config\\\\systemprofile\\\\AppData\\\\Local\\\\CrashDumps\\\\lsass.exe.*.dmp\",\n          \"?:\\\\Windows\\\\System32\\\\%LOCALAPPDATA%\\\\CrashDumps\\\\lsass.exe.*.dmp\"\n        )\n  )\n","actions":[]}
{"id":"0213cca4-ceaf-4ec0-92e5-8fd3e3439a6e","updated_at":"2025-06-15T07:42:39.585Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:54.405Z","created_by":"elastic","name":"Potential Remote Code Execution via Web Server","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Persistence","Tactic: Initial Access","Data Source: Elastic Endgame","Use Case: Vulnerability","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: SentinelOne"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious commands executed via a web server, which may suggest a vulnerability and remote shell access. Attackers may exploit a vulnerability in a web application to execute commands via a web server, or place a backdoor file that can be abused to gain code execution as a mechanism for persistence.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Remote Code Execution via Web Server\n\nAdversaries may backdoor web servers with web shells to establish persistent access to systems. A web shell is a malicious script, often embedded into a compromised web server, that grants an attacker remote access and control over the server. This enables the execution of arbitrary commands, data exfiltration, and further exploitation of the target network.\n\nThis rule detects a web server process spawning script and command line interface programs, potentially indicating attackers executing commands using the web shell.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n> This investigation guide uses [placeholder fields](https://www.elastic.co/guide/en/security/current/osquery-placeholder-fields.html) to dynamically pass alert data into Osquery queries. Placeholder fields were introduced in Elastic Stack version 8.7.0. If you're using Elastic Stack version 8.6.0 or earlier, you'll need to manually adjust this investigation guide's queries to ensure they properly run.\n\n#### Possible investigation steps\n\n- Investigate abnormal behaviors by the subject process such as network connections, file modifications, and any other spawned child processes.\n  - Investigate listening ports and open sockets to look for potential reverse shells or data exfiltration.\n    - !{osquery{\"label\":\"Osquery - Retrieve Listening Ports\",\"query\":\"SELECT pid, address, port, socket, protocol, path FROM listening_ports\"}}\n    - !{osquery{\"label\":\"Osquery - Retrieve Open Sockets\",\"query\":\"SELECT pid, family, remote_address, remote_port, socket, state FROM process_open_sockets\"}}\n  - Investigate the process information for malicious or uncommon processes/process trees.\n    - !{osquery{\"label\":\"Osquery - Retrieve Process Info\",\"query\":\"SELECT name, cmdline, parent, path, uid FROM processes\"}}\n  - Investigate the process tree spawned from the user that is used to run the web application service. A user that is running a web application should not spawn other child processes.\n    - !{osquery{\"label\":\"Osquery - Retrieve Process Info for Webapp User\",\"query\":\"SELECT name, cmdline, parent, path, uid FROM processes WHERE uid = {{process.user.id}}\"}}\n- Examine the command line to determine which commands or scripts were executed.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- If scripts or executables were dropped, retrieve the files and determine if they are malicious:\n  - Use a private sandboxed malware analysis system to perform analysis.\n    - Observe and collect information about the following activities:\n      - Attempts to contact external domains and addresses.\n        - Check if the domain is newly registered or unexpected.\n        - Check the reputation of the domain or IP address.\n      - File access, modification, and creation activities.\n      - Cron jobs, services and other persistence mechanisms.\n        - !{osquery{\"label\":\"Osquery - Retrieve Crontab Information\",\"query\":\"SELECT * FROM crontab\"}}\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious must be monitored by the security team.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Leverage the incident response data and logging to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Network monitoring or management products may have a web server component that runs shell commands as part of normal behavior."],"from":"now-9m","rule_id":"f16fca20-4d6c-43f9-aec1-20b6de3b0aeb","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1505","name":"Server Software Component","reference":"https://attack.mitre.org/techniques/T1505/","subtechnique":[{"id":"T1505.003","name":"Web Shell","reference":"https://attack.mitre.org/techniques/T1505/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1190","name":"Exploit Public-Facing Application","reference":"https://attack.mitre.org/techniques/T1190/"}]}],"to":"now","references":["https://pentestlab.blog/tag/web-shell/","https://www.elastic.co/security-labs/elastic-response-to-the-the-spring4shell-vulnerability-cve-2022-22965"],"version":111,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["endgame-*","logs-endpoint.events.process*","logs-sentinel_one_cloud_funnel.*"],"query":"process where host.os.type == \"linux\" and event.type == \"start\" and\nevent.action in (\"exec\", \"exec_event\", \"start\") and process.parent.executable : (\n  \"/usr/sbin/nginx\", \"/usr/local/sbin/nginx\",\n  \"/usr/sbin/apache\", \"/usr/local/sbin/apache\",\n  \"/usr/sbin/apache2\", \"/usr/local/sbin/apache2\",\n  \"/usr/sbin/php*\", \"/usr/local/sbin/php*\",\n  \"/usr/sbin/lighttpd\", \"/usr/local/sbin/lighttpd\",\n  \"/usr/sbin/hiawatha\", \"/usr/local/sbin/hiawatha\",\n  \"/usr/local/bin/caddy\", \n  \"/usr/local/lsws/bin/lswsctrl\",\n  \"*/bin/catalina.sh\"\n) and\nprocess.name : (\n  \"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\", \"python*\", \"php*\", \"perl\", \"ruby\", \"lua*\", \"openssl\", \"nc\",\n  \"netcat\", \"ncat\", \"telnet\", \"awk\", \"socat\"\n  ) and process.args : (\n  \"whoami\", \"id\", \"uname\", \"cat\", \"hostname\", \"ip\", \"curl\", \"wget\", \"pwd\", \"ls\", \"cd\", \"python*\", \"php*\", \"perl\",\n  \"ruby\", \"lua*\", \"openssl\", \"nc\", \"netcat\", \"ncat\", \"telnet\", \"awk\", \"socat\"\n  ) and not process.name == \"phpquery\"\n","actions":[]}
{"id":"cc7a0b34-91e6-4605-a1a3-5c2e2df7841a","updated_at":"2025-06-15T07:42:43.620Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.614Z","created_by":"elastic","name":"Lateral Movement via Startup Folder","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious file creations in the startup folder of a remote system. An adversary could abuse this to move laterally by dropping a malicious script or executable that will be executed after a reboot or user logon.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Lateral Movement via Startup Folder\n\nThe Windows Startup folder is a mechanism that allows programs to run automatically upon user logon or system reboot. Adversaries exploit this by placing malicious files in the Startup folder of remote systems, often accessed via RDP or SMB, to ensure persistence and facilitate lateral movement. The detection rule identifies suspicious file activities in these folders, focusing on processes like mstsc.exe, which may indicate unauthorized access and file creation, signaling potential lateral movement attempts.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the file creation or change event in the specified Startup folder paths, focusing on the file path patterns: \"?:\\\\Users\\\\*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\*\" and \"?:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\*\".\n- Check the process information associated with the event, particularly if the process name is \"mstsc.exe\" or if the process ID is 4, to determine if the activity is linked to remote access via RDP or SMB.\n- Investigate the origin of the remote connection by examining network logs or RDP session logs to identify the source IP address and user account involved in the connection.\n- Analyze the newly created or modified file in the Startup folder for malicious characteristics, such as unusual file names, unexpected file types, or known malware signatures, using antivirus or sandbox analysis tools.\n- Review user account activity and permissions to determine if the account associated with the process has been compromised or is being misused for unauthorized access.\n- Correlate this event with other security alerts or logs from data sources like Sysmon, Microsoft Defender for Endpoint, or SentinelOne to identify any related suspicious activities or patterns indicating lateral movement attempts.\n\n### False positive analysis\n\n- Legitimate software installations or updates may create files in the Startup folder, triggering the rule. Users can manage this by maintaining a list of known software that typically modifies the Startup folder and creating exceptions for these processes.\n- System administrators using remote desktop tools like mstsc.exe for legitimate purposes might inadvertently trigger the rule. To handle this, users can exclude specific administrator accounts or known IP addresses from the detection rule.\n- Automated scripts or system management tools that deploy updates or configurations across multiple systems might cause false positives. Users should identify these tools and add them to an exclusion list to prevent unnecessary alerts.\n- Some enterprise applications may use the Startup folder for legitimate operations, especially during system boot or user logon. Users should document these applications and configure the rule to ignore file changes associated with them.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further lateral movement and potential spread of the threat.\n- Terminate any suspicious processes, particularly those related to mstsc.exe or any unauthorized processes with PID 4, to halt any ongoing malicious activities.\n- Remove any unauthorized files or scripts found in the Startup folder paths specified in the detection query to prevent them from executing on reboot or user logon.\n- Conduct a thorough scan of the affected system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any additional malicious files or remnants.\n- Review and reset credentials for any accounts that were accessed or potentially compromised during the incident to prevent unauthorized access.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring and logging for RDP and SMB activities, focusing on unusual file creation events in Startup folders, to improve detection of similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"25224a80-5a4a-4b8a-991e-6ab390465c4f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.001","name":"Remote Desktop Protocol","reference":"https://attack.mitre.org/techniques/T1021/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1547","name":"Boot or Logon Autostart Execution","reference":"https://attack.mitre.org/techniques/T1547/","subtechnique":[{"id":"T1547.001","name":"Registry Run Keys / Startup Folder","reference":"https://attack.mitre.org/techniques/T1547/001/"}]}]}],"to":"now","references":["https://www.mdsec.co.uk/2017/06/rdpinception/","https://www.elastic.co/security-labs/hunting-for-lateral-movement-using-event-query-language"],"version":312,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.file-*","winlogbeat-*","logs-windows.sysmon_operational-*","endgame-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*"],"query":"file where host.os.type == \"windows\" and event.type in (\"creation\", \"change\") and\n\n /* via RDP TSClient mounted share or SMB */\n  (process.name : \"mstsc.exe\" or process.pid == 4) and\n\n   file.path : (\"?:\\\\Users\\\\*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\*\",\n                \"?:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\*\")\n","actions":[]}
{"id":"92d00c94-f9e3-4c23-9379-00c02a7dfec2","updated_at":"2025-06-15T07:42:41.602Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.177Z","created_by":"elastic","name":"PowerShell PSReflect Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Detects the use of PSReflect in PowerShell scripts. Attackers leverage PSReflect as a library that enables PowerShell to access win32 API functions.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating PowerShell PSReflect Script\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nPSReflect is a library that enables PowerShell to access win32 API functions in an uncomplicated way. It also helps to create enums and structs easily—all without touching the disk.\n\nAlthough this is an interesting project for every developer and admin out there, it is mainly used in the red team and malware tooling for its capabilities.\n\nDetecting the core implementation of PSReflect means detecting most of the tooling that uses Windows API through PowerShell, enabling defenders to discover tools being dropped in the environment.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics. The script content that may be split into multiple script blocks (you can use the field `powershell.file.script_block_id` for filtering).\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Check for additional PowerShell and command-line logs that indicate that imported functions were run.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the script using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Related rules\n\n- PowerShell Suspicious Discovery Related Windows API Functions - 61ac3638-40a3-44b2-855a-985636ca985e\n- PowerShell Keylogging Script - bd2c86a0-8b61-4457-ab38-96943984e889\n- PowerShell Suspicious Script with Audio Capture Capabilities - 2f2f4939-0b34-40c2-a0a3-844eb7889f43\n- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d\n- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad\n- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a\n- PowerShell Suspicious Script with Screenshot Capabilities - 959a7353-1129-4aa7-9084-30746b256a70\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate PowerShell scripts that make use of PSReflect to access the win32 API"],"from":"now-9m","rule_id":"56f2e9b5-4803-4e44-a0a4-a52dc79d57fe","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]},{"id":"T1106","name":"Native API","reference":"https://attack.mitre.org/techniques/T1106/"}]}],"to":"now","references":["https://github.com/mattifestation/PSReflect/blob/master/PSReflect.psm1","https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md"],"version":316,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be configured (Enable).\n\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text:(\n    \"New-InMemoryModule\" or\n    \"Add-Win32Type\" or\n    psenum or\n    DefineDynamicAssembly or\n    DefineDynamicModule or\n    \"Reflection.TypeAttributes\" or\n    \"Reflection.Emit.OpCodes\" or\n    \"Reflection.Emit.CustomAttributeBuilder\" or\n    \"Runtime.InteropServices.DllImportAttribute\"\n  ) and\n  not user.id : \"S-1-5-18\"\n","filters":[{"meta":{"negate":true},"query":{"wildcard":{"file.path":{"case_insensitive":true,"value":"?:\\\\ProgramData\\\\MaaS360\\\\Cloud Extender\\\\AR\\\\Scripts\\\\ASModuleCommon.ps1"}}}}],"actions":[]}
{"id":"77235204-44cc-40c4-aa74-f24f85f94ecf","updated_at":"2025-06-15T07:42:35.559Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.263Z","created_by":"elastic","name":"Suspicious Execution via Scheduled Task","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies execution of a suspicious program via scheduled tasks by looking at process lineage and command line usage.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Execution via Scheduled Task\n\nScheduled tasks in Windows automate routine tasks, but adversaries exploit them for persistence and execution of malicious programs. By examining process lineage and command line usage, the detection rule identifies suspicious executions initiated by scheduled tasks. It flags known malicious executables and unusual file paths, while excluding benign processes, to pinpoint potential threats effectively.\n\n### Possible investigation steps\n\n- Review the process lineage to confirm the parent process is \"svchost.exe\" with arguments containing \"Schedule\" to verify the execution was initiated by a scheduled task.\n- Examine the command line arguments and file paths of the suspicious process to identify any unusual or unauthorized file locations, such as those listed in the query (e.g., \"C:\\Users\\*\", \"C:\\ProgramData\\*\").\n- Check the original file name of the process against the list of known suspicious executables (e.g., \"PowerShell.EXE\", \"Cmd.Exe\") to determine if it matches any commonly abused binaries.\n- Investigate the user context under which the process was executed, especially if it deviates from expected system accounts or known service accounts.\n- Correlate the event with other security logs or alerts to identify any related suspicious activities or patterns that might indicate a broader attack campaign.\n- Assess the risk and impact of the detected activity by considering the severity and risk score provided, and determine if immediate containment or remediation actions are necessary.\n\n### False positive analysis\n\n- Scheduled tasks running legitimate scripts or executables like cmd.exe or cscript.exe in system directories may trigger false positives. To manage this, create exceptions for these processes when they are executed from known safe directories such as C:\\Windows\\System32.\n- PowerShell scripts executed by the system account (S-1-5-18) for administrative tasks can be mistakenly flagged. Exclude these by specifying exceptions for PowerShell executions with arguments like -File or -PSConsoleFile when run by the system account.\n- Legitimate software installations or updates using msiexec.exe by the system account may be incorrectly identified as threats. Mitigate this by excluding msiexec.exe processes initiated by the system account.\n- Regular maintenance tasks or scripts stored in common directories like C:\\ProgramData or C:\\Windows\\Temp might be flagged. Review these tasks and exclude known benign scripts or executables from these paths.\n- Custom scripts or administrative tools that mimic suspicious executables (e.g., PowerShell.EXE, RUNDLL32.EXE) but are part of routine operations should be reviewed and excluded if verified as safe.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further spread of any potential malicious activity.\n- Terminate any suspicious processes identified by the detection rule, especially those matching the flagged executables and paths.\n- Conduct a thorough review of scheduled tasks on the affected system to identify and disable any unauthorized or suspicious tasks.\n- Remove any malicious files or executables found in the suspicious paths listed in the detection rule.\n- Restore the system from a known good backup if malicious activity is confirmed and system integrity is compromised.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring and logging for scheduled tasks and the flagged executables to detect similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate scheduled tasks running third party software."],"from":"now-9m","rule_id":"5d1d6907-0747-4d5d-9b24-e4a18853dc0a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1053","name":"Scheduled Task/Job","reference":"https://attack.mitre.org/techniques/T1053/","subtechnique":[{"id":"T1053.005","name":"Scheduled Task","reference":"https://attack.mitre.org/techniques/T1053/005/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1053","name":"Scheduled Task/Job","reference":"https://attack.mitre.org/techniques/T1053/","subtechnique":[{"id":"T1053.005","name":"Scheduled Task","reference":"https://attack.mitre.org/techniques/T1053/005/"}]}]}],"to":"now","references":["https://www.elastic.co/security-labs/elastic-protects-against-data-wiper-malware-targeting-ukraine-hermeticwiper"],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true},{"name":"process.working_directory","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n    /* Schedule service cmdline on Win10+ */\n    process.parent.name : \"svchost.exe\" and process.parent.args : \"Schedule\" and\n    /* add suspicious programs here */\n    process.pe.original_file_name in\n                                (\n                                  \"cscript.exe\",\n                                  \"wscript.exe\",\n                                  \"PowerShell.EXE\",\n                                  \"Cmd.Exe\",\n                                  \"MSHTA.EXE\",\n                                  \"RUNDLL32.EXE\",\n                                  \"REGSVR32.EXE\",\n                                  \"MSBuild.exe\",\n                                  \"InstallUtil.exe\",\n                                  \"RegAsm.exe\",\n                                  \"RegSvcs.exe\",\n                                  \"msxsl.exe\",\n                                  \"CONTROL.EXE\",\n                                  \"EXPLORER.EXE\",\n                                  \"Microsoft.Workflow.Compiler.exe\",\n                                  \"msiexec.exe\"\n                                  ) and\n    /* add suspicious paths here */\n    process.args : (\n       \"C:\\\\Users\\\\*\",\n       \"C:\\\\ProgramData\\\\*\",\n       \"C:\\\\Windows\\\\Temp\\\\*\",\n       \"C:\\\\Windows\\\\Tasks\\\\*\",\n       \"C:\\\\PerfLogs\\\\*\",\n       \"C:\\\\Intel\\\\*\",\n       \"C:\\\\Windows\\\\Debug\\\\*\",\n       \"C:\\\\HP\\\\*\") and\n\n    not (process.name : \"cmd.exe\" and process.args : \"?:\\\\*.bat\" and process.working_directory : \"?:\\\\Windows\\\\System32\\\\\") and\n    not (process.name : \"cscript.exe\" and process.args : \"?:\\\\Windows\\\\system32\\\\calluxxprovider.vbs\") and\n    not (\n       process.name : \"powershell.exe\" and\n       process.args : (\n           \"-File\", \"-PSConsoleFile\",\n           \"C:\\\\ProgramData\\\\Microsoft\\\\AutopatchSetupScheduled\\\\SetupAutopatchClientV2Package.ps1\",\n           \"C:\\\\ProgramData\\\\Microsoft\\\\AutopatchSetupScheduled\\\\SetupAutopatchClientPackage.ps1\"                \n       ) and user.id : \"S-1-5-18\"\n    ) and\n    not (process.name : \"msiexec.exe\" and user.id : \"S-1-5-18\")\n","actions":[]}
{"id":"11d9f0fc-48e2-4943-9f23-844babdaea4b","updated_at":"2025-06-15T07:53:31.752Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.262Z","created_by":"elastic","name":"Persistence via PowerShell profile","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Privilege Escalation","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the creation or modification of a PowerShell profile. PowerShell profile is a script that is executed when PowerShell starts to customize the user environment, which can be abused by attackers to persist in a environment where PowerShell is common.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Persistence via PowerShell profile\n\nPowerShell profiles are scripts executed when PowerShell starts, customizing the user environment. They are commonly used in Windows environments for legitimate purposes, such as setting variables or loading modules. However, adversaries can abuse PowerShell profiles to establish persistence by inserting malicious code that executes each time PowerShell is launched.\n\nThis rule identifies the creation or modification of a PowerShell profile. It does this by monitoring file events on Windows systems, specifically targeting profile-related file paths and names, such as `profile.ps1` and `Microsoft.Powershell_profile.ps1`. By detecting these activities, security analysts can investigate potential abuse of PowerShell profiles for malicious persistence.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n### Possible investigation steps\n\n- Retrive and inspect the PowerShell profile content; look for suspicious DLL imports, collection or persistence capabilities, suspicious functions, encoded or compressed data, suspicious commands, and other potentially malicious characteristics.\n- Identify the process responsible for the PowerShell profile creation/modification. Use the Elastic Defend events to examine all the activity of the subject process by filtering by the process's `process.entity_id`.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Check for additional PowerShell and command-line logs that indicate that any suspicious command or function were run.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Observe and collect information about the following activities in the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process's `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n\n### False positive analysis\n\n- This is a dual-use mechanism, meaning its usage is not inherently malicious. Analysts can dismiss the alert if the script doesn't contain malicious functions or potential for abuse, no other suspicious activity was identified, and the user has business justifications to use PowerShell.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n  - If malicious activity is confirmed, perform a broader investigation to identify the scope of the compromise and determine the appropriate remediation steps.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Reimage the host operating system or restore the compromised files to clean versions.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n  - Consider enabling and collecting PowerShell logs such as transcription, module, and script block logging, to improve visibility into PowerShell activities.\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"5cf6397e-eb91-4f31-8951-9f0eaa755a31","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1546","name":"Event Triggered Execution","reference":"https://attack.mitre.org/techniques/T1546/","subtechnique":[{"id":"T1546.013","name":"PowerShell Profile","reference":"https://attack.mitre.org/techniques/T1546/013/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1546","name":"Event Triggered Execution","reference":"https://attack.mitre.org/techniques/T1546/","subtechnique":[{"id":"T1546.013","name":"PowerShell Profile","reference":"https://attack.mitre.org/techniques/T1546/013/"}]}]}],"to":"now","references":["https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles","https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/"],"version":212,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.file-*","logs-windows.sysmon_operational-*","endgame-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*"],"query":"file where host.os.type == \"windows\" and event.type != \"deletion\" and\n  file.path : (\"?:\\\\Users\\\\*\\\\Documents\\\\WindowsPowerShell\\\\*\",\n               \"?:\\\\Users\\\\*\\\\Documents\\\\PowerShell\\\\*\",\n               \"?:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\*\") and\n  file.name : (\"profile.ps1\", \"Microsoft.Powershell_profile.ps1\")\n","actions":[]}
{"id":"97a5b1a9-bebd-487b-8299-69f25798aaf2","updated_at":"2025-06-15T08:06:50.079Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.473Z","created_by":"elastic","name":"Potential PowerShell Obfuscated Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies scripts that contain patterns and known methods that obfuscate PowerShell code. Attackers can use obfuscation techniques to bypass PowerShell security protections such as Antimalware Scan Interface (AMSI).","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential PowerShell Obfuscated Script\n\nPowerShell is a powerful scripting language used for task automation and configuration management in Windows environments. Adversaries exploit its flexibility to obfuscate scripts, evading security measures like AMSI. The detection rule identifies obfuscation patterns, such as string manipulation and encoding techniques, to flag potentially malicious scripts, aiding in defense evasion detection.\n\n### Possible investigation steps\n\n- Review the PowerShell script block text captured in the alert to identify any suspicious patterns or obfuscation techniques, such as string manipulation or encoding methods like \"[string]::join\" or \"-Join\".\n- Check the process execution details, including the parent process and command line arguments, to understand the context in which the PowerShell script was executed.\n- Investigate the source and destination of the script execution by examining the host and user details to determine if the activity aligns with expected behavior or if it originates from an unusual or unauthorized source.\n- Analyze any network connections or file modifications associated with the PowerShell process to identify potential data exfiltration or lateral movement activities.\n- Correlate the alert with other security events or logs, such as Windows Event Logs or network traffic logs, to gather additional context and identify any related suspicious activities.\n- Assess the risk and impact of the detected activity by considering the severity and risk score provided in the alert, and determine if immediate remediation actions are necessary.\n\n### False positive analysis\n\n- Legitimate administrative scripts may use string manipulation and encoding techniques for benign purposes, such as data processing or configuration management. Review the context of the script execution and verify the source and intent before flagging it as malicious.\n- Scripts that automate complex tasks might use obfuscation-like patterns to handle data securely or efficiently. Consider whitelisting known scripts or trusted sources to reduce false positives.\n- Development and testing environments often run scripts with obfuscation patterns for testing purposes. Exclude these environments from the rule or create exceptions for specific users or groups involved in development.\n- Security tools and monitoring solutions might generate PowerShell scripts with obfuscation patterns as part of their normal operation. Identify these tools and exclude their activities from triggering the rule.\n- Regularly update the list of exceptions and whitelisted scripts to ensure that new legitimate scripts are not mistakenly flagged as threats.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further spread of potentially malicious scripts.\n- Terminate any suspicious PowerShell processes identified by the detection rule to halt ongoing malicious activity.\n- Conduct a thorough review of the PowerShell script block logs to identify and remove any obfuscated scripts or malicious code remnants.\n- Restore the system from a known good backup if malicious activity is confirmed and system integrity is compromised.\n- Update and patch the affected system to ensure all security vulnerabilities are addressed, reducing the risk of exploitation.\n- Monitor the system and network for any signs of re-infection or similar obfuscation patterns to ensure the threat has been fully mitigated.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"8025db49-c57c-4fc0-bd86-7ccd6d10a35a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1027","name":"Obfuscated Files or Information","reference":"https://attack.mitre.org/techniques/T1027/"},{"id":"T1140","name":"Deobfuscate/Decode Files or Information","reference":"https://attack.mitre.org/techniques/T1140/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://github.com/danielbohannon/Invoke-Obfuscation"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    \"[string]::join\" or\n    \"-Join\" or\n    \"[convert]::toint16\" or\n    \"[char][int]$_\" or\n    (\"ConvertTo-SecureString\" and \"PtrToStringAuto\") or\n    \".GetNetworkCredential().password\" or\n    \"-BXor\" or\n    (\"replace\" and \"char\") or\n    \"[array]::reverse\" or\n    \"-replace\"\n  ) and\n  powershell.file.script_block_text : (\n    (\"$pSHoMe[\" and \"+$pSHoMe[\") or\n    (\"$ShellId[\" and \"+$ShellId[\") or\n    (\"$env:ComSpec[4\" and \"25]-Join\") or\n    ((\"Set-Variable\" or \"SV\" or \"Set-Item\") and \"OFS\") or\n    (\"*MDR*\" and \"Name[3,11,2]\") or\n    (\"$VerbosePreference\" and \"[1,3]+'X'-Join''\") or\n    (\"rahc\" or \"ekovin\" or \"gnirts\" or \"ecnereferpesobrev\" or \"ecalper\" or \"cepsmoc\" or \"dillehs\") or\n    (\"System.Management.Automation.$([cHAr]\" or \"System.$([cHAr]\" or \")+[cHAR]([byte]\")\n  )\n","actions":[]}
{"id":"de42bbf5-2dbf-43a8-9c82-4994ab3c6888","updated_at":"2025-06-15T07:42:41.616Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.156Z","created_by":"elastic","name":"Potential Privilege Escalation via Sudoers File Modification","tags":["Domain: Endpoint","OS: Linux","OS: macOS","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"A sudoers file specifies the commands users or groups can run and from which terminals. Adversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privilege Escalation via Sudoers File Modification\n\nThe sudoers file is crucial in Unix-like systems, defining user permissions for executing commands with elevated privileges. Adversaries may exploit this by modifying the file to allow unauthorized privilege escalation, often using the NOPASSWD directive to bypass password prompts. The detection rule identifies suspicious process activities, such as attempts to alter sudoers configurations, by monitoring specific command patterns indicative of such exploits.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific process that triggered the alert, focusing on the process.args field to confirm the presence of the *NOPASSWD*ALL* pattern.\n- Examine the process execution context, including the user account under which the process was initiated, to determine if it aligns with expected behavior or if it indicates potential misuse.\n- Check the system's sudoers file for recent modifications, especially looking for unauthorized entries or changes that include the NOPASSWD directive.\n- Investigate the command history of the user associated with the alert to identify any suspicious activities or commands executed around the time of the alert.\n- Correlate the event with other logs or alerts from the same host or user to identify any patterns or additional indicators of compromise that might suggest a broader attack.\n\n### False positive analysis\n\n- Routine administrative tasks may trigger the rule if administrators frequently update the sudoers file to add legitimate NOPASSWD entries for automation purposes. To manage this, create exceptions for known administrative scripts or processes that are regularly reviewed and approved.\n- Configuration management tools like Ansible or Puppet might modify the sudoers file as part of their normal operation. Exclude these tools from triggering alerts by identifying their specific process names or paths and adding them to an exception list.\n- Development environments where developers are granted temporary elevated privileges for testing purposes can cause false positives. Implement a policy to log and review these changes separately, ensuring they are reverted after use.\n- Automated scripts that require passwordless sudo access for operational efficiency might be flagged. Document these scripts and their usage, and configure the detection system to ignore these specific, well-documented cases.\n- System updates or patches that modify sudoers configurations as part of their installation process can be mistaken for malicious activity. Monitor update schedules and correlate them with alerts to identify and exclude these benign changes.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or privilege escalation.\n- Review and revert any unauthorized changes to the sudoers file by restoring it from a known good backup or manually correcting the entries to remove any NOPASSWD directives added by the adversary.\n- Conduct a thorough audit of user accounts and permissions on the affected system to identify and remove any unauthorized accounts or privilege assignments.\n- Reset passwords for all accounts with elevated privileges on the affected system to ensure that compromised credentials cannot be reused.\n- Deploy endpoint detection and response (EDR) tools to monitor for any further suspicious activities or attempts to modify the sudoers file across the network.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if the threat has spread to other systems.\n- Implement additional logging and alerting for changes to the sudoers file and other critical configuration files to enhance detection of similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"76152ca1-71d0-4003-9e37-0983e12832da","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.003","name":"Sudo and Sudo Caching","reference":"https://attack.mitre.org/techniques/T1548/003/"}]}]}],"to":"now","references":["https://www.elastic.co/security-labs/primer-on-persistence-mechanisms"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true}],"setup":"","type":"query","language":"kuery","index":["auditbeat-*","logs-endpoint.events.*"],"query":"event.category:process and event.type:start and process.args:(echo and *NOPASSWD*ALL*)\n","actions":[]}
{"id":"c0602ac0-4bc6-47a3-b814-7a256f3951df","updated_at":"2025-06-15T07:42:32.529Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:45.152Z","created_by":"elastic","name":"Potential Meterpreter Reverse Shell","tags":["Data Source: Auditd Manager","Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This detection rule identifies a sample of suspicious Linux system file reads used for system fingerprinting, leveraged by the Metasploit Meterpreter shell to gather information about the target that it is executing its shell on. Detecting this pattern is indicative of a successful meterpreter shell connection.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Meterpreter Reverse Shell\n\nMeterpreter is a sophisticated payload within the Metasploit framework, enabling attackers to execute commands and scripts on compromised systems. Adversaries exploit it to perform system reconnaissance and data exfiltration. The detection rule identifies suspicious file access patterns typical of Meterpreter's system fingerprinting activities, such as reading key system files, indicating a potential reverse shell connection.\n\n### Possible investigation steps\n\n- Review the process associated with the alert by examining the process ID (process.pid) and user ID (user.id) to determine if the process is legitimate or potentially malicious.\n- Check the host ID (host.id) to identify the specific system where the suspicious activity was detected and assess if it is a high-value target or has been previously compromised.\n- Investigate the command history and running processes on the affected host to identify any unusual or unauthorized activities that may indicate a Meterpreter session.\n- Analyze network connections from the host to detect any suspicious outbound connections that could suggest a reverse shell communication.\n- Examine the file access patterns, particularly the access to files like /etc/machine-id, /etc/passwd, /proc/net/route, /proc/net/ipv6_route, and /proc/net/if_inet6, to understand the context and purpose of these reads and whether they align with normal system operations.\n- Correlate the alert with other security events or logs from the same timeframe to identify any additional indicators of compromise or related malicious activities.\n\n### False positive analysis\n\n- System administration scripts or tools that perform regular checks on system files like /etc/machine-id or /etc/passwd may trigger this rule. To manage this, identify and whitelist these legitimate processes by their process ID or user ID.\n- Backup or monitoring software that accesses network configuration files such as /proc/net/route or /proc/net/ipv6_route can cause false positives. Exclude these applications by adding exceptions for their specific file access patterns.\n- Security tools that perform network diagnostics or inventory checks might read files like /proc/net/if_inet6. Review these tools and exclude their known benign activities from triggering the rule.\n- Custom scripts used for system health checks or inventory management that access the flagged files should be reviewed. If deemed safe, add them to an exception list based on their host ID or user ID.\n\n### Response and remediation\n\n- Isolate the affected system from the network immediately to prevent further data exfiltration or lateral movement by the attacker.\n- Terminate any suspicious processes identified by the detection rule, particularly those associated with the process IDs flagged in the alert.\n- Conduct a thorough review of the affected system's logs and file access history to identify any additional unauthorized access or data exfiltration attempts.\n- Change all credentials and keys that may have been exposed or compromised on the affected system, especially those related to user accounts identified in the alert.\n- Restore the affected system from a known good backup to ensure any malicious changes are removed, and verify the integrity of the restored system.\n- Implement network segmentation to limit the potential impact of future attacks and enhance monitoring of critical systems for similar suspicious activities.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"5c895b4f-9133-4e68-9e23-59902175355c","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]}],"to":"now","references":["https://www.elastic.co/security-labs/primer-on-persistence-mechanisms","https://www.elastic.co/security-labs/linux-detection-engineering-with-auditd"],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"auditd_manager","version":"^1.0.0"}],"required_fields":[{"name":"auditd.data.a2","type":"unknown","ecs":false},{"name":"auditd.data.syscall","type":"unknown","ecs":false},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from one of the following integrations:\n- Auditbeat\n- Auditd Manager\n\n### Auditbeat Setup\nAuditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.\n\n#### The following steps should be executed in order to add the Auditbeat on a Linux System:\n- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.\n- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).\n- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).\n- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).\n- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).\n\n### Auditd Manager Integration Setup\nThe Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.\nAuditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.\n\n#### The following steps should be executed in order to add the Elastic Agent System integration \"auditd_manager\" on a Linux System:\n- Go to the Kibana home page and click “Add integrations”.\n- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.\n- Click “Add Auditd Manager”.\n- Configure the integration name and optionally add a description.\n- Review optional and advanced settings accordingly.\n- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.\n- Click “Save and Continue”.\n- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).\n\n#### Rule Specific Setup Note\nAuditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.\nHowever, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the \"audit rules\" configuration box or the \"auditd rule files\" box by specifying a file to read the audit rules from.\n- For this detection rule the following additional audit rules are required to be added to the integration:\n  -w /proc/net/ -p r -k audit_proc\n  -w /etc/machine-id -p wa -k machineid\n  -w /etc/passwd -p wa -k passwd\n","type":"eql","language":"eql","index":["auditbeat-*","logs-auditd_manager.auditd-*"],"query":"sample by host.id, process.pid, user.id\n  [file where host.os.type == \"linux\" and auditd.data.syscall == \"open\" and auditd.data.a2 == \"1b6\" and file.path == \"/etc/machine-id\"]\n  [file where host.os.type == \"linux\" and auditd.data.syscall == \"open\" and auditd.data.a2 == \"1b6\" and file.path == \"/etc/passwd\"]\n  [file where host.os.type == \"linux\" and auditd.data.syscall == \"open\" and auditd.data.a2 == \"1b6\" and file.path == \"/proc/net/route\"]\n  [file where host.os.type == \"linux\" and auditd.data.syscall == \"open\" and auditd.data.a2 == \"1b6\" and file.path == \"/proc/net/ipv6_route\"]\n  [file where host.os.type == \"linux\" and auditd.data.syscall == \"open\" and auditd.data.a2 == \"1b6\" and file.path == \"/proc/net/if_inet6\"]\n","actions":[]}
{"id":"16b2a3f2-c304-473e-89b6-bb97a5c82f8b","updated_at":"2025-06-15T07:42:41.609Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:46.234Z","created_by":"elastic","name":"Potential Privilege Escalation via CVE-2023-4911","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Privilege Escalation","Use Case: Vulnerability","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule detects potential privilege escalation attempts through Looney Tunables (CVE-2023-4911). Looney Tunables is a buffer overflow vulnerability in GNU C Library's dynamic loader's processing of the GLIBC_TUNABLES environment variable.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privilege Escalation via CVE-2023-4911\n\nCVE-2023-4911 exploits a buffer overflow in the GNU C Library's dynamic loader, specifically targeting the GLIBC_TUNABLES environment variable. Adversaries can manipulate this to gain elevated privileges on Linux systems. The detection rule identifies suspicious activity by monitoring processes with specific environment variables, flagging repeated execution attempts within a short timeframe, indicating potential exploitation efforts.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific host.id and process.parent.entity_id associated with the suspicious activity.\n- Examine the process.executable path to determine if it is a legitimate application or potentially malicious.\n- Check the process.env_vars for any unusual or unexpected GLIBC_TUNABLES values that could indicate manipulation attempts.\n- Investigate the host's recent process execution history to identify any patterns or anomalies, focusing on processes with the GLIBC_TUNABLES environment variable set.\n- Correlate the alert with other security events or logs from the same host to identify any additional indicators of compromise or related suspicious activities.\n- Assess the system for any signs of privilege escalation or unauthorized access, such as new user accounts or changes in user privileges.\n\n### False positive analysis\n\n- Frequent legitimate use of GLIBC_TUNABLES environment variable by system administrators or automated scripts can trigger false positives. Users should identify and whitelist these known benign processes to prevent unnecessary alerts.\n- Some Linux distributions or specific applications may use GLIBC_TUNABLES for performance tuning or compatibility reasons. Review and document these cases, and create exceptions for these processes to avoid false alarms.\n- Development environments where GLIBC_TUNABLES is used for testing purposes might also cause false positives. Implement a policy to exclude these environments from monitoring or adjust the rule to account for these specific use cases.\n- Scheduled tasks or cron jobs that utilize GLIBC_TUNABLES for legitimate purposes can be mistaken for exploitation attempts. Ensure these tasks are recognized and excluded from the rule's scope to reduce noise.\n- If a particular user or group frequently triggers the rule due to their role or activities, consider creating a user-based exception to minimize false positives while maintaining security oversight.\n\n### Response and remediation\n\n- Immediately isolate the affected Linux system from the network to prevent further exploitation or lateral movement by the adversary.\n- Terminate any suspicious processes identified with the GLIBC_TUNABLES environment variable to halt ongoing exploitation attempts.\n- Apply the latest security patches and updates to the GNU C Library on all affected systems to remediate the buffer overflow vulnerability.\n- Conduct a thorough review of system logs and process execution history to identify any unauthorized changes or additional indicators of compromise.\n- Restore affected systems from a known good backup taken before the exploitation attempt, ensuring that the backup is free from any malicious modifications.\n- Implement enhanced monitoring and alerting for unusual process executions and environment variable manipulations to detect similar threats in the future.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"6d8685a1-94fa-4ef7-83de-59302e7c4ca8","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"}]}],"to":"now","references":["https://blog.qualys.com/vulnerabilities-threat-research/2023/10/03/cve-2023-4911-looney-tunables-local-privilege-escalation-in-the-glibcs-ld-so"],"version":8,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.env_vars","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.parent.entity_id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n\nElastic Defend integration does not collect environment variable logging by default.\nIn order to capture this behavior, this rule requires a specific configuration option set within the advanced settings of the Elastic Defend integration.\n #### To set up environment variable capture for an Elastic Agent policy:\n- Go to “Security → Manage → Policies”.\n- Select an “Elastic Agent policy”.\n- Click “Show advanced settings”.\n- Scroll down or search for “linux.advanced.capture_env_vars”.\n- Enter the names of environment variables you want to capture, separated by commas.\n- For this rule the linux.advanced.capture_env_vars variable should be set to \"GLIBC_TUNABLES\".\n- Click “Save”.\nAfter saving the integration change, the Elastic Agents running this policy will be updated and the rule will function properly.\nFor more information on capturing environment variables refer to the [helper guide](https://www.elastic.co/guide/en/security/current/environment-variable-capture.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"sequence by host.id, process.parent.entity_id, process.executable with maxspan=5s\n [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n  process.env_vars : \"*GLIBC_TUNABLES=glibc.*=glibc.*=*\"] with runs=5\n","actions":[]}
{"id":"99a98e3b-37e7-4eee-af22-4fc2af108e07","updated_at":"2025-06-15T08:07:17.102Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.513Z","created_by":"elastic","name":"Encoded Executable Stored in the Registry","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Microsoft Defender for Endpoint","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies registry write modifications to hide an encoded portable executable. This could be indicative of adversary defense evasion by avoiding the storing of malicious content directly on disk.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Encoded Executable Stored in the Registry\n\nWindows Registry is a hierarchical database storing low-level settings for the OS and applications. Adversaries exploit it to hide encoded executables, evading detection by avoiding direct disk storage. The detection rule identifies suspicious registry modifications, specifically targeting encoded patterns indicative of hidden executables, thus flagging potential defense evasion tactics.\n\n### Possible investigation steps\n\n- Review the registry path and key where the modification was detected to understand the context and potential impact on the system.\n- Analyze the encoded data string \"TVqQAAMAAAAEAAAA*\" to determine if it corresponds to a known malicious executable or pattern.\n- Check the modification timestamp to correlate with any other suspicious activities or events on the system around the same time.\n- Investigate the process or user account responsible for the registry modification to assess if it is associated with legitimate activity or known threats.\n- Cross-reference the alert with other data sources such as Sysmon, Microsoft Defender for Endpoint, or SentinelOne for additional context or corroborating evidence of malicious behavior.\n- Evaluate the system's network activity and connections during the time of the registry modification to identify any potential command and control communications or data exfiltration attempts.\n\n### False positive analysis\n\n- Legitimate software installations or updates may write encoded executables to the registry as part of their normal operation. Users can create exceptions for known software by identifying their specific registry paths and excluding them from the detection rule.\n- Security tools and system management software might store encoded data in the registry for legitimate purposes. Review the registry paths and data associated with these tools and exclude them if they are verified as non-threatening.\n- Custom scripts or enterprise applications developed in-house may use encoded executables in the registry for deployment or configuration purposes. Work with development teams to identify these scripts and add exceptions for their registry modifications.\n- Regularly review and update the list of exceptions to ensure that only verified and necessary exclusions are maintained, minimizing the risk of overlooking potential threats.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further spread of the potential threat.\n- Use endpoint detection and response (EDR) tools to terminate any suspicious processes associated with the encoded executable.\n- Remove the malicious registry entry by using a trusted registry editor or automated script to ensure the encoded executable is no longer stored in the registry.\n- Conduct a full system scan using updated antivirus and anti-malware tools to identify and remove any additional threats or remnants of the attack.\n- Restore the system from a known good backup if the integrity of the system is compromised and cannot be assured through cleaning.\n- Monitor the system and network for any signs of re-infection or similar registry modifications, adjusting detection rules if necessary to enhance future threat identification.\n- Escalate the incident to the security operations center (SOC) or relevant cybersecurity team for further analysis and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"93c1ce76-494c-4f01-8167-35edfb52f7b1","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1112","name":"Modify Registry","reference":"https://attack.mitre.org/techniques/T1112/"},{"id":"T1140","name":"Deobfuscate/Decode Files or Information","reference":"https://attack.mitre.org/techniques/T1140/"}]}],"to":"now","references":[],"version":414,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"m365_defender","version":"^3.0.0"}],"required_fields":[{"name":"host.os.type","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*","endgame-*","logs-windows.sysmon_operational-*","logs-sentinel_one_cloud_funnel.*","winlogbeat-*","logs-m365_defender.event-*"],"query":"registry where host.os.type == \"windows\" and\n/* update here with encoding combinations */\n registry.data.strings : \"TVqQAAMAAAAEAAAA*\"\n","actions":[]}
{"id":"2a1a77f7-d927-4172-8c9d-10e523a0c21f","updated_at":"2025-03-25T03:47:55.819Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:42.074Z","created_by":"elastic","name":"Potential Widespread Malware Infection Across Multiple Hosts","tags":["Domain: Endpoint","Data Source: Elastic Defend","Use Case: Threat Detection","Tactic: Execution","Rule Type: Higher-Order Rule","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":1,"description":"This rule uses alert data to determine when a malware signature is triggered in multiple hosts. Analysts can use this to prioritize triage and response, as this can potentially indicate a widespread malware infection.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Widespread Malware Infection Across Multiple Hosts\n\nEndpoint security technologies monitor and analyze activities on devices to detect malicious behavior. Adversaries exploit these systems by deploying malware that triggers specific signatures across multiple hosts, indicating a coordinated attack. The detection rule identifies such threats by analyzing alert data for specific malware signatures across several hosts, flagging potential widespread infections for prioritized investigation.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific rule.name and event.code that triggered the alert, focusing on those with a high count of distinct host.id values.\n- Correlate the identified rule.name with known malware signatures or recent threat intelligence reports to understand the potential impact and behavior of the malware.\n- Examine the affected host.id entries to determine if there are any commonalities, such as shared network segments, user accounts, or software versions, that could indicate the initial infection vector.\n- Investigate the timeline of events for each affected host to identify any suspicious activities or anomalies preceding the alert, such as unusual file downloads or execution of unknown processes.\n- Check for any additional alerts or logs related to the same host.id entries to assess if there are other indicators of compromise or related malicious activities.\n- Coordinate with IT and security teams to isolate affected hosts if necessary, and initiate containment and remediation procedures based on the findings.\n\n### False positive analysis\n\n- Legitimate software updates or installations may trigger malware signatures, especially if they involve new or uncommon software. Users can create exceptions for known software update processes to prevent these alerts from being flagged as potential threats.\n- Security testing tools or penetration testing activities might mimic malware behavior, leading to false positives. Analysts should coordinate with IT and security teams to whitelist these activities during scheduled tests.\n- Custom scripts or administrative tools that perform automated tasks across multiple hosts can be mistaken for malicious activity. Identifying and excluding these scripts from the rule can reduce unnecessary alerts.\n- Frequent use of remote management tools that execute scripts or commands on multiple hosts may trigger alerts. Users should ensure these tools are recognized and excluded from the rule to avoid false positives.\n- Known benign applications that use shellcode or memory manipulation techniques for legitimate purposes should be reviewed and added to an exception list to prevent them from being flagged.\n\n### Response and remediation\n\n- Isolate affected hosts immediately to prevent further spread of the malware across the network. This can be done by disconnecting them from the network or using network segmentation techniques.\n- Conduct a thorough scan of the isolated hosts using updated antivirus or endpoint detection and response (EDR) tools to identify and remove the malicious files or processes associated with the detected signatures.\n- Analyze the identified malware to understand its behavior and entry points. This will help in determining if additional hosts may be compromised and require similar remediation actions.\n- Apply security patches and updates to all affected systems to close any vulnerabilities that the malware may have exploited.\n- Restore affected systems from clean backups if the malware has caused significant damage or if the integrity of the system cannot be assured after cleaning.\n- Monitor network traffic and endpoint activities closely for any signs of persistence or re-infection, using enhanced detection rules and updated threat intelligence feeds.\n- Escalate the incident to the appropriate internal or external cybersecurity teams if the infection appears to be part of a larger coordinated attack, ensuring that all relevant data and findings are shared for further investigation and response.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"28371aa1-14ed-46cf-ab5b-2fc7d1942278","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1204","name":"User Execution","reference":"https://attack.mitre.org/techniques/T1204/","subtechnique":[{"id":"T1204.002","name":"Malicious File","reference":"https://attack.mitre.org/techniques/T1204/002/"}]}]}],"to":"now","references":["https://github.com/elastic/protections-artifacts/tree/main/yara/rules"],"version":3,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[],"setup":"","type":"esql","language":"esql","query":"from logs-endpoint.alerts-*\n| where event.code in (\"malicious_file\", \"memory_signature\", \"shellcode_thread\") and rule.name is not null\n| keep host.id, rule.name, event.code\n| stats hosts = count_distinct(host.id) by rule.name, event.code\n| where hosts >= 3\n","actions":[]}
{"id":"f9a274e9-9043-4202-b953-f21ae5bf4f4e","updated_at":"2025-06-15T07:52:18.167Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:49.257Z","created_by":"elastic","name":"Suspicious Installer Package Spawns Network Event","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Execution","Tactic: Command and Control","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects the execution of a MacOS installer package with an abnormal child process (e.g bash) followed immediately by a network connection via a suspicious process (e.g curl). Threat actors will build and distribute malicious MacOS installer packages, which have a .pkg extension, many times imitating valid software in order to persuade and infect their victims often using the package files (e.g pre/post install scripts etc.) to download additional tools or malicious software. If this rule fires it should indicate the installation of a malicious or suspicious package.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Installer Package Spawns Network Event\n\nMacOS installer packages, often with a .pkg extension, are used to distribute software. Adversaries exploit this by embedding scripts to execute additional commands or download malicious payloads. The detection rule identifies suspicious behavior by monitoring for installer packages spawning shell processes followed by network activity, indicating potential malicious activity.\n\n### Possible investigation steps\n\n- Review the process details to identify the parent process name and entity ID, focusing on processes like \"installer\" or \"package_script_service\" that initiated the suspicious activity.\n- Examine the child process that was spawned, such as \"bash\", \"sh\", or \"python\", to determine the commands executed and assess if they align with typical installation behavior or appear malicious.\n- Investigate the network activity associated with the suspicious process, particularly looking at processes like \"curl\" or \"wget\", to identify any external connections made and the destination IP addresses or domains.\n- Check the timestamp and sequence of events to confirm if the network activity closely followed the process execution, indicating a potential download or data exfiltration attempt.\n- Analyze any downloaded files or payloads for malicious content using threat intelligence tools or sandbox environments to determine their intent and potential impact.\n- Correlate the findings with known threat actor tactics or campaigns, leveraging threat intelligence sources to assess if the activity matches any known patterns or indicators of compromise.\n\n### False positive analysis\n\n- Legitimate software installations may trigger this rule if they use scripts to configure network settings or download updates. Users can create exceptions for known safe software by whitelisting specific installer package names or hashes.\n- System administrators often use scripts to automate software deployment and updates, which might involve network activity. To reduce false positives, exclude processes initiated by trusted administrative tools or scripts.\n- Development environments on macOS might execute scripts that connect to the internet for dependencies or updates. Users can mitigate this by excluding processes associated with known development tools or environments.\n- Some security tools or monitoring software may use scripts to perform network checks or updates. Identify and exclude these processes if they are verified as non-threatening.\n- Frequent updates from trusted software vendors might trigger this rule. Users should maintain an updated list of trusted vendors and exclude their processes from triggering alerts.\n\n### Response and remediation\n\n- Isolate the affected MacOS system from the network immediately to prevent further malicious activity or data exfiltration.\n- Terminate any suspicious processes identified in the alert, such as those initiated by the installer package, to halt ongoing malicious actions.\n- Conduct a thorough review of the installed applications and remove any unauthorized or suspicious software, especially those with a .pkg extension.\n- Restore the system from a known good backup if available, ensuring that the backup predates the installation of the malicious package.\n- Update and patch the MacOS system and all installed applications to the latest versions to mitigate vulnerabilities that could be exploited by similar threats.\n- Monitor network traffic for any signs of command and control communication or data exfiltration attempts, using the indicators identified in the alert.\n- Escalate the incident to the security operations team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":["Custom organization-specific macOS packages that use .pkg files to run cURL could trigger this rule. If known behavior is causing false positives, it can be excluded from the rule."],"from":"now-9m","rule_id":"99239e7d-b0d4-46e3-8609-acafcf99f68c","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.007","name":"JavaScript","reference":"https://attack.mitre.org/techniques/T1059/007/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/","subtechnique":[{"id":"T1071.001","name":"Web Protocols","reference":"https://attack.mitre.org/techniques/T1071/001/"}]}]}],"to":"now","references":["https://redcanary.com/blog/clipping-silver-sparrows-wings","https://posts.specterops.io/introducing-mystikal-4fbd2f7ae520","https://github.com/D00MFist/Mystikal"],"version":112,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id, process.entity_id with maxspan=15s\n[process where host.os.type == \"macos\" and event.type == \"start\" and event.action == \"exec\" and process.parent.name like~ (\"installer\", \"package_script_service\") and ((process.name in (\"bash\", \"sh\", \"zsh\") and process.args == \"-c\") or (process.name like~ (\"python*\", \"osascript\", \"tclsh*\", \"curl\", \"nscurl\")))]\n[network where host.os.type == \"macos\" and event.type == \"start\"]\n","actions":[]}
{"id":"956ab563-ae01-49c4-879d-77202487d0f9","updated_at":"2025-06-15T07:42:37.571Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.790Z","created_by":"elastic","name":"Potential Credential Access via DCSync","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Privilege Escalation","Data Source: Active Directory","Resources: Investigation Guide","Use Case: Active Directory Monitoring","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"This rule identifies when a User Account starts the Active Directory Replication Process. Attackers can use the DCSync technique to get credential information of individual accounts or the entire domain, thus compromising the entire domain.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Credential Access via DCSync\n\nActive Directory replication is the process by which the changes that originate on one domain controller are automatically transferred to other domain controllers that store the same data.\n\nActive Directory data consists of objects that have properties, or attributes. Each object is an instance of an object class, and object classes and their respective attributes are defined in the Active Directory schema. Objects are defined by the values of their attributes, and changes to attribute values must be transferred from the domain controller on which they occur to every other domain controller that stores a replica of an affected object.\n\nAdversaries can use the DCSync technique that uses Windows Domain Controller's API to simulate the replication process from a remote domain controller, compromising major credential material such as the Kerberos krbtgt keys used legitimately for tickets creation, but also tickets forging by attackers. This attack requires some extended privileges to succeed (DS-Replication-Get-Changes and DS-Replication-Get-Changes-All), which are granted by default to members of the Administrators, Domain Admins, Enterprise Admins, and Domain Controllers groups. Privileged accounts can be abused to grant controlled objects the right to DCsync/Replicate.\n\nMore details can be found on [Threat Hunter Playbook](https://threathunterplaybook.com/library/windows/active_directory_replication.html?highlight=dcsync#directory-replication-services-auditing) and [The Hacker Recipes](https://www.thehacker.recipes/ad/movement/credentials/dumping/dcsync).\n\nThis rule monitors for Event ID 4662 (Operation was performed on an Active Directory object) and identifies events that use the access mask 0x100 (Control Access) and properties that contain at least one of the following or their equivalent Schema-Id-GUID (DS-Replication-Get-Changes, DS-Replication-Get-Changes-All, DS-Replication-Get-Changes-In-Filtered-Set). It also filters out events that use computer accounts and also Azure AD Connect MSOL accounts (more details [here](https://techcommunity.microsoft.com/t5/microsoft-defender-for-identity/ad-connect-msol-user-suspected-dcsync-attack/m-p/788028)).\n\n#### Possible investigation steps\n\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account and system owners and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Correlate security events 4662 and 4624 (Logon Type 3) by their Logon ID (`winlog.logon.id`) on the Domain Controller (DC) that received the replication request. This will tell you where the AD replication request came from, and if it came from another DC or not.\n- Scope which credentials were compromised (for example, whether all accounts were replicated or specific ones).\n\n### False positive analysis\n\n- Administrators may use custom accounts on Azure AD Connect, investigate if it is the case, and if it is properly secured. If noisy in your environment due to expected activity, consider adding the corresponding account as a exception.\n- Although replicating Active Directory (AD) data to non-Domain Controllers is not a common practice and is generally not recommended from a security perspective, some software vendors may require it for their products to function correctly. If this rule is noisy in your environment due to expected activity, consider adding the corresponding account as a exception.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If the entire domain or the `krbtgt` user was compromised:\n  - Activate your incident response plan for total Active Directory compromise which should include, but not be limited to, a password reset (twice) of the `krbtgt` user.\n- Investigate how the attacker escalated privileges and identify systems they used to conduct lateral movement. Use this information to determine ways the attacker could regain access to the environment.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"9f962927-1a4f-45f3-a57b-287f2c7029c1","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.006","name":"DCSync","reference":"https://attack.mitre.org/techniques/T1003/006/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/","subtechnique":[{"id":"T1078.002","name":"Domain Accounts","reference":"https://attack.mitre.org/techniques/T1078/002/"}]}]}],"to":"now","references":["https://threathunterplaybook.com/notebooks/windows/06_credential_access/WIN-180815210510.html","https://threathunterplaybook.com/library/windows/active_directory_replication.html?highlight=dcsync#directory-replication-services-auditing","https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/security/win_ad_replication_non_machine_account.yml","https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0027_windows_audit_directory_service_access.md","https://attack.stealthbits.com/privilege-escalation-using-mimikatz-dcsync","https://www.thehacker.recipes/ad/movement/credentials/dumping/dcsync","https://www.elastic.co/security-labs/siestagraph-new-implant-uncovered-in-asean-member-foreign-ministry"],"version":219,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.AccessMask","type":"unknown","ecs":false},{"name":"winlog.event_data.Properties","type":"unknown","ecs":false},{"name":"winlog.event_data.SubjectUserName","type":"keyword","ecs":false}],"setup":"## Setup\n\nThe 'Audit Directory Service Access' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Access (Success,Failure)\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"any where event.code == \"4662\" and\n  winlog.event_data.Properties : (\n\n    /* Control Access Rights/Permissions Symbol */\n\n    \"*DS-Replication-Get-Changes*\",\n    \"*DS-Replication-Get-Changes-All*\",\n    \"*DS-Replication-Get-Changes-In-Filtered-Set*\",\n\n    /* Identifying GUID used in ACE */\n\n    \"*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*\",\n    \"*1131f6aa-9c07-11d1-f79f-00c04fc2dcd2*\",\n    \"*89e95b76-444d-4c62-991a-0facbeda640c*\")\n\n    /* The right to perform an operation controlled by an extended access right. */\n\n    and winlog.event_data.AccessMask : \"0x100\" and\n    not winlog.event_data.SubjectUserName : (\n          \"*$\", \"MSOL_*\", \"OpenDNS_Connector\", \"adconnect\", \"SyncADConnect\",\n          \"SyncADConnectCM\", \"aadsync\", \"svcAzureADSync\", \"-\"\n        )\n\n    /* The Umbrella AD Connector uses the OpenDNS_Connector account to perform replication */\n","actions":[]}
{"id":"e9967497-32d0-4f7b-b23b-b26790f013b2","updated_at":"2025-06-15T07:42:43.621Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.533Z","created_by":"elastic","name":"Potential Credential Access via LSASS Memory Dump","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic:Execution","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious access to LSASS handle from a call trace pointing to DBGHelp.dll or DBGCore.dll, which both export the MiniDumpWriteDump method that can be used to dump LSASS memory content in preparation for credential access.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Credential Access via LSASS Memory Dump\n\nLSASS (Local Security Authority Subsystem Service) is crucial for managing Windows security policies and storing sensitive data like user credentials. Adversaries exploit this by using tools that leverage MiniDumpWriteDump from libraries like DBGHelp.dll to extract credentials. The detection rule identifies suspicious LSASS access by monitoring for these libraries in call traces, excluding legitimate crash handlers, thus flagging potential credential theft attempts.\n\n### Possible investigation steps\n\n- Review the process details associated with the alert, focusing on the process name, executable path, and parent process to determine if the process accessing LSASS is legitimate or suspicious.\n- Examine the call trace details to confirm the presence of DBGHelp.dll or DBGCore.dll, which are indicative of potential credential dumping attempts.\n- Check for any recent crash reports or legitimate use of WerFault.exe, WerFaultSecure.exe, or similar processes that might explain the LSASS access as a non-malicious event.\n- Investigate the user account context under which the suspicious process is running to assess if it aligns with expected behavior or if it indicates potential compromise.\n- Correlate the event with other security logs or alerts to identify any related suspicious activities, such as unauthorized access attempts or lateral movement within the network.\n- Assess the risk and impact by determining if any sensitive credentials could have been exposed, and consider isolating the affected system to prevent further compromise.\n\n### False positive analysis\n\n- Legitimate crash handlers like WerFault.exe may access LSASS during system crashes. To prevent these from being flagged, ensure that the rule excludes processes such as WerFault.exe, WerFaultSecure.exe, and their SysWOW64 counterparts.\n- Debugging tools used by developers or IT administrators might trigger this rule if they access LSASS for legitimate purposes. Consider creating exceptions for known and trusted debugging tools within your environment.\n- Security software or endpoint protection solutions may perform similar actions as part of their normal operations. Verify with your security vendor and exclude these processes if they are confirmed to be benign.\n- Automated system diagnostics or maintenance scripts that interact with LSASS for health checks could be misidentified. Review and whitelist these scripts if they are part of routine system management tasks.\n- Ensure that any custom or third-party applications that require access to LSASS for legitimate reasons are documented and excluded from the rule to avoid unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further credential access or lateral movement by the adversary.\n- Terminate any suspicious processes that are accessing the LSASS memory, especially those involving DBGHelp.dll or DBGCore.dll, to stop the credential dumping activity.\n- Conduct a thorough review of the affected system's security logs to identify any unauthorized access or changes, focusing on event code \"10\" and call traces involving LSASS.\n- Change passwords for all accounts that were active on the affected system, prioritizing high-privilege accounts, to mitigate the risk of compromised credentials being used.\n- Restore the affected system from a known good backup to ensure that any malicious changes or tools are removed.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if other systems may be affected.\n- Implement enhanced monitoring and alerting for similar suspicious activities, focusing on LSASS access and the use of MiniDumpWriteDump, to improve detection and response capabilities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"9960432d-9b26-409f-972b-839a959e79e2","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1106","name":"Native API","reference":"https://attack.mitre.org/techniques/T1106/"}]}],"to":"now","references":["https://www.ired.team/offensive-security/credential-access-and-credential-dumping/dump-credentials-from-lsass-process-without-mimikatz","https://www.elastic.co/security-labs/detect-credential-access","https://www.elastic.co/security-labs/elastic-protects-against-data-wiper-malware-targeting-ukraine-hermeticwiper"],"version":313,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"winlog.event_data.CallTrace","type":"keyword","ecs":false},{"name":"winlog.event_data.TargetImage","type":"keyword","ecs":false}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-windows.sysmon_operational-*"],"query":"process where host.os.type == \"windows\" and event.code == \"10\" and\n  winlog.event_data.TargetImage : \"?:\\\\WINDOWS\\\\system32\\\\lsass.exe\" and\n\n   /* DLLs exporting MiniDumpWriteDump API to create an lsass mdmp*/\n  winlog.event_data.CallTrace : (\"*dbghelp*\", \"*dbgcore*\") and\n\n   /* case of lsass crashing */\n  not process.executable : (\n        \"?:\\\\Windows\\\\System32\\\\WerFault.exe\",\n        \"?:\\\\Windows\\\\SysWOW64\\\\WerFault.exe\",\n        \"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\"\n      )\n","actions":[]}
{"id":"d1ec448b-8589-4c1e-bd1c-fef1963d132c","updated_at":"2025-06-15T07:47:29.894Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.647Z","created_by":"elastic","name":"Wireless Credential Dumping using Netsh Command","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Discovery","Data Source: Elastic Endgame","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Data Source: Microsoft Defender for Endpoint","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Crowdstrike"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies attempts to dump Wireless saved access keys in clear text using the Windows built-in utility Netsh.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Wireless Credential Dumping using Netsh Command\n\nNetsh is a Windows command line tool used for network configuration and troubleshooting. It enables the management of network settings and adapters, wireless network profiles, and other network-related tasks.\n\nThis rule looks for patterns used to dump credentials from wireless network profiles using Netsh, which can enable attackers to bring their own devices to the network.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Inspect the host for suspicious or abnormal behavior in the alert timeframe:\n  - Observe and collect information about the following activities in the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"2de87d72-ee0c-43e2-b975-5f0b029ac600","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"},{"id":"T1555","name":"Credentials from Password Stores","reference":"https://attack.mitre.org/techniques/T1555/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0007","name":"Discovery","reference":"https://attack.mitre.org/tactics/TA0007/"},"technique":[{"id":"T1082","name":"System Information Discovery","reference":"https://attack.mitre.org/techniques/T1082/"}]}],"to":"now","references":["https://learn.microsoft.com/en-us/windows-server/networking/technologies/netsh/netsh-contexts","https://www.geeksforgeeks.org/how-to-find-the-wi-fi-password-using-cmd-in-windows/"],"version":214,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"crowdstrike","version":"^1.1.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["endgame-*","logs-crowdstrike.fdr*","logs-endpoint.events.process-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n (process.name : \"netsh.exe\" or ?process.pe.original_file_name == \"netsh.exe\") and\n  process.args : \"wlan\" and process.args : \"key*clear\"\n","actions":[]}
{"id":"0d414abf-0211-446d-96f9-c73ee59c831c","updated_at":"2025-06-15T07:42:39.594Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.663Z","created_by":"elastic","name":"LSASS Memory Dump Handle Access","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies handle requests for the Local Security Authority Subsystem Service (LSASS) object access with specific access masks that many tools with a capability to dump memory to disk use (0x1fffff, 0x1010, 0x120089). This rule is tool agnostic as it has been validated against a host of various LSASS dump tools such as SharpDump, Procdump, Mimikatz, Comsvcs etc. It detects this behavior at a low level and does not depend on a specific tool or dump file name.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating LSASS Memory Dump Handle Access\n\nLocal Security Authority Server Service (LSASS) is a process in Microsoft Windows operating systems that is responsible for enforcing security policy on the system. It verifies users logging on to a Windows computer or server, handles password changes, and creates access tokens.\n\nAdversaries may attempt to access credential material stored in LSASS process memory. After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. This is meant to facilitate single sign-on (SSO) ensuring a user isn’t prompted each time resource access is requested. These credential materials can be harvested by an adversary using administrative user or SYSTEM privileges to conduct lateral movement using [alternate authentication material](https://attack.mitre.org/techniques/T1550/).\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n\n### False positive analysis\n\n- There should be very few or no false positives for this rule. If this activity is expected or noisy in your environment, consider adding exceptions — preferably with a combination of user and command line conditions.\n- If the process is related to antivirus or endpoint detection and response solutions, validate that it is installed on the correct path and signed with the company's valid digital signature.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Scope compromised credentials and disable the accounts.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"208dbe77-01ed-4954-8d44-1e5751cb20de","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"to":"now","references":["https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4656","https://twitter.com/jsecurity101/status/1227987828534956033?s=20","https://attack.mitre.org/techniques/T1003/001/","https://threathunterplaybook.com/notebooks/windows/06_credential_access/WIN-170105221010.html","http://findingbad.blogspot.com/2017/","https://www.elastic.co/security-labs/detect-credential-access"],"version":215,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.AccessMask","type":"unknown","ecs":false},{"name":"winlog.event_data.AccessMaskDescription","type":"unknown","ecs":false},{"name":"winlog.event_data.ObjectName","type":"unknown","ecs":false},{"name":"winlog.event_data.ProcessName","type":"keyword","ecs":false}],"setup":"## Setup\n\nEnsure advanced audit policies for Windows are enabled, specifically:\nObject Access policies [Event ID 4656](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4656) (Handle to an Object was Requested)\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nSystem Audit Policies >\nObject Access >\nAudit File System (Success,Failure)\nAudit Handle Manipulation (Success,Failure)\n```\n\nAlso, this event generates only if the object’s [SACL](https://docs.microsoft.com/en-us/windows/win32/secauthz/access-control-lists) has the required access control entry (ACE) to handle the use of specific access rights.\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"any where event.code == \"4656\" and\n\n    winlog.event_data.ObjectName : (\n        \"?:\\\\Windows\\\\System32\\\\lsass.exe\",\n        \"\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\System32\\\\lsass.exe\",\n        \"\\\\Device\\\\HarddiskVolume??\\\\Windows\\\\System32\\\\lsass.exe\") and\n\n    /* The right to perform an operation controlled by an extended access right. */\n\n    (winlog.event_data.AccessMask : (\"0x1fffff\" , \"0x1010\", \"0x120089\", \"0x1F3FFF\") or\n     winlog.event_data.AccessMaskDescription : (\"READ_CONTROL\", \"Read from process memory\"))\n\n     /* Common Noisy False Positives */\n\n    and not winlog.event_data.ProcessName : (\n        \"?:\\\\Program Files\\\\*.exe\",\n        \"?:\\\\Program Files (x86)\\\\*.exe\",\n        \"?:\\\\Windows\\\\system32\\\\wbem\\\\WmiPrvSE.exe\",\n        \"?:\\\\Windows\\\\System32\\\\dllhost.exe\",\n        \"?:\\\\Windows\\\\System32\\\\svchost.exe\",\n        \"?:\\\\Windows\\\\System32\\\\msiexec.exe\",\n        \"?:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\*.exe\",\n        \"?:\\\\Windows\\\\explorer.exe\",\n        \"?:\\\\Windows\\\\System32\\\\poqexec.exe\")\n","actions":[]}
{"id":"f9eebad9-be5a-4c75-8bd2-caad7703bda7","updated_at":"2025-06-15T07:42:43.614Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:50.283Z","created_by":"elastic","name":"System Log File Deletion","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: SentinelOne","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the deletion of sensitive Linux system logs. This may indicate an attempt to evade detection or destroy forensic evidence on a system.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating System Log File Deletion\n\nSystem logs are crucial for monitoring and auditing activities on Linux systems, providing insights into system events and user actions. Adversaries may delete these logs to cover their tracks, hindering forensic investigations. The detection rule identifies suspicious deletions of key log files, excluding benign processes like compression tools, to flag potential evasion attempts. This helps security analysts quickly respond to and investigate unauthorized log deletions.\n\n### Possible investigation steps\n\n- Review the specific file path involved in the deletion event to determine which log file was targeted, using the file.path field from the alert.\n- Investigate the process responsible for the deletion by examining the process.name and related process metadata to identify any suspicious or unauthorized activity.\n- Check for any recent login or session activity around the time of the log deletion by reviewing other logs or authentication records, focusing on the /var/log/auth.log and /var/log/secure files if they are still available.\n- Analyze the user account associated with the deletion event to determine if it has a history of suspicious activity or if it was potentially compromised.\n- Correlate the deletion event with other security alerts or anomalies in the system to identify any patterns or related incidents that might indicate a broader attack or compromise.\n- Assess the impact of the log deletion on the system's security posture and determine if any critical forensic evidence has been lost, considering the importance of the deleted log file.\n\n### False positive analysis\n\n- Compression tools like gzip may trigger false positives when they temporarily delete log files during compression. To mitigate this, ensure gzip is included in the exclusion list within the detection rule.\n- Automated system maintenance scripts might delete or rotate log files as part of routine operations. Review these scripts and add their process names to the exclusion list if they are verified as non-threatening.\n- Docker-related processes, such as dockerd, can also cause false positives when managing container logs. Confirm these activities are legitimate and include dockerd in the exclusion list to prevent unnecessary alerts.\n- Custom backup or log management tools may delete logs as part of their normal function. Identify these tools and add their process names to the exclusion list after verifying their benign nature.\n- Scheduled tasks or cron jobs that manage log files should be reviewed. If they are confirmed to be safe, their associated process names should be added to the exclusion list to avoid false positives.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or data tampering.\n- Conduct a thorough review of user accounts and permissions on the affected system to identify any unauthorized access or privilege escalation.\n- Restore deleted log files from backups if available, to aid in further forensic analysis and to maintain system integrity.\n- Implement enhanced monitoring on the affected system and similar systems to detect any further unauthorized log deletions or suspicious activities.\n- Escalate the incident to the security operations center (SOC) or incident response team for a comprehensive investigation and to determine the scope of the breach.\n- Review and update security policies and configurations to ensure that only authorized processes can delete critical log files, leveraging access controls and audit policies.\n- Consider deploying additional endpoint detection and response (EDR) solutions to improve visibility and detection capabilities for similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"aa895aea-b69c-4411-b110-8d7599634b30","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1070","name":"Indicator Removal","reference":"https://attack.mitre.org/techniques/T1070/","subtechnique":[{"id":"T1070.002","name":"Clear Linux or Mac System Logs","reference":"https://attack.mitre.org/techniques/T1070/002/"}]}]}],"to":"now","references":["https://www.fireeye.com/blog/threat-research/2020/11/live-off-the-land-an-overview-of-unc1945.html","https://www.elastic.co/security-labs/detecting-log4j2-with-elastic-security"],"version":216,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from one of the following integrations:\n- Elastic Defend\n- Auditbeat\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n\n### Auditbeat Setup\nAuditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.\n\n#### The following steps should be executed in order to add the Auditbeat on a Linux System:\n- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.\n- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).\n- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).\n- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).\n- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).\n\n#### Custom Ingest Pipeline\nFor versions <8.2, you need to add a custom ingest pipeline to populate `event.ingested` with @timestamp for non-elastic-agent indexes, like auditbeats/filebeat/winlogbeat etc. For more details to add a custom ingest pipeline refer to the [guide](https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html).\n","type":"eql","language":"eql","index":["auditbeat-*","endgame-*","logs-endpoint.events.file*","logs-sentinel_one_cloud_funnel.*"],"query":"file where host.os.type == \"linux\" and event.type == \"deletion\" and\n  file.path :\n    (\n    \"/var/run/utmp\",\n    \"/var/log/wtmp\",\n    \"/var/log/btmp\",\n    \"/var/log/lastlog\",\n    \"/var/log/faillog\",\n    \"/var/log/syslog\",\n    \"/var/log/messages\",\n    \"/var/log/secure\",\n    \"/var/log/auth.log\",\n    \"/var/log/boot.log\",\n    \"/var/log/kern.log\",\n    \"/var/log/dmesg\"\n    ) and\n    not process.name in (\"gzip\", \"executor\", \"dockerd\")\n","actions":[]}
{"id":"43dcdd17-7311-4afb-90e3-0e4af7b626aa","updated_at":"2025-06-15T07:42:39.603Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:42.044Z","created_by":"elastic","name":"SUNBURST Command and Control Activity","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Command and Control","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":2,"description":"The malware known as SUNBURST targets the SolarWind's Orion business software for command and control. This rule detects post-exploitation command and control activity of the SUNBURST backdoor.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating SUNBURST Command and Control Activity\n\nSUNBURST is a trojanized version of a digitally signed SolarWinds Orion plugin called SolarWinds.Orion.Core.BusinessLayer.dll. The plugin contains a backdoor that communicates via HTTP to third-party servers. After an initial dormant period of up to two weeks, SUNBURST may retrieve and execute commands that instruct the backdoor to transfer files, execute files, profile the system, reboot the system, and disable system services. The malware's network traffic attempts to blend in with legitimate SolarWinds activity by imitating the Orion Improvement Program (OIP) protocol, and the malware stores persistent state data within legitimate plugin configuration files. The backdoor uses multiple obfuscated blocklists to identify processes, services, and drivers associated with forensic and anti-virus tools.\n\nMore details on SUNBURST can be found on the [Mandiant Report](https://www.mandiant.com/resources/sunburst-additional-technical-details).\n\nThis rule identifies suspicious network connections that attempt to blend in with legitimate SolarWinds activity by imitating the Orion Improvement Program (OIP) protocol behavior.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the executable involved using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This activity should not happen legitimately. The security team should address any potential benign true positive (B-TP), as this configuration can put the environment at risk.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Reimage the host operating system and restore compromised files to clean versions.\n- Upgrade SolarWinds systems to the latest version to eradicate the chance of reinfection by abusing the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"22599847-5d13-48cb-8872-5796fee8692b","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/","subtechnique":[{"id":"T1071.001","name":"Web Protocols","reference":"https://attack.mitre.org/techniques/T1071/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1195","name":"Supply Chain Compromise","reference":"https://attack.mitre.org/techniques/T1195/","subtechnique":[{"id":"T1195.002","name":"Compromise Software Supply Chain","reference":"https://attack.mitre.org/techniques/T1195/002/"}]}]}],"to":"now","references":["https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html"],"version":111,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"http.request.body.content","type":"wildcard","ecs":true},{"name":"network.protocol","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.network-*"],"query":"network where host.os.type == \"windows\" and event.type == \"protocol\" and network.protocol == \"http\" and\n  process.name : (\"ConfigurationWizard.exe\",\n                  \"NetFlowService.exe\",\n                  \"NetflowDatabaseMaintenance.exe\",\n                  \"SolarWinds.Administration.exe\",\n                  \"SolarWinds.BusinessLayerHost.exe\",\n                  \"SolarWinds.BusinessLayerHostx64.exe\",\n                  \"SolarWinds.Collector.Service.exe\",\n                  \"SolarwindsDiagnostics.exe\") and\n  (\n    (\n      (http.request.body.content : \"*/swip/Upload.ashx*\" and http.request.body.content : (\"POST*\", \"PUT*\")) or\n      (http.request.body.content : (\"*/swip/SystemDescription*\", \"*/swip/Events*\") and http.request.body.content : (\"GET*\", \"HEAD*\"))\n    ) and\n    not http.request.body.content : \"*solarwinds.com*\"\n  )\n","actions":[]}
{"id":"1254b5e1-bb23-4259-af62-7a8ebc435db3","updated_at":"2025-06-15T07:42:39.590Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:48.242Z","created_by":"elastic","name":"Keychain Password Retrieval via Command Line","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Adversaries may collect keychain storage data from a system to in order to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features, including Wi-Fi and website passwords, secure notes, certificates, and Kerberos.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Keychain Password Retrieval via Command Line\n\nKeychain is macOS's secure storage system for managing user credentials, including passwords and certificates. Adversaries may exploit command-line tools to extract sensitive data from Keychain, targeting browsers like Chrome and Safari. The detection rule identifies suspicious command executions involving Keychain access, focusing on specific arguments and excluding legitimate applications, to flag potential credential theft attempts.\n\n### Possible investigation steps\n\n- Review the process execution details to confirm the presence of the 'security' command with arguments '-wa' or '-ga' and 'find-generic-password' or 'find-internet-password', as these indicate attempts to access Keychain data.\n- Examine the command line for references to browsers such as Chrome, Safari, or others specified in the rule to determine if the target was browser-related credentials.\n- Investigate the parent process of the suspicious command to ensure it is not a legitimate application, specifically checking that it is not the Keeper Password Manager, as this is excluded in the rule.\n- Check the user account associated with the process execution to determine if the activity aligns with expected behavior for that user or if it suggests unauthorized access.\n- Review recent login and access logs for the system to identify any unusual or unauthorized access patterns that could correlate with the suspicious Keychain access attempt.\n- Assess the system for any additional indicators of compromise or related suspicious activities that might suggest a broader security incident.\n\n### False positive analysis\n\n- Legitimate password managers like Keeper Password Manager may trigger the rule due to their access to Keychain for managing user credentials. To handle this, ensure that the process parent executable path for such applications is added to the exclusion list.\n- System maintenance or administrative scripts that access Keychain for legitimate purposes might be flagged. Review these scripts and, if verified as safe, add their specific command patterns to the exception list.\n- Development or testing tools that interact with browsers and require Keychain access could cause false positives. Identify these tools and exclude their specific process names or command-line arguments if they are part of regular operations.\n- Automated backup or synchronization services that access browser credentials stored in Keychain may be mistakenly identified. Confirm these services' legitimacy and exclude their associated processes from the detection rule.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified by the detection rule, particularly those involving the 'security' command with the specified arguments targeting browsers.\n- Conduct a thorough review of the system's keychain access logs to identify any unauthorized access attempts and determine the scope of the compromise.\n- Change all potentially compromised credentials stored in the keychain, including browser passwords and Wi-Fi credentials, and ensure they are updated across all relevant services.\n- Implement additional monitoring on the affected system and similar endpoints to detect any further attempts to access keychain data using command-line tools.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to assess the need for broader organizational response measures.\n- Review and update endpoint security configurations to restrict unauthorized access to keychain data and enhance logging for keychain-related activities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Applications for password management."],"from":"now-9m","rule_id":"9092cd6c-650f-4fa3-8a8a-28256c7489c9","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1555","name":"Credentials from Password Stores","reference":"https://attack.mitre.org/techniques/T1555/","subtechnique":[{"id":"T1555.001","name":"Keychain","reference":"https://attack.mitre.org/techniques/T1555/001/"}]},{"id":"T1555","name":"Credentials from Password Stores","reference":"https://attack.mitre.org/techniques/T1555/","subtechnique":[{"id":"T1555.003","name":"Credentials from Web Browsers","reference":"https://attack.mitre.org/techniques/T1555/003/"}]}]}],"to":"now","references":["https://www.netmeister.org/blog/keychain-passwords.html","https://github.com/priyankchheda/chrome_password_grabber/blob/master/chrome.py","https://ss64.com/osx/security.html","https://www.intezer.com/blog/research/operation-electrorat-attacker-creates-fake-companies-to-drain-your-crypto-wallets/"],"version":113,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.process*"],"query":"process where host.os.type == \"macos\" and event.action == \"exec\" and\n process.name == \"security\" and\n process.args like (\"-wa\", \"-ga\") and process.args like~ (\"find-generic-password\", \"find-internet-password\") and\n process.command_line : (\"*Chrome*\", \"*Chromium*\", \"*Opera*\", \"*Safari*\", \"*Brave*\", \"*Microsoft Edge*\", \"*Firefox*\") and\n not process.parent.executable like \"/Applications/Keeper Password Manager.app/Contents/Frameworks/Keeper Password Manager Helper*/Contents/MacOS/Keeper Password Manager Helper*\"\n","actions":[]}
{"id":"0e2a5da2-c654-4e71-8632-df53edb20101","updated_at":"2025-06-15T07:49:54.045Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:41.029Z","created_by":"elastic","name":"Component Object Model Hijacking","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Defense Evasion","Tactic: Privilege Escalation","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies Component Object Model (COM) hijacking via registry modification. Adversaries may establish persistence by executing malicious content triggered by hijacked references to COM objects.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Component Object Model Hijacking\n\nAdversaries can insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means of persistence.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- Retrieve the file referenced in the registry and determine if it is malicious:\n  - Use a private sandboxed malware analysis system to perform analysis.\n    - Observe and collect information about the following activities:\n      - Attempts to contact external domains and addresses.\n      - File and registry access, modification, and creation activities.\n      - Service creation and launch activities.\n      - Scheduled task creation.\n  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.\n    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- Some Microsoft executables will reference the LocalServer32 registry key value for the location of external COM objects.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"16a52c14-7883-47af-8745-9357803f0d4c","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1546","name":"Event Triggered Execution","reference":"https://attack.mitre.org/techniques/T1546/","subtechnique":[{"id":"T1546.015","name":"Component Object Model Hijacking","reference":"https://attack.mitre.org/techniques/T1546/015/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1546","name":"Event Triggered Execution","reference":"https://attack.mitre.org/techniques/T1546/","subtechnique":[{"id":"T1546.015","name":"Component Object Model Hijacking","reference":"https://attack.mitre.org/techniques/T1546/015/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1112","name":"Modify Registry","reference":"https://attack.mitre.org/techniques/T1112/"}]}],"to":"now","references":["https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/"],"version":116,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true},{"name":"registry.path","type":"keyword","ecs":true},{"name":"user.domain","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*"],"query":"registry where host.os.type == \"windows\" and event.type == \"change\" and\n  /* not necessary but good for filtering privileged installations */\n  user.domain != \"NT AUTHORITY\" and process.executable != null and \n  (\n    (\n      registry.path : \"HK*\\\\InprocServer32\\\\\" and\n      registry.data.strings: (\"scrobj.dll\", \"?:\\\\*\\\\scrobj.dll\") and\n      not registry.path : \"*\\\\{06290BD*-48AA-11D2-8432-006008C3FBFC}\\\\*\"\n    ) or\n\n    (\n      registry.path : \"HKLM\\\\*\\\\InProcServer32\\\\*\" and\n        registry.data.strings : (\"*\\\\Users\\\\*\", \"*\\\\ProgramData\\\\*\")\n    ) or\n\n    /* in general COM Registry changes on Users Hive is less noisy and worth alerting */\n    (\n      registry.path : (\n        \"HKEY_USERS\\\\*\\\\InprocServer32\\\\\",\n        \"HKEY_USERS\\\\*\\\\LocalServer32\\\\\",\n        \"HKEY_USERS\\\\*\\\\DelegateExecute\",\n        \"HKEY_USERS\\\\*\\\\TreatAs\\\\\",\n        \"HKEY_USERS\\\\*\\\\ScriptletURL*\"\n      )  \n    )\n  ) and \n\n      not  (\n            process.code_signature.trusted == true and\n            process.code_signature.subject_name in \n                         (\"Island Technology Inc.\", \"Google LLC\", \"Grammarly, Inc.\", \"Dropbox, Inc\", \"REFINITIV US LLC\", \"HP Inc.\",\n                          \"Citrix Systems, Inc.\", \"Adobe Inc.\", \"Veeam Software Group GmbH\", \"Zhuhai Kingsoft Office Software Co., Ltd.\",\n                          \"Oracle America, Inc.\")\n        ) and \n\n  /* excludes Microsoft signed noisy processes */\n  not\n  (\n    process.name : (\"OneDrive.exe\", \"OneDriveSetup.exe\", \"FileSyncConfig.exe\", \"Teams.exe\", \"MicrosoftEdgeUpdate.exe\", \"msrdcw.exe\", \"MicrosoftEdgeUpdateComRegisterShell64.exe\") and\n    process.code_signature.trusted == true and process.code_signature.subject_name in (\"Microsoft Windows\", \"Microsoft Corporation\")\n  ) and\n  \n  not process.executable : \n                  (\"?:\\\\Program Files (x86)\\\\*.exe\", \n                   \"?:\\\\Program Files\\\\*.exe\",\n                   \"?:\\\\Windows\\\\System32\\\\svchost.exe\", \n                   \"?:\\\\Windows\\\\System32\\\\msiexec.exe\", \n                   \"?:\\\\Windows\\\\SysWOW64\\\\regsvr32.exe\",\n                   \"?:\\\\Windows\\\\System32\\\\regsvr32.exe\",\n                   \"?:\\\\Windows\\\\System32\\\\DriverStore\\\\FileRepository\\\\*.exe\", \n                   \"?:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\Platform\\\\*\\\\MsMpEng.exe\")\n","actions":[]}
{"id":"e9890638-ab60-49f4-89f5-e9996187fb14","updated_at":"2025-06-15T07:47:33.904Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.643Z","created_by":"elastic","name":"Command and Scripting Interpreter via Windows Scripts","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Data Source: Windows Security Event Logs","Data Source: Sysmon","Data Source: SentinelOne","Data Source: Microsoft Defender for Endpoint","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies PowerShell.exe or Cmd.exe execution spawning from Windows Script Host processes Wscript.exe.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Command and Scripting Interpreter via Windows Scripts\n\nPowerShell, a powerful scripting language in Windows, is often targeted by adversaries for executing malicious scripts. Attackers exploit Windows Script Host processes like cscript or wscript to launch PowerShell with obfuscated commands, evading detection. The detection rule identifies such suspicious activity by monitoring PowerShell executions with specific patterns and parent processes, while filtering out known legitimate use cases to reduce false positives.\n\n### Possible investigation steps\n\n- Review the process command line and arguments to identify any obfuscation patterns or suspicious commands, such as Base64 encoding or web requests, that match the query's suspicious patterns.\n- Examine the parent process details, specifically focusing on wscript.exe, cscript.exe, or mshta.exe, to determine if the PowerShell execution was initiated by a legitimate script or a potentially malicious one.\n- Check the process execution context, including the user account and host, to assess if the activity aligns with expected behavior for that user or system.\n- Investigate any network connections or file downloads initiated by the PowerShell process, especially those involving external IP addresses or domains, to identify potential data exfiltration or further malicious activity.\n- Correlate the alert with other security events or logs from the same host or user to identify any preceding or subsequent suspicious activities that could indicate a broader attack campaign.\n\n### False positive analysis\n\n- Legitimate PowerShell commands using non-shortened execution flags may trigger false positives. To manage this, exclude processes with arguments like \"-EncodedCommand\", \"Import-Module*\", and \"-NonInteractive\" unless they are associated with suspicious activity.\n- Third-party installation scripts, such as those related to Microsoft System Center or WebLogic, can cause false positives. Exclude these by filtering out specific parent process arguments or command lines, such as \"Microsoft.SystemCenter.ICMPProbe.WithConsecutiveSamples.vbs\" and \"WEBLOGIC_ARGS_CURRENT_1.DATA\".\n- Routine administrative tasks, like gathering network information, may be flagged. Exclude known scripts like \"gatherNetworkInfo.vbs\" from detection to prevent unnecessary alerts.\n- Exclude specific user scripts or tools that are known to be safe, such as those located in user directories like \"C:\\Users\\Prestige\\AppData\\Local\\Temp\\Rar$*\\KMS_VL_ALL_AIO.cmd\" if they are verified as non-malicious.\n- Regularly review and update exclusion lists to ensure they reflect current legitimate activities and do not inadvertently allow new threats.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further malicious activity and lateral movement.\n- Terminate any suspicious PowerShell processes identified by the alert to stop ongoing malicious execution.\n- Conduct a thorough review of the affected system's PowerShell execution logs to identify any additional malicious scripts or commands that may have been executed.\n- Remove any malicious scripts or files identified during the investigation from the system to prevent re-execution.\n- Restore the system from a known good backup if any critical system files or configurations have been altered by the malicious activity.\n- Update and patch the system to the latest security standards to close any vulnerabilities that may have been exploited.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"2d62889e-e758-4c5e-b57e-c735914ee32a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"},{"id":"T1059.003","name":"Windows Command Shell","reference":"https://attack.mitre.org/techniques/T1059/003/"},{"id":"T1059.005","name":"Visual Basic","reference":"https://attack.mitre.org/techniques/T1059/005/"}]}]}],"to":"now","references":[],"version":205,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"},{"package":"m365_defender","version":"^3.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*","logs-system.security*","logs-windows.forwarded*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"process where host.os.type == \"windows\" and event.action == \"start\" and\n  process.name : (\"powershell.exe\", \"pwsh.exe\", \"cmd.exe\") and\n  process.parent.name : (\"wscript.exe\", \"mshta.exe\") and ?process.parent.args : \"?:\\\\Users\\\\*\"\n","actions":[]}
{"id":"cec2565f-c0c1-4fdf-848f-f17469a2f520","updated_at":"2025-06-15T07:45:31.722Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:41.014Z","created_by":"elastic","name":"RPC (Remote Procedure Call) from the Internet","tags":["Tactic: Initial Access","Domain: Endpoint","Use Case: Threat Detection","Data Source: PAN-OS","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule detects network events that may indicate the use of RPC traffic from the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating RPC (Remote Procedure Call) from the Internet\n\nRPC enables remote management and resource sharing, crucial for system administration. However, when exposed to the Internet, it becomes a target for attackers seeking initial access or backdoor entry. The detection rule identifies suspicious RPC traffic by monitoring TCP port 135 and filtering out internal IP addresses, flagging potential threats from external sources.\n\n### Possible investigation steps\n\n- Review the source IP address of the alert to determine if it is from a known malicious actor or if it has been flagged in previous incidents.\n- Check the destination IP address to confirm it belongs to a critical internal system that should not be exposed to the Internet.\n- Analyze network traffic logs to identify any unusual patterns or volumes of traffic associated with the source IP, focusing on TCP port 135.\n- Investigate any related alerts or logs from the same source IP or destination IP to identify potential patterns or repeated attempts.\n- Assess the potential impact on the affected system by determining if any unauthorized access or changes have occurred.\n- Consult threat intelligence sources to gather additional context on the source IP or any related indicators of compromise.\n\n### False positive analysis\n\n- Internal testing or development environments may generate RPC traffic that appears to originate from external sources. To manage this, add the IP addresses of these environments to the exception list in the detection rule.\n- Legitimate remote management activities by trusted third-party vendors could trigger the rule. Verify the IP addresses of these vendors and include them in the exception list if they are known and authorized.\n- Misconfigured network devices or proxies might route internal RPC traffic through external IP addresses. Review network configurations to ensure proper routing and add any necessary exceptions for known devices.\n- Cloud-based services or applications that use RPC for legitimate purposes might be flagged. Identify these services and adjust the rule to exclude their IP ranges if they are verified as non-threatening.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the attacker.\n- Conduct a thorough examination of the system logs and network traffic to identify any unauthorized access or data exfiltration attempts.\n- Apply the latest security patches and updates to the affected system to address any vulnerabilities that may have been exploited.\n- Change all administrative and user credentials on the affected system and any other systems that may have been accessed using the same credentials.\n- Implement network segmentation to limit the exposure of critical systems and services, ensuring that RPC services are not accessible from the Internet.\n- Monitor the network for any signs of re-infection or further suspicious activity, focusing on traffic patterns similar to those identified in the initial alert.\n- Escalate the incident to the security operations center (SOC) or relevant cybersecurity team for further investigation and to determine if additional systems are compromised.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"143cb236-0956-4f42-a706-814bcaa0cf5a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1190","name":"Exploit Public-Facing Application","reference":"https://attack.mitre.org/techniques/T1190/"}]}],"to":"now","references":["https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"network_traffic","version":"^1.1.0"},{"package":"panw","version":"^5.0.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true}],"setup":"","type":"query","language":"kuery","index":["packetbeat-*","auditbeat-*","filebeat-*","logs-network_traffic.*","logs-panw.panos*"],"query":"(event.dataset: network_traffic.flow or (event.category: (network or network_traffic))) and\n  network.transport:tcp and (destination.port:135 or event.dataset:zeek.dce_rpc) and\n  not source.ip:(\n    10.0.0.0/8 or\n    127.0.0.0/8 or\n    169.254.0.0/16 or\n    172.16.0.0/12 or\n    192.0.0.0/24 or\n    192.0.0.0/29 or\n    192.0.0.8/32 or\n    192.0.0.9/32 or\n    192.0.0.10/32 or\n    192.0.0.170/32 or\n    192.0.0.171/32 or\n    192.0.2.0/24 or\n    192.31.196.0/24 or\n    192.52.193.0/24 or\n    192.168.0.0/16 or\n    192.88.99.0/24 or\n    224.0.0.0/4 or\n    100.64.0.0/10 or\n    192.175.48.0/24 or\n    198.18.0.0/15 or\n    198.51.100.0/24 or\n    203.0.113.0/24 or\n    240.0.0.0/4 or\n    \"::1\" or\n    \"FE80::/10\" or\n    \"FF00::/8\"\n  ) and\n  destination.ip:(\n    10.0.0.0/8 or\n    172.16.0.0/12 or\n    192.168.0.0/16\n  )\n","actions":[]}
{"id":"cacb107c-ba24-4655-9c37-76aeda5b7485","updated_at":"2025-06-15T07:42:39.592Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.152Z","created_by":"elastic","name":"PowerShell Keylogging Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Collection","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Detects the use of Win32 API Functions that can be used to capture user keystrokes in PowerShell scripts. Attackers use this technique to capture user input, looking for credentials and/or other valuable data.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating PowerShell Keylogging Script\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nAttackers can abuse PowerShell capabilities to capture user keystrokes with the goal of stealing credentials and other valuable information as credit card data and confidential conversations.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Determine whether the script stores the captured data locally.\n- Investigate whether the script contains exfiltration capabilities and identify the exfiltration server.\n- Assess network data to determine if the host communicated with the exfiltration server.\n\n### False positive analysis\n\n- Regular users do not have a business justification for using scripting utilities to capture keystrokes, making false positives unlikely. In the case of authorized benign true positives (B-TPs), exceptions can be added.\n\n### Related rules\n\n- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Prioritize the response if this alert involves key executives or potentially valuable targets for espionage.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"bd2c86a0-8b61-4457-ab38-96943984e889","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0009","name":"Collection","reference":"https://attack.mitre.org/tactics/TA0009/"},"technique":[{"id":"T1056","name":"Input Capture","reference":"https://attack.mitre.org/techniques/T1056/","subtechnique":[{"id":"T1056.001","name":"Keylogging","reference":"https://attack.mitre.org/techniques/T1056/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]},{"id":"T1106","name":"Native API","reference":"https://attack.mitre.org/techniques/T1106/"}]}],"to":"now","references":["https://github.com/EmpireProject/Empire/blob/master/data/module_source/collection/Get-Keystrokes.ps1","https://github.com/MojtabaTajik/FunnyKeylogger/blob/master/FunnyLogger.ps1"],"version":217,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  (\n   powershell.file.script_block_text : (GetAsyncKeyState or NtUserGetAsyncKeyState or GetKeyboardState or \"Get-Keystrokes\") or\n   powershell.file.script_block_text : (\n        (SetWindowsHookA or SetWindowsHookW or SetWindowsHookEx or SetWindowsHookExA or NtUserSetWindowsHookEx) and\n        (GetForegroundWindow or GetWindowTextA or GetWindowTextW or \"WM_KEYBOARD_LL\" or \"WH_MOUSE_LL\")\n   )\n   ) and not user.id : \"S-1-5-18\"\n  and not powershell.file.script_block_text : (\n    \"sentinelbreakpoints\" and \"Set-PSBreakpoint\"\n  )\n","actions":[]}
{"id":"b0edc2e0-45cd-401f-86cc-fe12a9c242cb","updated_at":"2025-06-15T07:42:41.606Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.331Z","created_by":"elastic","name":"Potential Shadow Credentials added to AD Object","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Active Directory","Resources: Investigation Guide","Use Case: Active Directory Monitoring","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Identify the modification of the msDS-KeyCredentialLink attribute in an Active Directory Computer or User Object. Attackers can abuse control over the object and create a key pair, append to raw public key in the attribute, and obtain persistent and stealthy access to the target user or computer object.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Shadow Credentials added to AD Object\n\nThe msDS-KeyCredentialLink is an Active Directory (AD) attribute that links cryptographic certificates to a user or computer for domain authentication.\n\nAttackers with write privileges on this attribute over an object can abuse it to gain access to the object or maintain persistence. This means they can authenticate and perform actions on behalf of the exploited identity, and they can use Shadow Credentials to request Ticket Granting Tickets (TGTs) on behalf of the identity.\n\n#### Possible investigation steps\n\n- Identify whether Windows Hello for Business (WHfB) and/or Azure AD is used in the environment.\n  - Review the event ID 4624 for logon events involving the subject identity (`winlog.event_data.SubjectUserName`).\n    - Check whether the `source.ip` is the server running Azure AD Connect.\n- Contact the account and system owners and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Review the event IDs 4768 and 4769 for suspicious ticket requests involving the modified identity (`winlog.event_data.ObjectDN`).\n  - Extract the source IP addresses from these events and use them as indicators of compromise (IoCs) to investigate whether the host is compromised and to scope the attacker's access to the environment.\n\n### False positive analysis\n\n- Administrators might use custom accounts on Azure AD Connect. If this is the case, make sure the account is properly secured. You can also create an exception for the account if expected activity makes too much noise in your environment.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n  - Remove the Shadow Credentials from the object.\n- Investigate how the attacker escalated privileges and identify systems they used to conduct lateral movement. Use this information to determine ways the attacker could regain access to the environment.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Modifications in the msDS-KeyCredentialLink attribute can be done legitimately by the Azure AD Connect synchronization account or the ADFS service account. These accounts can be added as Exceptions."],"from":"now-9m","rule_id":"79f97b31-480e-4e63-a7f4-ede42bf2c6de","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1556","name":"Modify Authentication Process","reference":"https://attack.mitre.org/techniques/T1556/"}]}],"to":"now","references":["https://posts.specterops.io/shadow-credentials-abusing-key-trust-account-mapping-for-takeover-8ee1a53566ab","https://www.thehacker.recipes/ad/movement/kerberos/shadow-credentials","https://github.com/OTRF/Set-AuditRule","https://cyberstoph.org/posts/2022/03/detecting-shadow-credentials/"],"version":216,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.AttributeLDAPDisplayName","type":"unknown","ecs":false},{"name":"winlog.event_data.AttributeValue","type":"unknown","ecs":false},{"name":"winlog.event_data.SubjectUserName","type":"keyword","ecs":false}],"setup":"## Setup\n\nThe 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Changes (Success,Failure)\n```\n\nThe above policy does not cover User objects, so we need to set up an AuditRule using https://github.com/OTRF/Set-AuditRule.\nAs this specifies the msDS-KeyCredentialLink Attribute GUID, it is expected to be low noise.\n\n```\nSet-AuditRule -AdObjectPath 'AD:\\CN=Users,DC=Domain,DC=com' -WellKnownSidType WorldSid -Rights WriteProperty -InheritanceFlags Children -AttributeGUID 5b47d60f-6090-40b2-9f37-2a4de88f3063 -AuditFlags Success\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-system.security*","logs-windows.forwarded*"],"query":"event.code:\"5136\" and winlog.event_data.AttributeLDAPDisplayName:\"msDS-KeyCredentialLink\" and\n  winlog.event_data.AttributeValue :B\\:828* and\n  not winlog.event_data.SubjectUserName: MSOL_*\n","actions":[]}
{"id":"0a4f1260-9c1b-4688-b13b-9e0bd5dda855","updated_at":"2025-06-15T07:51:52.152Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:46.225Z","created_by":"elastic","name":"Sensitive Files Compression","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Collection","Tactic: Credential Access","Data Source: Elastic Endgame","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the use of a compression utility to collect known files containing sensitive information, such as credentials and system configurations.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Sensitive Files Compression\n\nCompression utilities like zip, tar, and gzip are essential for efficiently managing and transferring files. However, adversaries can exploit these tools to compress and exfiltrate sensitive data, such as SSH keys and configuration files. The detection rule identifies suspicious compression activities by monitoring process executions involving these utilities and targeting known sensitive file paths, thereby flagging potential data collection and credential access attempts.\n\n### Possible investigation steps\n\n- Review the process execution details to identify the user account associated with the compression activity, focusing on the process.name and process.args fields.\n- Examine the command line arguments (process.args) to determine which specific sensitive files were targeted for compression.\n- Check the event.timestamp to establish a timeline and correlate with other potentially suspicious activities on the host.\n- Investigate the host's recent login history and user activity to identify any unauthorized access attempts or anomalies.\n- Analyze network logs for any outbound connections from the host around the time of the event to detect potential data exfiltration attempts.\n- Assess the integrity and permissions of the sensitive files involved to determine if they have been altered or accessed inappropriately.\n\n### False positive analysis\n\n- Routine system backups or administrative tasks may trigger the rule if they involve compressing sensitive files for legitimate purposes. Users can create exceptions for known backup scripts or administrative processes by excluding specific process names or command-line arguments associated with these tasks.\n- Developers or system administrators might compress configuration files during development or deployment processes. To handle this, users can whitelist specific user accounts or directories commonly used for development activities, ensuring these actions are not flagged as suspicious.\n- Automated scripts or cron jobs that regularly archive logs or configuration files could be mistakenly identified as threats. Users should review and exclude these scheduled tasks by identifying their unique process identifiers or execution patterns.\n- Security tools or monitoring solutions that periodically compress and transfer logs for analysis might be misinterpreted as malicious. Users can exclude these tools by specifying their process names or paths in the detection rule exceptions.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further data exfiltration and unauthorized access.\n- Terminate any suspicious processes identified by the detection rule to halt ongoing compression and potential data exfiltration activities.\n- Conduct a thorough review of the compressed files and their contents to assess the extent of sensitive data exposure and determine if any data has been exfiltrated.\n- Change all credentials associated with the compromised files, such as SSH keys and AWS credentials, to prevent unauthorized access using stolen credentials.\n- Restore any altered or deleted configuration files from a known good backup to ensure system integrity and functionality.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring and logging for compression utilities and sensitive file access to detect and respond to similar threats more effectively in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"6b84d470-9036-4cc0-a27c-6d90bbfe81ab","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1552","name":"Unsecured Credentials","reference":"https://attack.mitre.org/techniques/T1552/","subtechnique":[{"id":"T1552.001","name":"Credentials In Files","reference":"https://attack.mitre.org/techniques/T1552/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0009","name":"Collection","reference":"https://attack.mitre.org/tactics/TA0009/"},"technique":[{"id":"T1560","name":"Archive Collected Data","reference":"https://attack.mitre.org/techniques/T1560/","subtechnique":[{"id":"T1560.001","name":"Archive via Utility","reference":"https://attack.mitre.org/techniques/T1560/001/"}]}]}],"to":"now","references":["https://www.trendmicro.com/en_ca/research/20/l/teamtnt-now-deploying-ddos-capable-irc-bot-tntbotinger.html"],"version":211,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from one of the following integrations:\n- Elastic Defend\n- Auditbeat\n\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows\nthe Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest to select \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n\n### Auditbeat Setup\nAuditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.\n\n#### The following steps should be executed in order to add the Auditbeat on a Linux System:\n- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.\n- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).\n- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).\n- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).\n- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).\n","type":"new_terms","query":"event.category:process and host.os.type:linux and event.type:start and\n  process.name:(zip or tar or gzip or hdiutil or 7z) and\n  process.args:\n    (\n      /root/.ssh/id_rsa or\n      /root/.ssh/id_rsa.pub or\n      /root/.ssh/id_ed25519 or\n      /root/.ssh/id_ed25519.pub or\n      /root/.ssh/authorized_keys or\n      /root/.ssh/authorized_keys2 or\n      /root/.ssh/known_hosts or\n      /root/.bash_history or\n      /etc/hosts or\n      /home/*/.ssh/id_rsa or\n      /home/*/.ssh/id_rsa.pub or\n      /home/*/.ssh/id_ed25519 or\n      /home/*/.ssh/id_ed25519.pub or\n      /home/*/.ssh/authorized_keys or\n      /home/*/.ssh/authorized_keys2 or\n      /home/*/.ssh/known_hosts or\n      /home/*/.bash_history or\n      /root/.aws/credentials or\n      /root/.aws/config or\n      /home/*/.aws/credentials or\n      /home/*/.aws/config or\n      /root/.docker/config.json or\n      /home/*/.docker/config.json or\n      /etc/group or\n      /etc/passwd or\n      /etc/shadow or\n      /etc/gshadow\n    )\n","new_terms_fields":["host.id","process.command_line","process.parent.executable"],"history_window_start":"now-10d","index":["auditbeat-*","logs-endpoint.events.*","endgame-*"],"language":"kuery","actions":[]}
{"id":"7b476c3d-4eaf-4739-a9c9-10e5b954fb69","updated_at":"2025-06-15T07:42:39.602Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.374Z","created_by":"elastic","name":"PowerShell MiniDump Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"This rule detects PowerShell scripts capable of dumping process memory using WindowsErrorReporting or Dbghelp.dll MiniDumpWriteDump. Attackers can use this tooling to dump LSASS and get access to credentials.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating PowerShell MiniDump Script\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nAttackers can abuse Process Memory Dump capabilities to extract credentials from LSASS or to obtain other privileged information stored in the process memory.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Check if the imported function was executed and which process it targeted.\n\n### False positive analysis\n\n- Regular users do not have a business justification for using scripting utilities to dump process memory, making false positives unlikely.\n\n### Related rules\n\n- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe\n- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["PowerShell scripts that use this capability for troubleshooting."],"from":"now-9m","rule_id":"577ec21e-56fe-4065-91d8-45eb8224fe77","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Out-Minidump.ps1","https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Get-ProcessMiniDump.ps1","https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md"],"version":212,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and powershell.file.script_block_text:(MiniDumpWriteDump or MiniDumpWithFullMemory or pmuDetirWpmuDiniM) and not user.id : \"S-1-5-18\"\n","actions":[]}
{"id":"e63c4c23-3866-4a67-a2fc-bd55078a61ed","updated_at":"2025-06-15T07:42:43.624Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.396Z","created_by":"elastic","name":"Potential DLL Side-Loading via Trusted Microsoft Programs","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Tactic: Execution","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies an instance of a Windows trusted program that is known to be vulnerable to DLL Search Order Hijacking starting after being renamed or from a non-standard path. This is uncommon behavior and may indicate an attempt to evade defenses via side loading a malicious DLL within the memory space of one of those processes.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential DLL Side-Loading via Trusted Microsoft Programs\n\nDLL side-loading exploits the DLL search order to load malicious code into trusted Microsoft programs, which are often whitelisted by security tools. Adversaries rename or relocate these programs to execute unauthorized DLLs, evading detection. The detection rule identifies unusual execution paths or renamed instances of these programs, signaling potential misuse and enabling timely threat response.\n\n### Possible investigation steps\n\n- Review the process details to confirm the original file name and the path from which the process was executed. Check if the process.pe.original_file_name matches any of the specified trusted programs like \"WinWord.exe\", \"EXPLORER.EXE\", \"w3wp.exe\", or \"DISM.EXE\".\n- Investigate the process execution path to determine if it deviates from the standard paths listed in the query, such as \"?:\\Windows\\explorer.exe\" or \"?:\\Program Files\\Microsoft Office\\root\\Office*\\WINWORD.EXE\".\n- Examine the process creation history and parent process to identify any unusual or suspicious parent-child relationships that might indicate malicious activity.\n- Check for any recent file modifications or creations in the directory from which the process was executed, which could suggest the presence of a malicious DLL.\n- Correlate the event with other security logs or alerts from data sources like Elastic Endgame, Elastic Defend, Sysmon, or Microsoft Defender for Endpoint to gather additional context and identify potential patterns of malicious behavior.\n- Assess the risk and impact of the event by considering the risk score and severity level provided, and determine if immediate containment or further investigation is necessary.\n\n### False positive analysis\n\n- Legitimate software updates or installations may temporarily execute trusted Microsoft programs from non-standard paths. Users can create exceptions for known update processes to prevent false alerts.\n- Custom enterprise applications might use renamed instances of trusted Microsoft programs for legitimate purposes. Identify and whitelist these specific applications to avoid unnecessary alerts.\n- Virtual environments or sandboxed applications may execute trusted programs from unusual paths as part of their normal operation. Review and exclude these environments if they are known and trusted.\n- Security or IT administrative tools might mimic trusted Microsoft programs for monitoring or management tasks. Verify these tools and add them to an exception list if they are part of standard operations.\n- Development or testing environments often involve renamed or relocated executables for debugging purposes. Ensure these environments are recognized and excluded from the detection rule to reduce false positives.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent further spread of the potential threat and unauthorized access.\n- Terminate the suspicious process identified by the detection rule to stop any ongoing malicious activity.\n- Conduct a forensic analysis of the affected system to identify any malicious DLLs or additional compromised files, and remove them.\n- Restore the affected system from a known good backup to ensure all malicious changes are reverted.\n- Update and patch all software on the affected system, focusing on the trusted Microsoft programs identified in the alert, to mitigate vulnerabilities exploited by DLL side-loading.\n- Monitor the network for any signs of lateral movement or additional compromised systems, using the indicators of compromise identified during the investigation.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems or data have been affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"1160dcdb-0a0a-4a79-91d8-9b84616edebd","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/"},{"id":"T1574","name":"Hijack Execution Flow","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.002","name":"DLL Side-Loading","reference":"https://attack.mitre.org/techniques/T1574/002/"}]}]}],"to":"now","references":[],"version":215,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-windows.sysmon_operational-*","endgame-*","logs-m365_defender.event-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.pe.original_file_name in (\"WinWord.exe\", \"EXPLORER.EXE\", \"w3wp.exe\", \"DISM.EXE\") and \n  not process.executable : (\"?:\\\\Windows\\\\explorer.exe\", \n                            \"?:\\\\Windows\\\\SysWOW64\\\\explorer.exe\",\n                            \"?:\\\\Program Files\\\\Microsoft Office\\\\root\\\\Office*\\\\WINWORD.EXE\", \n                            \"?:\\\\Program Files (x86)\\\\Microsoft Office\\\\root\\\\Office*\\\\WINWORD.EXE\", \n                            \"?:\\\\Windows\\\\System32\\\\Dism.exe\", \n                            \"?:\\\\Windows\\\\SysWOW64\\\\Dism.exe\",  \n                            \"?:\\\\Program Files (x86)\\\\Windows Kits\\\\10\\\\Assessment and Deployment Kit\\\\Deployment Tools\\\\amd64\\\\DISM\\\\dism.exe\",\n                            \"?:\\\\Windows\\\\System32\\\\inetsrv\\\\w3wp.exe\", \n                            \"?:\\\\Windows\\\\SysWOW64\\\\inetsrv\\\\w3wp.exe\")\n","actions":[]}
{"id":"15e14445-29d3-4956-ab08-a84f0396d22d","updated_at":"2025-06-15T07:42:39.586Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:49.285Z","created_by":"elastic","name":"Potential Reverse Shell Activity via Terminal","tags":["Domain: Endpoint","OS: Linux","OS: macOS","Use Case: Threat Detection","Tactic: Execution","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies the execution of a shell process with suspicious arguments which may be indicative of reverse shell activity.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Reverse Shell Activity via Terminal\n\nA reverse shell is a mechanism that's abused to connect back to an attacker-controlled system. It effectively redirects the system's input and output and delivers a fully functional remote shell to the attacker. Even private systems are vulnerable since the connection is outgoing. This activity is typically the result of vulnerability exploitation, malware infection, or penetration testing.\n\nThis rule identifies commands that are potentially related to reverse shell activities using shell applications.\n\n#### Possible investigation steps\n\n- Examine the command line and extract the target domain or IP address information.\n  - Check if the domain is newly registered or unexpected.\n  - Check the reputation of the domain or IP address.\n  - Scope other potentially compromised hosts in your environment by mapping hosts that also communicated with the domain or IP address.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate any abnormal account behavior, such as command executions, file creations or modifications, and network connections.\n- Investigate any abnormal behavior by the subject process such as network connections, file modifications, and any spawned child processes.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious must be monitored by the security team.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Take actions to terminate processes and connections used by the attacker.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"a1a0375f-22c2-48c0-81a4-7c2d11cc6856","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/"}]}],"to":"now","references":["https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md","https://github.com/WangYihang/Reverse-Shell-Manager","https://www.netsparker.com/blog/web-security/understanding-reverse-shells/","https://www.elastic.co/security-labs/detecting-log4j2-with-elastic-security"],"version":111,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.command_line","type":"wildcard","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.command_line","type":"wildcard","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["auditbeat-*","logs-endpoint.events.*"],"query":"process where event.type in (\"start\", \"process_started\") and\n  process.name in (\"sh\", \"bash\", \"zsh\", \"dash\", \"zmodload\") and\n  process.args : (\"*/dev/tcp/*\", \"*/dev/udp/*\", \"*zsh/net/tcp*\", \"*zsh/net/udp*\") and\n\n  /* noisy FPs */\n  not (process.parent.name : \"timeout\" and process.executable : \"/var/lib/docker/overlay*\") and\n  not process.command_line : (\n    \"*/dev/tcp/sirh_db/*\", \"*/dev/tcp/remoteiot.com/*\", \"*dev/tcp/elk.stag.one/*\", \"*dev/tcp/kafka/*\",\n    \"*/dev/tcp/$0/$1*\", \"*/dev/tcp/127.*\", \"*/dev/udp/127.*\", \"*/dev/tcp/localhost/*\", \"*/dev/tcp/itom-vault/*\") and\n  not process.parent.command_line : \"runc init\"\n","actions":[]}
{"id":"ef6b0b37-a11f-4a31-bce9-03d860c4d70c","updated_at":"2025-06-15T07:42:43.615Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.903Z","created_by":"elastic","name":"Potential Credential Access via Renamed COM+ Services DLL","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Defense Evasion","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious renamed COMSVCS.DLL Image Load, which exports the MiniDump function that can be used to dump a process memory. This may indicate an attempt to dump LSASS memory while bypassing command-line based detection in preparation for credential access.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Credential Access via Renamed COM+ Services DLL\n\nCOMSVCS.DLL is a Windows library that exports the MiniDump function, which can be used to dump a process memory. Adversaries may attempt to dump LSASS memory using a renamed COMSVCS.DLL to bypass command-line based detection and gain unauthorized access to credentials.\n\nThis rule identifies suspicious instances of rundll32.exe loading a renamed COMSVCS.DLL image, which can indicate potential abuse of the MiniDump function for credential theft.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate any abnormal behavior by the subject process, such as network connections, registry or file modifications, and any spawned child processes.\n- Identify the process that created the DLL using file creation events.\n   - Inspect the file for useful metadata, such as file size and creation or modification time.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable and DLL using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process's `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- Look for the presence of relevant artifacts on other systems. Identify commonalities and differences between potentially compromised systems.\n\n### False positive analysis\n\n- False positives may include legitimate instances of rundll32.exe loading a renamed COMSVCS.DLL image for non-malicious purposes, such as during software development, testing, or troubleshooting.\n\n### Related Rules\n\n- Potential Credential Access via LSASS Memory Dump - 9960432d-9b26-409f-972b-839a959e79e2\n- Suspicious Module Loaded by LSASS - 3a6001a0-0939-4bbe-86f4-47d8faeb7b97\n- Suspicious Lsass Process Access - 128468bf-cab1-4637-99ea-fdf3780a4609\n- LSASS Process Access via Windows API - ff4599cb-409f-4910-a239-52e4e6f532ff\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n  - If malicious activity is confirmed, perform a broader investigation to identify the scope of the compromise and determine the appropriate remediation steps.\n- Implement Elastic Endpoint Security to detect and prevent further post exploitation activities in the environment.\n   - Contain the affected system by isolating it from the network to prevent further spread of the attack.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Restore the affected system to its operational state by applying any necessary patches, updates, or configuration changes.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c5c9f591-d111-4cf8-baec-c26a39bc31ef","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1218","name":"System Binary Proxy Execution","reference":"https://attack.mitre.org/techniques/T1218/","subtechnique":[{"id":"T1218.011","name":"Rundll32","reference":"https://attack.mitre.org/techniques/T1218/011/"}]}]}],"to":"now","references":["https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/"],"version":211,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"event.code","type":"keyword","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.pe.imphash","type":"keyword","ecs":true},{"name":"file.pe.original_file_name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nYou will need to enable logging of ImageLoads in your Sysmon configuration to include COMSVCS.DLL by Imphash or Original\nFile Name.\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-windows.sysmon_operational-*"],"query":"sequence by process.entity_id with maxspan=1m\n [process where host.os.type == \"windows\" and event.category == \"process\" and\n    process.name : \"rundll32.exe\"]\n [process where host.os.type == \"windows\" and event.category == \"process\" and event.dataset : \"windows.sysmon_operational\" and event.code == \"7\" and\n   (file.pe.original_file_name : \"COMSVCS.DLL\" or file.pe.imphash : \"EADBCCBB324829ACB5F2BBE87E5549A8\") and\n    /* renamed COMSVCS */\n    not file.name : \"COMSVCS.DLL\"]\n","actions":[]}
{"id":"54669c60-21de-4b69-b9c9-2de32714003a","updated_at":"2025-06-15T07:42:39.605Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:25.616Z","created_by":"elastic","name":"Potential PowerShell HackTool Script by Author","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects known PowerShell offensive tooling author's name in PowerShell scripts. Attackers commonly use out-of-the-box offensive tools without modifying the code, which may still contain the author artifacts. This rule identifies common author handles found in popular PowerShell scripts used for red team exercises.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential PowerShell HackTool Script by Author\n\nPowerShell is a powerful scripting language and automation framework used in Windows environments for task automation and configuration management. Adversaries exploit PowerShell's capabilities to execute malicious scripts, often leveraging well-known offensive tools without altering the original code. The detection rule identifies scripts containing specific author names linked to these tools, flagging potential misuse by recognizing unmodified author artifacts in the script block text.\n\n### Possible investigation steps\n\n- Review the PowerShell script block text associated with the alert to identify the specific author name that triggered the detection. This can provide insight into the potential tool or script being used.\n- Examine the process details, including the parent process and command line arguments, to understand the context in which the PowerShell script was executed. This can help determine if the execution was part of a legitimate task or a suspicious activity.\n- Check the host's recent activity logs for any other unusual or related events, such as network connections, file modifications, or other process executions, to identify potential lateral movement or data exfiltration attempts.\n- Investigate the user account under which the PowerShell script was executed to determine if it has been compromised or if the activity aligns with the user's typical behavior.\n- Correlate the alert with other security tools and logs, such as antivirus or endpoint detection and response (EDR) solutions, to gather additional context and confirm whether the activity is malicious.\n\n### False positive analysis\n\n- Scripts used in legitimate red team exercises may trigger the rule due to the presence of known author names. To manage this, create exceptions for scripts verified as part of authorized security assessments.\n- PowerShell scripts from open-source security tools used for internal testing or training might be flagged. Ensure these tools are documented and approved, then exclude them from the rule.\n- Automated scripts for system administration that include code snippets from well-known authors could be mistakenly identified. Review and whitelist these scripts if they are part of routine operations.\n- Security research and development activities using sample scripts from recognized authors may cause alerts. Maintain a list of such activities and exclude them from detection to avoid unnecessary alerts.\n- Internal development teams using PowerShell scripts for legitimate purposes might inadvertently use code from popular authors. Conduct regular reviews and exclude these scripts if they are deemed non-threatening.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further execution of potentially malicious scripts and lateral movement.\n- Terminate any suspicious PowerShell processes identified by the alert to halt ongoing malicious activity.\n- Conduct a thorough review of the PowerShell script block text to confirm the presence of known offensive tool author names and assess the potential impact.\n- Remove any unauthorized or malicious scripts from the affected system and ensure that all legitimate scripts are verified and restored from a clean backup.\n- Update endpoint protection and antivirus signatures to detect and block the specific PowerShell scripts and associated indicators of compromise (IOCs) identified in the alert.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring and logging for PowerShell activity across the network to detect similar threats in the future, leveraging the MITRE ATT&CK framework for guidance on relevant techniques and tactics.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"2553a9af-52a4-4a05-bb03-85b2a479a0a0","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"host.os.type:windows and event.category:process and\n  powershell.file.script_block_text : (\n      \"mattifestation\" or \"JosephBialek\" or\n      \"harmj0y\" or \"ukstufus\" or\n      \"SecureThisShit\" or \"Matthew Graeber\" or\n      \"secabstraction\" or \"mgeeky\" or\n      \"oddvarmoe\" or \"am0nsec\" or\n      \"obscuresec\" or \"sixdub\" or\n      \"darkoperator\" or \"funoverip\" or\n      \"rvrsh3ll\" or \"kevin_robertson\" or\n      \"dafthack\" or \"r4wd3r\" or\n      \"danielhbohannon\" or \"OneLogicalMyth\" or\n      \"cobbr_io\" or \"xorrior\" or\n      \"PetrMedonos\" or \"citronneur\" or\n      \"eladshamir\" or \"RastaMouse\" or\n      \"enigma0x3\" or \"FuzzySec\" or\n      \"424f424f\" or \"jaredhaight\" or\n      \"fullmetalcache\" or \"Hubbl3\" or\n      \"curi0usJack\" or \"Cx01N\" or\n      \"itm4n\" or \"nurfed1\" or\n      \"cfalta\" or \"Scott Sutherland\" or\n      \"_nullbind\" or \"_tmenochet\" or\n      \"jaredcatkinson\" or \"ChrisTruncer\" or\n      \"monoxgas\" or \"TheRealWover\" or\n      \"splinter_code\"\n  )\n","actions":[]}
{"id":"fee32b40-3098-4863-8ddb-d18e65c89334","updated_at":"2025-06-15T07:51:22.139Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.662Z","created_by":"elastic","name":"Unusual Network Activity from a Windows System Binary","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: Sysmon"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies network activity from unexpected system applications. This may indicate adversarial activity as these applications are often leveraged by adversaries to execute code and evade detection.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Unusual Network Activity from a Windows System Binary\n\nAttackers can abuse certain trusted developer utilities to proxy the execution of malicious payloads. Since these utilities are usually signed, they can bypass the security controls that were put in place to prevent or detect direct execution.\n\nThis rule identifies network connections established by trusted developer utilities, which can indicate abuse to execute payloads or process masquerading.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate abnormal behaviors observed by the subject process, such as registry or file modifications, and any spawned child processes.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- As trusted developer utilities have dual-use purposes, alerts derived from this rule are not essentially malicious. If these utilities are contacting internal or known trusted domains, review their security and consider creating exceptions if the domain is safe.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n  - If the malicious file was delivered via phishing:\n    - Block the email sender from sending future emails.\n    - Block the malicious web pages.\n    - Remove emails from the sender from mailboxes.\n    - Consider improvements to the security awareness program.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"1fe3b299-fbb5-4657-a937-1d746f2c711a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/","subtechnique":[{"id":"T1036.005","name":"Match Legitimate Resource Name or Location","reference":"https://attack.mitre.org/techniques/T1036/005/"}]},{"id":"T1127","name":"Trusted Developer Utilities Proxy Execution","reference":"https://attack.mitre.org/techniques/T1127/","subtechnique":[{"id":"T1127.001","name":"MSBuild","reference":"https://attack.mitre.org/techniques/T1127/001/"},{"id":"T1218.005","name":"Mshta","reference":"https://attack.mitre.org/techniques/T1218/005/"}]}]}],"to":"now","references":[],"version":217,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"dns.question.name","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.network-*","winlogbeat-*","logs-windows.sysmon_operational-*"],"query":"sequence by process.entity_id with maxspan=5m\n  [process where host.os.type == \"windows\" and event.type == \"start\" and\n\n     /* known applocker bypasses */\n     (process.name : \"bginfo.exe\" or\n      process.name : \"cdb.exe\" or\n      process.name : \"control.exe\" or\n      process.name : \"cmstp.exe\" or\n      process.name : \"csi.exe\" or\n      process.name : \"dnx.exe\" or\n      process.name : \"fsi.exe\" or\n      process.name : \"ieexec.exe\" or\n      process.name : \"iexpress.exe\" or\n      process.name : \"installutil.exe\" or\n      process.name : \"Microsoft.Workflow.Compiler.exe\" or\n      process.name : \"MSBuild.exe\" or\n      process.name : \"msdt.exe\" or\n      process.name : \"mshta.exe\" or\n      process.name : \"wscript.exe\" or\n      process.name : \"msiexec.exe\" or\n      process.name : \"msxsl.exe\" or\n      process.name : \"odbcconf.exe\" or\n      process.name : \"rcsi.exe\" or\n      process.name : \"regsvr32.exe\" or\n      process.name : \"xwizard.exe\")]\n  [network where\n     (process.name : \"bginfo.exe\" or\n      process.name : \"cdb.exe\" or\n      process.name : \"control.exe\" or\n      process.name : \"cmstp.exe\" or\n      process.name : \"csi.exe\" or\n      process.name : \"dnx.exe\" or\n      process.name : \"fsi.exe\" or\n      process.name : \"ieexec.exe\" or\n      process.name : \"iexpress.exe\" or\n      process.name : \"installutil.exe\" or\n      process.name : \"Microsoft.Workflow.Compiler.exe\" or\n      (\n        process.name : \"msbuild.exe\" and\n          destination.ip != \"127.0.0.1\"\n      ) or\n      process.name : \"msdt.exe\" or\n      process.name : \"mshta.exe\" or\n      (\n        process.name : \"msiexec.exe\" and not\n        dns.question.name : (\n           \"ocsp.digicert.com\", \"ocsp.verisign.com\", \"ocsp.comodoca.com\", \"ocsp.entrust.net\", \"ocsp.usertrust.com\",\n           \"ocsp.godaddy.com\", \"ocsp.camerfirma.com\", \"ocsp.globalsign.com\", \"ocsp.sectigo.com\", \"*.local\"\n        ) and\n        /* Localhost, DigiCert and Comodo CA IP addresses */\n        not cidrmatch(destination.ip, \"127.0.0.1\", \"192.229.211.108/32\", \"192.229.221.95/32\",\n                      \"152.195.38.76/32\", \"104.18.14.101/32\")\n      ) or\n      process.name : \"msxsl.exe\" or\n      process.name : \"odbcconf.exe\" or\n      process.name : \"rcsi.exe\" or\n      process.name : \"regsvr32.exe\" or\n      process.name : \"xwizard.exe\") and \n      \n      not dns.question.name : (\"localhost\", \"setup.officetimeline.com\", \"us.deployment.endpoint.ingress.rapid7.com\", \n        \"ctldl.windowsupdate.com\", \"crl?.digicert.com\", \"ocsp.digicert.com\", \"addon-cms-asl.eu.goskope.com\", \"crls.ssl.com\", \n        \"evcs-ocsp.ws.symantec.com\", \"s.symcd.com\", \"s?.symcb.com\", \"crl.verisign.com\", \"oneocsp.microsoft.com\", \"crl.verisign.com\", \n        \"aka.ms\", \"crl.comodoca.com\", \"acroipm2.adobe.com\", \"sv.symcd.com\") and \n\n      /* host query itself */\n      not startswith~(dns.question.name, host.name)\n      ]\n","actions":[]}
{"id":"1ed4021f-e251-46c2-bc80-c9e7f2a9835a","updated_at":"2025-06-15T07:42:43.623Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.113Z","created_by":"elastic","name":"Potential Invoke-Mimikatz PowerShell Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Mimikatz is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many other features that make it useful for testing the security of networks. This rule detects Invoke-Mimikatz PowerShell script and alike.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Potential Invoke-Mimikatz PowerShell Script\n\n[Mimikatz](https://github.com/gentilkiwi/mimikatz) is an open-source tool used to collect, decrypt, and/or use cached credentials. This tool is commonly abused by adversaries during the post-compromise stage where adversaries have gained an initial foothold on an endpoint and are looking to elevate privileges and seek out additional authentication objects such as tokens/hashes/credentials that can then be used to move laterally and pivot across a network.\n\nThis rule looks for PowerShell scripts that load mimikatz in memory, like Invoke-Mimikataz, which are used to dump credentials from the Local Security Authority Subsystem Service (LSASS). Any activity triggered from this rule should be treated with high priority as it typically represents an active adversary.\n\nMore information about Mimikatz components and how to detect/prevent them can be found on [ADSecurity](https://adsecurity.org/?page_id=1821).\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n  - Invoke-Mimitakz and alike scripts heavily use other capabilities covered by other detections described in the \"Related Rules\" section.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host.\n  - Examine network and security events in the environment to identify potential lateral movement using compromised credentials.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Related rules\n\n- PowerShell PSReflect Script - 56f2e9b5-4803-4e44-a0a4-a52dc79d57fe\n- Suspicious .NET Reflection via PowerShell - e26f042e-c590-4e82-8e05-41e81bd822ad\n- PowerShell Suspicious Payload Encoded and Compressed - 81fe9dc6-a2d7-4192-a2d8-eed98afc766a\n- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d\n- Mimikatz Memssp Log File Detected - ebb200e8-adf0-43f8-a0bb-4ee5b5d852c6\n- Modification of WDigest Security Provider - d703a5af-d5b0-43bd-8ddb-7a5d500b7da5\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Validate that cleartext passwords are disabled in memory for use with `WDigest`.\n- Look into preventing access to `LSASS` using capabilities such as LSA protection or antivirus/EDR tools that provide this capability.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"ac96ceb8-4399-4191-af1d-4feeac1f1f46","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"to":"now","references":["https://attack.mitre.org/software/S0002/","https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1","https://www.elastic.co/security-labs/detect-credential-access"],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be configured (Enable).\n\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\npowershell.file.script_block_text:(\n  (DumpCreds and\n  DumpCerts) or\n  \"sekurlsa::logonpasswords\" or\n  (\"crypto::certificates\" and\n  \"CERT_SYSTEM_STORE_LOCAL_MACHINE\")\n)\n","actions":[]}
{"id":"24a4c5d3-2180-42b7-b213-366c9934ca6b","updated_at":"2025-06-15T07:42:45.622Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:42.042Z","created_by":"elastic","name":"SSH Authorized Keys File Modification","tags":["Domain: Endpoint","OS: Linux","OS: macOS","Use Case: Threat Detection","Tactic: Lateral Movement","Tactic: Persistence","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"The Secure Shell (SSH) authorized_keys file specifies which users are allowed to log into a server using public key authentication. Adversaries may modify it to maintain persistence on a victim host by adding their own public key(s).","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating SSH Authorized Keys File Modification\n\nSSH authorized_keys files are crucial for secure, password-less authentication, allowing users to log into servers using public keys. Adversaries exploit this by adding their keys, ensuring persistent access. The detection rule identifies unauthorized changes to these files, excluding benign processes, to flag potential threats, focusing on persistence and lateral movement tactics.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific file that was modified, focusing on \"authorized_keys\", \"authorized_keys2\", \"/etc/ssh/sshd_config\", or \"/root/.ssh\".\n- Examine the process that triggered the alert by checking the process executable path to ensure it is not one of the benign processes listed in the exclusion criteria.\n- Investigate the user account associated with the modification to determine if it is a legitimate user or potentially compromised.\n- Check the timestamp of the file modification to correlate with any known user activity or scheduled tasks that might explain the change.\n- Analyze recent login attempts and SSH connections to the server to identify any suspicious activity or unauthorized access.\n- Review the contents of the modified authorized_keys file to identify any unfamiliar or unauthorized public keys that have been added.\n- If unauthorized keys are found, remove them and consider resetting credentials or keys for affected accounts to prevent further unauthorized access.\n\n### False positive analysis\n\n- Development tools like git and maven may modify SSH authorized_keys files during legitimate operations. To prevent these from triggering alerts, add their paths to the exclusion list in the detection rule.\n- System utilities such as vim and touch are often used by administrators to manually update authorized_keys files. Consider excluding these processes if they are part of regular maintenance activities.\n- Automation tools like puppet and chef-client might update SSH configurations as part of their deployment scripts. Verify these changes are expected and exclude these processes if they are part of routine operations.\n- Docker-related processes may alter SSH configurations when containers are being managed. If these changes are part of standard container operations, include the relevant paths in the exclusion list.\n- Google Guest Agent and JumpCloud Agent might modify SSH settings as part of their management tasks. Confirm these actions are legitimate and exclude these processes if they align with normal system management activities.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or lateral movement.\n- Review the SSH authorized_keys file and remove any unauthorized or suspicious public keys that have been added.\n- Change the passwords for all user accounts on the affected host to prevent adversaries from regaining access using compromised credentials.\n- Conduct a thorough review of user accounts and permissions on the affected host to identify and disable any unauthorized accounts or privilege escalations.\n- Restore the affected system from a known good backup if unauthorized changes are extensive or if the integrity of the system is in question.\n- Implement additional monitoring on the affected host and network to detect any further unauthorized access attempts or suspicious activities.\n- Escalate the incident to the security operations team for further investigation and to determine if other systems may be affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"2215b8bd-1759-4ffa-8ab8-55c8e6b32e7f","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1098","name":"Account Manipulation","reference":"https://attack.mitre.org/techniques/T1098/","subtechnique":[{"id":"T1098.004","name":"SSH Authorized Keys","reference":"https://attack.mitre.org/techniques/T1098/004/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1021","name":"Remote Services","reference":"https://attack.mitre.org/techniques/T1021/","subtechnique":[{"id":"T1021.004","name":"SSH","reference":"https://attack.mitre.org/techniques/T1021/004/"}]},{"id":"T1563","name":"Remote Service Session Hijacking","reference":"https://attack.mitre.org/techniques/T1563/","subtechnique":[{"id":"T1563.001","name":"SSH Hijacking","reference":"https://attack.mitre.org/techniques/T1563/001/"}]}]}],"to":"now","references":[],"version":209,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"","type":"new_terms","query":"event.category:file and event.type:(change or creation) and\n file.name:(\"authorized_keys\" or \"authorized_keys2\" or \"/etc/ssh/sshd_config\" or \"/root/.ssh\") and\n not process.executable:\n             (/Library/Developer/CommandLineTools/usr/bin/git or\n              /usr/local/Cellar/maven/*/libexec/bin/mvn or\n              /Library/Java/JavaVirtualMachines/jdk*.jdk/Contents/Home/bin/java or\n              /usr/bin/vim or\n              /usr/local/Cellar/coreutils/*/bin/gcat or\n              /usr/bin/bsdtar or\n              /usr/bin/nautilus or\n              /usr/bin/scp or\n              /usr/bin/touch or\n              /var/lib/docker/* or\n              /usr/bin/google_guest_agent or\n              /opt/jc/bin/jumpcloud-agent or\n              /opt/puppetlabs/puppet/bin/puppet or\n              /usr/bin/chef-client\n)\n","new_terms_fields":["host.id","process.executable"],"history_window_start":"now-10d","index":["auditbeat-*","logs-endpoint.events.*"],"language":"kuery","actions":[]}
{"id":"b4d10e00-8aef-4f68-bb29-8038f89c199a","updated_at":"2025-06-15T07:42:39.588Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.912Z","created_by":"elastic","name":"Suspicious Startup Shell Folder Modification","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint","Data Source: SentinelOne"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious startup shell folder modifications to change the default Startup directory in order to bypass detections monitoring file creation in the Windows Startup folder.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Suspicious Startup Shell Folder Modification\n\nTechniques used within malware and by adversaries often leverage the Windows registry to store malicious programs for persistence. Startup shell folders are often targeted as they are not as prevalent as normal Startup folder paths so this behavior may evade existing AV/EDR solutions. These programs may also run with higher privileges which can be ideal for an attacker.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Review the source process and related file tied to the Windows Registry entry.\n- Validate if the activity is not related to planned patches, updates, network administrator activity, or legitimate software installations.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the file using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- There is a high possibility of benign legitimate programs being added to shell folders. This activity could be based on new software installations, patches, or other network administrator activity. Before undertaking further investigation, it should be verified that this activity is not benign.\n\n### Related rules\n\n- Startup or Run Key Registry Modification - 97fc44d3-8dae-4019-ae83-298c3015600f\n- Persistent Scripts in the Startup Directory - f7c4dc5a-a58d-491d-9f14-9b66507121c0\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- If the malicious file was delivered via phishing:\n  - Block the email sender from sending future emails.\n  - Block the malicious web pages.\n  - Remove emails from the sender from mailboxes.\n  - Consider improvements to the security awareness program.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c8b150f0-0164-475b-a75e-74b47800a9ff","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1547","name":"Boot or Logon Autostart Execution","reference":"https://attack.mitre.org/techniques/T1547/","subtechnique":[{"id":"T1547.001","name":"Registry Run Keys / Startup Folder","reference":"https://attack.mitre.org/techniques/T1547/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1112","name":"Modify Registry","reference":"https://attack.mitre.org/techniques/T1112/"}]}],"to":"now","references":["https://www.elastic.co/security-labs/elastic-security-uncovers-blister-malware-campaign","https://www.elastic.co/security-labs/revisiting-blister-new-developments-of-the-blister-loader"],"version":316,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true},{"name":"registry.path","type":"keyword","ecs":true},{"name":"registry.value","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*","endgame-*","logs-windows.sysmon_operational-*","winlogbeat-*","logs-m365_defender.event-*","logs-sentinel_one_cloud_funnel.*"],"query":"registry where host.os.type == \"windows\" and event.type == \"change\" and\n registry.value : (\"Common Startup\", \"Startup\") and\n registry.path : (\n     \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Common Startup\",\n     \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Common Startup\",\n     \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Startup\",\n     \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Startup\",\n     \"HKU\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Startup\",\n     \"HKU\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Startup\",\n     \"HKCU\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Startup\",\n     \"HKCU\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Startup\",\n     \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Common Startup\",\n     \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Common Startup\",\n     \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Startup\",\n     \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Startup\",\n     \"MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Common Startup\",\n     \"MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Common Startup\",\n     \"USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\\\Startup\",\n     \"USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\\\\Startup\"\n     ) and\n  registry.data.strings != null and\n  /* Normal Startup Folder Paths */\n  not registry.data.strings : (\n           \"C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\",\n           \"%ProgramData%\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\",\n           \"%USERPROFILE%\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\",\n           \"C:\\\\Users\\\\*\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\"\n           )\n","actions":[]}
{"id":"dcfa4ca8-ab35-483b-9bc5-0040d4af3bc7","updated_at":"2025-06-15T07:42:45.624Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.159Z","created_by":"elastic","name":"Suspicious DLL Loaded for Persistence or Privilege Escalation","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Tactic: Privilege Escalation","Tactic: Defense Evasion","Resources: Investigation Guide","Data Source: Elastic Endgame","Data Source: Elastic Defend","Data Source: Sysmon"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the loading of a non Microsoft signed DLL that is missing on a default Windows install (phantom DLL) or one that can be loaded from a different location by a native Windows process. This may be abused to persist or elevate privileges via privileged file write vulnerabilities.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Suspicious DLL Loaded for Persistence or Privilege Escalation\n\nAttackers can execute malicious code by abusing missing modules that processes try to load, enabling them to escalate privileges or gain persistence. This rule identifies the loading of a non-Microsoft-signed DLL that is missing on a default Windows installation or one that can be loaded from a different location by a native Windows process.\n\n#### Possible investigation steps\n\n- Examine the DLL signature and identify the process that created it.\n  - Investigate any abnormal behaviors by the process such as network connections, registry or file modifications, and any spawned child processes.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Retrieve the DLL and determine if it is malicious:\n  - Use a private sandboxed malware analysis system to perform analysis.\n    - Observe and collect information about the following activities:\n      - Attempts to contact external domains and addresses.\n      - File and registry access, modification, and creation activities.\n      - Service creation and launch activities.\n      - Scheduled task creation.\n  - Use the PowerShell Get-FileHash cmdlet to get the files' SHA-256 hash values.\n    - Search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Any activity that triggered the alert and is not inherently malicious must be monitored by the security team.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"bfeaf89b-a2a7-48a3-817f-e41829dc61ee","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1574","name":"Hijack Execution Flow","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.002","name":"DLL Side-Loading","reference":"https://attack.mitre.org/techniques/T1574/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1574","name":"Hijack Execution Flow","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.001","name":"DLL","reference":"https://attack.mitre.org/techniques/T1574/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/","subtechnique":[{"id":"T1036.001","name":"Invalid Code Signature","reference":"https://attack.mitre.org/techniques/T1036/001/"}]}]}],"to":"now","references":["https://itm4n.github.io/windows-dll-hijacking-clarified/","http://remoteawesomethoughts.blogspot.com/2019/05/windows-10-task-schedulerservice.html","https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html","https://shellz.club/2020/10/16/edgegdi-dll-for-persistence-and-lateral-movement.html","https://windows-internals.com/faxing-your-way-to-system/","http://waleedassar.blogspot.com/2013/01/wow64logdll.html"],"version":217,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"dll.code_signature.exists","type":"boolean","ecs":true},{"name":"dll.code_signature.subject_name","type":"keyword","ecs":true},{"name":"dll.code_signature.trusted","type":"boolean","ecs":true},{"name":"dll.name","type":"keyword","ecs":true},{"name":"dll.path","type":"keyword","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"file.code_signature.status","type":"keyword","ecs":true},{"name":"file.hash.sha256","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.library-*","logs-windows.sysmon_operational-*","endgame-*"],"query":"any where host.os.type == \"windows\" and\n(event.category : (\"driver\", \"library\") or (event.category == \"process\" and event.action : \"Image loaded*\")) and\n(\n  /* compatible with Elastic Endpoint Library Events */\n  (\n    ?dll.name : (\n        \"wlbsctrl.dll\", \"wbemcomn.dll\", \"WptsExtensions.dll\", \"Tsmsisrv.dll\", \"TSVIPSrv.dll\", \"Msfte.dll\",\n        \"wow64log.dll\", \"WindowsCoreDeviceInfo.dll\", \"Ualapi.dll\", \"wlanhlp.dll\", \"phoneinfo.dll\", \"EdgeGdi.dll\",\n        \"cdpsgshims.dll\", \"windowsperformancerecordercontrol.dll\", \"diagtrack_win.dll\", \"TPPCOIPW32.dll\", \n        \"tpgenlic.dll\", \"thinmon.dll\", \"fxsst.dll\", \"msTracer.dll\"\n    )\n    and (\n      ?dll.code_signature.trusted != true or\n      ?dll.code_signature.exists != true or\n      (\n        dll.code_signature.trusted == true and\n          not dll.code_signature.subject_name : (\"Microsoft Windows\", \"Microsoft Corporation\", \"Microsoft Windows Publisher\")\n      )\n  ) or\n   /* oci.dll is too noisy due to unsigned Oracle related DLL loaded from random dirs */\n  (\n   (?dll.path : \"?:\\\\Windows\\\\*\\\\oci.dll\" and process.executable : \"?:\\\\Windows\\\\*.exe\" and \n    (?dll.code_signature.trusted != true or ?dll.code_signature.exists != true)) or \n    \n   (file.path : \"?:\\\\Windows\\\\*\\\\oci.dll\" and not file.code_signature.status == \"Valid\" and process.executable : \"?:\\\\Windows\\\\*.exe\")\n   ) or \n\n  /* compatible with Sysmon EventID 7 - Image Load */\n  (file.name : (\"wlbsctrl.dll\", \"wbemcomn.dll\", \"WptsExtensions.dll\", \"Tsmsisrv.dll\", \"TSVIPSrv.dll\", \"Msfte.dll\",\n               \"wow64log.dll\", \"WindowsCoreDeviceInfo.dll\", \"Ualapi.dll\", \"wlanhlp.dll\", \"phoneinfo.dll\", \"EdgeGdi.dll\",\n               \"cdpsgshims.dll\", \"windowsperformancerecordercontrol.dll\", \"diagtrack_win.dll\", \"TPPCOIPW32.dll\", \n               \"tpgenlic.dll\", \"thinmon.dll\", \"fxsst.dll\", \"msTracer.dll\") and \n   not file.hash.sha256 : \n            (\"6e837794fc282446906c36d681958f2f6212043fc117c716936920be166a700f\", \n             \"b14e4954e8cca060ffeb57f2458b6a3a39c7d2f27e94391cbcea5387652f21a4\", \n             \"c258d90acd006fa109dc6b748008edbb196d6168bc75ace0de0de54a4db46662\") and \n   not file.code_signature.status == \"Valid\")\n  ) and\n  not\n  (\n    ?dll.path : (\n      \"?:\\\\Windows\\\\System32\\\\wbemcomn.dll\",\n      \"?:\\\\Windows\\\\SysWOW64\\\\wbemcomn.dll\",\n      \"?:\\\\Windows\\\\System32\\\\windowsperformancerecordercontrol.dll\",\n      \"?:\\\\Windows\\\\System32\\\\wlanhlp.dll\", \n      \"\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\SysWOW64\\\\wbemcomn.dll\", \n      \"\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\System32\\\\wbemcomn.dll\", \n      \"\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\SysWOW64\\\\wlanhlp.dll\", \n      \"\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\System32\\\\wlanhlp.dll\", \n      \"\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\SysWOW64\\\\windowsperformancerecordercontrol.dll\", \n      \"\\\\Device\\\\HarddiskVolume?\\\\Windows\\\\System32\\\\windowsperformancerecordercontrol.dll\", \n      \"C:\\\\ProgramData\\\\docker\\\\windowsfilter\\\\*\\\\Files\\\\Windows\\\\System32\\\\windowsperformancerecordercontrol.dll\", \n      \"C:\\\\ProgramData\\\\docker\\\\windowsfilter\\\\*\\\\Files\\\\Windows\\\\System32\\\\windowsperformancerecordercontrol.dll\", \n      \"\\\\Device\\\\vmsmb\\\\VSMB-{*}\\\\os\\\\windows\\\\system32\\\\*.dll\"\n    ) or\n    file.path : (\n      \"?:\\\\Windows\\\\System32\\\\wbemcomn.dll\",\n      \"?:\\\\Windows\\\\SysWOW64\\\\wbemcomn.dll\",\n      \"?:\\\\Windows\\\\System32\\\\windowsperformancerecordercontrol.dll\",\n      \"?:\\\\Windows\\\\System32\\\\wlanhlp.dll\", \n      \"C:\\\\ProgramData\\\\docker\\\\windowsfilter\\\\*\\\\Files\\\\Windows\\\\System32\\\\windowsperformancerecordercontrol.dll\", \n      \"C:\\\\ProgramData\\\\docker\\\\windowsfilter\\\\*\\\\Files\\\\Windows\\\\System32\\\\wbemcomn.dll\", \n      \"\\\\Device\\\\vmsmb\\\\VSMB-{*}\\\\os\\\\windows\\\\system32\\\\*.dll\"\n    )\n  )\n)\n","actions":[]}
{"id":"51575ee3-1fe6-4119-9024-6986d20866c3","updated_at":"2025-06-15T07:42:39.587Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:51.369Z","created_by":"elastic","name":"Potential Linux Ransomware Note Creation Detected","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Impact","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule identifies a sequence of a mass file encryption event in conjunction with the creation of a .txt file with a file name containing ransomware keywords executed by the same process in a 1 second timespan. Ransomware is a type of malware that encrypts a victim's files or systems and demands payment (usually in cryptocurrency) in exchange for the decryption key. One important indicator of a ransomware attack is the mass encryption of the file system, after which a new file extension is added to the file.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Linux Ransomware Note Creation Detected\n\nRansomware encrypts files, demanding payment for decryption. Adversaries exploit Linux systems by executing mass file renaming and creating ransom notes. This detection rule identifies such behavior by monitoring rapid file changes and the creation of text files with ransom-related keywords, indicating potential ransomware activity. It focuses on unusual file operations in critical directories, excluding benign processes, to flag suspicious activities.\n\n### Possible investigation steps\n\n- Review the process.entity_id and host.id to identify the specific process and host involved in the alert. This will help in understanding the scope and potential impact of the activity.\n- Examine the process.executable path to determine if the executable is located in a suspicious directory such as /tmp, /var/tmp, or /dev/shm, which are commonly used by adversaries for malicious activities.\n- Analyze the file paths involved in the rename events to assess if critical directories like /home/*/Documents, /root, or /var/www are affected, indicating a higher risk of data compromise.\n- Check the process.name against the list of excluded benign processes to ensure the activity is not a false positive caused by legitimate software updates or installations.\n- Investigate the content and metadata of the created .txt files with names containing keywords like *restore*, *lock*, or *ransom* to confirm if they contain ransom notes or instructions, which would indicate a ransomware attack.\n- Correlate the timing of the file rename and creation events to verify if they occurred within the 1-second timespan, supporting the hypothesis of a rapid mass encryption event typical of ransomware behavior.\n- Assess the risk score and severity level to prioritize the response and determine if immediate containment actions are necessary to prevent further damage.\n\n### False positive analysis\n\n- Frequent software updates or installations can trigger the rule due to mass file renaming in critical directories. Exclude processes like dpkg, yum, dnf, and rpm if they are part of regular system maintenance.\n- Development activities involving compilers or interpreters such as go, java, python, and node may cause false positives. Consider excluding these processes if they are part of routine development work.\n- Automated backup or logging processes might create files with names similar to ransom notes. Exclude directories or processes associated with legitimate backup or logging activities to reduce false alerts.\n- System administration tasks using tools like ansible-galaxy or semodule can mimic ransomware behavior. Exclude these processes if they are part of scheduled or known administrative operations.\n- Web server operations in directories like /var/www/* might involve file creation and renaming. Exclude specific web server processes if they are identified as non-threatening and part of regular operations.\n\n### Response and remediation\n\n- Isolate the affected Linux system from the network immediately to prevent further spread of the ransomware and protect other systems.\n- Identify and terminate the malicious process responsible for the mass file renaming and ransom note creation using the process.entity_id and host.id from the alert.\n- Backup any unencrypted files and critical data from the affected system to a secure location to prevent data loss.\n- Conduct a forensic analysis of the affected system to determine the entry point and scope of the ransomware attack, focusing on the directories and processes identified in the alert.\n- Restore the affected system from a known good backup prior to the ransomware attack to ensure system integrity and data recovery.\n- Apply security patches and updates to the affected system and any other vulnerable systems to close any exploited vulnerabilities.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to enhance detection capabilities for similar threats in the future.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c8935a8b-634a-4449-98f7-bb24d3b2c0af","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0040","name":"Impact","reference":"https://attack.mitre.org/tactics/TA0040/"},"technique":[{"id":"T1486","name":"Data Encrypted for Impact","reference":"https://attack.mitre.org/techniques/T1486/"}]}],"to":"now","references":[],"version":14,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.file*"],"query":"sequence by process.entity_id, host.id with maxspan=1s\n  [file where host.os.type == \"linux\" and event.type == \"change\" and event.action == \"rename\" and file.extension : \"?*\"\n   and process.executable : (\"./*\", \"/tmp/*\", \"/var/tmp/*\", \"/dev/shm/*\", \"/var/run/*\", \"/boot/*\") and\n   file.path : (\n     \"/home/*/Downloads/*\", \"/home/*/Documents/*\", \"/root/*\", \"/bin/*\", \"/usr/bin/*\", \"/var/log/*\", \"/var/lib/log/*\",\n     \"/var/backup/*\", \"/var/www/*\") and\n   not process.name : (\n     \"dpkg\", \"yum\", \"dnf\", \"rpm\", \"dockerd\", \"go\", \"java\", \"pip*\", \"python*\", \"node\", \"containerd\", \"php\", \"p4d\",\n     \"conda\", \"chrome\", \"imap\", \"cmake\", \"firefox\", \"semanage\", \"semodule\", \"ansible-galaxy\", \"fc-cache\", \"jammy\", \"git\",\n     \"systemsettings\", \"vmis-launcher\", \"bundle\", \"kudu-tserver\", \"suldownloader\", \"rustup-init\", \"bun\"\n    )\n  ] with runs=25\n  [file where host.os.type == \"linux\" and event.action == \"creation\" and\n   file.name : (\"*restore*\", \"*lock*\", \"*recovery*\", \"*read*\", \"*instruction*\", \"*how_to*\", \"*ransom*\")\n  ]\n","actions":[]}
{"id":"2934c865-30d9-4623-b9d9-921a60f1287c","updated_at":"2025-06-15T08:12:06.226Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.915Z","created_by":"elastic","name":"Potential PowerShell HackTool Script by Function Names","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects known PowerShell offensive tooling functions names in PowerShell scripts. Attackers commonly use out-of-the-box offensive tools without modifying the code. This rule aim is to take advantage of that.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Potential PowerShell HackTool Script by Function Names\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nAdversaries often exploit PowerShell's capabilities to execute malicious scripts and perform various attacks. This rule identifies known offensive tooling function names in PowerShell scripts, as attackers commonly use out-of-the-box tools without modifying the code. By monitoring these specific function names, the rule aims to detect and alert potential malicious PowerShell activity.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine the script's execution context, such as the user account, privileges, the role of the system on which it was executed, and any relevant timestamps.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Investigate the origin of the PowerShell script, including its source, download method, and any associated URLs or IP addresses.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the script using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process's `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n\n### False positive analysis\n\n- This rule may generate false positives if legitimate scripts or tools used by administrators contain any of the listed function names. These function names are commonly associated with offensive tooling, but they may also be present in benign scripts or tools.\n- To handle these false positives consider adding exceptions - preferably with a combination of full file path and users.\n\n### Related Rules\n\n- PowerShell Invoke-NinjaCopy script - b8386923-b02c-4b94-986a-d223d9b01f88\n- PowerShell Suspicious Discovery Related Windows API Functions - 61ac3638-40a3-44b2-855a-985636ca985e\n- Potential Process Injection via PowerShell - 2e29e96a-b67c-455a-afe4-de6183431d0d\n- PowerShell Keylogging Script - bd2c86a0-8b61-4457-ab38-96943984e889\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n  - If malicious activity is confirmed, perform a broader investigation to identify the scope of the compromise and determine the appropriate remediation steps.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Reimage the host operating system or restore the compromised files to clean versions.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"cde1bafa-9f01-4f43-a872-605b678968b0","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0109_windows_powershell_script_block_log.md","https://github.com/BC-SECURITY/Empire"],"version":216,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    \"Add-DomainGroupMember\" or \"Add-DomainObjectAcl\" or\n    \"Add-RemoteConnection\" or \"Add-ServiceDacl\" or\n    \"Add-Win32Type\" or \"Convert-ADName\" or\n    \"Convert-LDAPProperty\" or \"ConvertFrom-LDAPLogonHours\" or\n    \"ConvertFrom-UACValue\" or \"Copy-ArrayOfMemAddresses\" or\n    \"Create-NamedPipe\" or \"Create-ProcessWithToken\" or\n    \"Create-RemoteThread\" or \"Create-SuspendedWinLogon\" or\n    \"Create-WinLogonProcess\" or \"Emit-CallThreadStub\" or\n    \"Enable-SeAssignPrimaryTokenPrivilege\" or \"Enable-SeDebugPrivilege\" or\n    \"Enum-AllTokens\" or \"Export-PowerViewCSV\" or\n    \"Find-AVSignature\" or \"Find-AppLockerLog\" or\n    \"Find-DomainLocalGroupMember\" or \"Find-DomainObjectPropertyOutlier\" or\n    \"Find-DomainProcess\" or \"Find-DomainShare\" or\n    \"Find-DomainUserEvent\" or \"Find-DomainUserLocation\" or\n    \"Find-InterestingDomainAcl\" or \"Find-InterestingDomainShareFile\" or\n    \"Find-InterestingFile\" or \"Find-LocalAdminAccess\" or\n    \"Find-PSScriptsInPSAppLog\" or \"Find-PathDLLHijack\" or\n    \"Find-ProcessDLLHijack\" or \"Find-RDPClientConnection\" or\n    \"Get-AllAttributesForClass\" or \"Get-CachedGPPPassword\" or\n    \"Get-DecryptedCpassword\" or \"Get-DecryptedSitelistPassword\" or\n    \"Get-DelegateType\" or \"New-RelayEnumObject\" or\n    \"Get-DomainDFSShare\" or \"Get-DomainDFSShareV1\" or\n    \"Get-DomainDFSShareV2\" or \"Get-DomainDNSRecord\" or\n    \"Get-DomainDNSZone\" or \"Get-DomainFileServer\" or\n    \"Get-DomainForeignGroupMember\" or \"Get-DomainForeignUser\" or\n    \"Get-DomainGPO\" or \"Get-DomainGPOComputerLocalGroupMapping\" or\n    \"Get-DomainGPOLocalGroup\" or \"Get-DomainGPOUserLocalGroupMapping\" or\n    \"Get-DomainGUIDMap\" or \"Get-DomainGroup\" or\n    \"Get-DomainGroupMember\" or \"Get-DomainGroupMemberDeleted\" or\n    \"Get-DomainManagedSecurityGroup\" or \"Get-DomainOU\" or\n    \"Get-DomainObject\" or \"Get-DomainObjectAcl\" or\n    \"Get-DomainObjectAttributeHistory\" or \"Get-DomainObjectLinkedAttributeHistory\" or\n    \"Get-DomainPolicyData\" or \"Get-DomainSID\" or\n    \"Get-DomainSPNTicket\" or \"Get-DomainSearcher\" or\n    \"Get-DomainSite\" or \"Get-DomainSubnet\" or\n    \"Get-DomainTrust\" or \"Get-DomainTrustMapping\" or\n    \"Get-DomainUser\" or \"Get-DomainUserEvent\" or\n    \"Get-Forest\" or \"Get-ForestDomain\" or\n    \"Get-ForestGlobalCatalog\" or \"Get-ForestSchemaClass\" or\n    \"Get-ForestTrust\" or \"Get-GPODelegation\" or\n    \"Get-GPPAutologon\" or \"Get-GPPInnerField\" or\n    \"Get-GPPInnerFields\" or \"Get-GPPPassword\" or\n    \"Get-GptTmpl\" or \"Get-GroupsXML\" or\n    \"Get-HttpStatus\" or \"Get-ImageNtHeaders\" or\n    \"Get-Keystrokes\" or \"New-SOASerialNumberArray\" or \n    \"Get-MemoryProcAddress\" or \"Get-MicrophoneAudio\" or\n    \"Get-ModifiablePath\" or \"Get-ModifiableRegistryAutoRun\" or\n    \"Get-ModifiableScheduledTaskFile\" or \"Get-ModifiableService\" or\n    \"Get-ModifiableServiceFile\" or \"Get-Name\" or\n    \"Get-NetComputerSiteName\" or \"Get-NetLocalGroup\" or\n    \"Get-NetLocalGroupMember\" or \"Get-NetLoggedon\" or\n    \"Get-NetRDPSession\" or \"Get-NetSession\" or\n    \"Get-NetShare\" or \"Get-PEArchitecture\" or\n    \"Get-PEBasicInfo\" or \"Get-PEDetailedInfo\" or\n    \"Get-PathAcl\" or \"Get-PrimaryToken\" or\n    \"Get-ProcAddress\" or \"Get-ProcessTokenGroup\" or\n    \"Get-ProcessTokenPrivilege\" or \"Get-ProcessTokenType\" or\n    \"Get-RegLoggedOn\" or \"Get-RegistryAlwaysInstallElevated\" or\n    \"Get-RegistryAutoLogon\" or \"Get-RemoteProcAddress\" or\n    \"Get-Screenshot\" or \"Get-ServiceDetail\" or\n    \"Get-SiteListPassword\" or \"Get-SitelistField\" or\n    \"Get-System\" or \"Get-SystemNamedPipe\" or\n    \"Get-SystemToken\" or \"Get-ThreadToken\" or\n    \"Get-TimedScreenshot\" or \"Get-TokenInformation\" or\n    \"Get-TopPort\" or \"Get-UnattendedInstallFile\" or\n    \"Get-UniqueTokens\" or \"Get-UnquotedService\" or\n    \"Get-VaultCredential\" or \"Get-VaultElementValue\" or\n    \"Get-VirtualProtectValue\" or \"Get-VolumeShadowCopy\" or\n    \"Get-WMIProcess\" or \"Get-WMIRegCachedRDPConnection\" or\n    \"Get-WMIRegLastLoggedOn\" or \"Get-WMIRegMountedDrive\" or\n    \"Get-WMIRegProxy\" or \"Get-WebConfig\" or\n    \"Get-Win32Constants\" or \"Get-Win32Functions\" or\n    \"Get-Win32Types\" or \"Import-DllImports\" or\n    \"Import-DllInRemoteProcess\" or \"Inject-LocalShellcode\" or\n    \"Inject-RemoteShellcode\" or \"Install-ServiceBinary\" or\n    \"Invoke-CompareAttributesForClass\" or \"Invoke-CreateRemoteThread\" or\n    \"Invoke-CredentialInjection\" or \"Invoke-DllInjection\" or\n    \"Invoke-EventVwrBypass\" or \"Invoke-ImpersonateUser\" or\n    \"Invoke-Kerberoast\" or \"Invoke-MemoryFreeLibrary\" or\n    \"Invoke-MemoryLoadLibrary\" or\n    \"Invoke-Mimikatz\" or \"Invoke-NinjaCopy\" or\n    \"Invoke-PatchDll\" or \"Invoke-Portscan\" or\n    \"Invoke-PrivescAudit\" or \"Invoke-ReflectivePEInjection\" or\n    \"Invoke-ReverseDnsLookup\" or \"Invoke-RevertToSelf\" or\n    \"Invoke-ServiceAbuse\" or \"Invoke-Shellcode\" or\n    \"Invoke-TokenManipulation\" or \"Invoke-UserImpersonation\" or\n    \"Invoke-WmiCommand\" or \"Mount-VolumeShadowCopy\" or\n    \"New-ADObjectAccessControlEntry\" or \"New-DomainGroup\" or\n    \"New-DomainUser\" or \"New-DynamicParameter\" or\n    \"New-InMemoryModule\" or\n    \"New-ThreadedFunction\" or \"New-VolumeShadowCopy\" or\n    \"Out-CompressedDll\" or \"Out-EncodedCommand\" or\n    \"Out-EncryptedScript\" or \"Out-Minidump\" or\n    \"PortScan-Alive\" or \"Portscan-Port\" or\n    \"Remove-DomainGroupMember\" or \"Remove-DomainObjectAcl\" or\n    \"Remove-RemoteConnection\" or \"Remove-VolumeShadowCopy\" or\n    \"Restore-ServiceBinary\" or \"Set-DesktopACLToAllowEveryone\" or\n    \"Set-DesktopACLs\" or \"Set-DomainObject\" or\n    \"Set-DomainObjectOwner\" or \"Set-DomainUserPassword\" or\n    \"Set-ServiceBinaryPath\" or \"Sub-SignedIntAsUnsigned\" or\n    \"Test-AdminAccess\" or \"Test-MemoryRangeValid\" or\n    \"Test-ServiceDaclPermission\" or \"Update-ExeFunctions\" or\n    \"Update-MemoryAddresses\" or \"Update-MemoryProtectionFlags\" or\n    \"Write-BytesToMemory\" or \"Write-HijackDll\" or\n    \"Write-PortscanOut\" or \"Write-ServiceBinary\" or\n    \"Write-UserAddMSI\" or \"Invoke-Privesc\" or\n    \"func_get_proc_address\" or \"Invoke-BloodHound\" or\n    \"Invoke-HostEnum\" or \"Get-BrowserInformation\" or\n    \"Get-DomainAccountPolicy\" or \"Get-DomainAdmins\" or\n    \"Get-AVProcesses\" or \"Get-AVInfo\" or\n    \"Get-RecycleBin\" or \"Invoke-BruteForce\" or\n    \"Get-PassHints\" or \"Invoke-SessionGopher\" or\n    \"Get-LSASecret\" or \"Get-PassHashes\" or\n    \"Invoke-WdigestDowngrade\" or \"Get-ChromeDump\" or\n    \"Invoke-DomainPasswordSpray\" or \"Get-FoxDump\" or\n    \"New-HoneyHash\" or \"Invoke-DCSync\" or\n    \"Invoke-PowerDump\" or \"Invoke-SSIDExfil\" or\n    \"Invoke-PowerShellTCP\" or \"Add-Exfiltration\" or\n    \"Do-Exfiltration\" or \"Invoke-DropboxUpload\" or\n    \"Invoke-ExfilDataToGitHub\" or \"Invoke-EgressCheck\" or\n    \"Invoke-PostExfil\" or \"Create-MultipleSessions\" or\n    \"Invoke-NetworkRelay\" or \"New-GPOImmediateTask\" or\n    \"Invoke-WMIDebugger\" or \"Invoke-SQLOSCMD\" or\n    \"Invoke-SMBExec\" or \"Invoke-PSRemoting\" or\n    \"Invoke-ExecuteMSBuild\" or \"Invoke-DCOM\" or\n    \"Invoke-InveighRelay\" or \"Invoke-PsExec\" or\n    \"Invoke-SSHCommand\" or \"Find-ActiveUsersWMI\" or\n    \"Get-SystemDrivesWMI\" or \"Get-ActiveNICSWMI\" or\n    \"Remove-Persistence\" or \"DNS_TXT_Pwnage\" or\n    \"Execute-OnTime\" or \"HTTP-Backdoor\" or\n    \"Add-ConstrainedDelegationBackdoor\" or \"Add-RegBackdoor\" or\n    \"Add-ScrnSaveBackdoor\" or \"Gupt-Backdoor\" or\n    \"Invoke-ADSBackdoor\" or \"Add-Persistence\" or\n    \"Invoke-ResolverBackdoor\" or \"Invoke-EventLogBackdoor\" or\n    \"Invoke-DeadUserBackdoor\" or \"Invoke-DisableMachineAcctChange\" or\n    \"Invoke-AccessBinary\" or \"Add-NetUser\" or\n    \"Invoke-Schtasks\" or \"Invoke-JSRatRegsvr\" or\n    \"Invoke-JSRatRundll\" or \"Invoke-PoshRatHttps\" or\n    \"Invoke-PsGcatAgent\" or \"Remove-PoshRat\" or\n    \"Install-SSP\" or \"Invoke-BackdoorLNK\" or\n    \"PowerBreach\" or \"InstallEXE-Persistence\" or\n    \"RemoveEXE-Persistence\" or \"Install-ServiceLevel-Persistence\" or\n    \"Remove-ServiceLevel-Persistence\" or \"Invoke-Prompt\" or\n    \"Invoke-PacketCapture\" or \"Start-WebcamRecorder\" or\n    \"Get-USBKeyStrokes\" or \"Invoke-KeeThief\" or\n    \"Get-Keystrokes\" or \"Invoke-NetRipper\" or\n    \"Get-EmailItems\" or \"Invoke-MailSearch\" or\n    \"Invoke-SearchGAL\" or \"Get-WebCredentials\" or\n    \"Start-CaptureServer\" or \"Invoke-PowerShellIcmp\" or\n    \"Invoke-PowerShellTcpOneLine\" or \"Invoke-PowerShellTcpOneLineBind\" or\n    \"Invoke-PowerShellUdp\" or \"Invoke-PowerShellUdpOneLine\" or\n    \"Run-EXEonRemote\" or \"Download-Execute-PS\" or\n    \"Out-RundllCommand\" or \"Set-RemoteWMI\" or\n    \"Set-DCShadowPermissions\" or \"Invoke-PowerShellWMI\" or\n    \"Invoke-Vnc\" or \"Invoke-LockWorkStation\" or\n    \"Invoke-EternalBlue\" or \"Invoke-ShellcodeMSIL\" or\n    \"Invoke-MetasploitPayload\" or \"Invoke-DowngradeAccount\" or\n    \"Invoke-RunAs\" or \"ExetoText\" or\n    \"Disable-SecuritySettings\" or \"Set-MacAttribute\" or\n    \"Invoke-MS16032\" or \"Invoke-BypassUACTokenManipulation\" or\n    \"Invoke-SDCLTBypass\" or \"Invoke-FodHelperBypass\" or\n    \"Invoke-EventVwrBypass\" or \"Invoke-EnvBypass\" or\n    \"Get-ServiceUnquoted\" or \"Get-ServiceFilePermission\" or\n    \"Get-ServicePermission\" or\n    \"Enable-DuplicateToken\" or \"Invoke-PsUaCme\" or\n    \"Invoke-Tater\" or \"Invoke-WScriptBypassUAC\" or\n    \"Invoke-AllChecks\" or \"Find-TrustedDocuments\" or\n    \"Invoke-Interceptor\" or \"Invoke-PoshRatHttp\" or\n    \"Invoke-ExecCommandWMI\" or \"Invoke-KillProcessWMI\" or\n    \"Invoke-CreateShareandExecute\" or \"Invoke-RemoteScriptWithOutput\" or\n    \"Invoke-SchedJobManipulation\" or \"Invoke-ServiceManipulation\" or\n    \"Invoke-PowerOptionsWMI\" or \"Invoke-DirectoryListing\" or\n    \"Invoke-FileTransferOverWMI\" or \"Invoke-WMImplant\" or\n    \"Invoke-WMIObfuscatedPSCommand\" or \"Invoke-WMIDuplicateClass\" or\n    \"Invoke-WMIUpload\" or \"Invoke-WMIRemoteExtract\" or \"Invoke-winPEAS\"\n  ) and\n  not powershell.file.script_block_text : (\n    \"sentinelbreakpoints\" and \"Set-PSBreakpoint\"\n  ) and\n  not user.id : (\"S-1-5-18\" or \"S-1-5-19\")\n","filters":[{"meta":{"negate":true},"query":{"wildcard":{"file.path":{"case_insensitive":true,"value":"?:\\\\ProgramData\\\\Microsoft\\\\Windows Defender Advanced Threat Protection\\\\DataCollection\\\\*"}}}}],"actions":[]}
{"id":"140ee5f6-071a-4885-905c-1a5641dcea71","updated_at":"2025-06-15T07:56:07.834Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.135Z","created_by":"elastic","name":"Potential Privilege Escalation via Service ImagePath Modification","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Tactic: Privilege Escalation","Data Source: Elastic Defend","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies registry modifications to default services that could enable privilege escalation to SYSTEM. Attackers with privileges from groups like Server Operators may change the ImagePath of services to executables under their control or to execute commands.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privilege Escalation via Service ImagePath Modification\n\nWindows services are crucial for system operations, often running with high privileges. Adversaries exploit this by altering the ImagePath registry key of services to execute malicious code with elevated privileges. The detection rule identifies suspicious modifications to service ImagePaths, focusing on changes that deviate from standard executable paths, thus flagging potential privilege escalation attempts.\n\n### Possible investigation steps\n\n- Review the specific registry key and value that triggered the alert to confirm it matches one of the monitored service keys, such as those listed in the query (e.g., *\\LanmanServer, *\\Winmgmt).\n- Examine the modified ImagePath value to determine if it points to a non-standard executable path or a suspicious executable, especially those not located in %systemroot%\\system32\\.\n- Check the process.executable field to identify the process responsible for the registry modification and assess its legitimacy.\n- Investigate the user account associated with the modification event to determine if it has elevated privileges, such as membership in the Server Operators group.\n- Correlate the event with other logs or alerts to identify any related suspicious activities, such as unexpected service starts or process executions.\n- Review recent changes or activities on the host to identify any unauthorized access or configuration changes that could indicate a broader compromise.\n\n### False positive analysis\n\n- Legitimate software updates or installations may modify service ImagePaths. Users can create exceptions for known update processes or installation paths to prevent false positives.\n- System administrators might intentionally change service configurations for maintenance or troubleshooting. Document and exclude these changes by adding exceptions for specific administrator actions or paths.\n- Custom scripts or automation tools that modify service settings as part of their operation can trigger alerts. Identify and whitelist these scripts or tools to avoid unnecessary alerts.\n- Some third-party security or management software may alter service ImagePaths as part of their functionality. Verify the legitimacy of such software and exclude their known paths from detection.\n- Changes made by trusted IT personnel during system configuration or optimization should be logged and excluded from alerts to reduce noise.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious processes identified as running from non-standard executable paths, especially those not originating from the system32 directory.\n- Restore the modified ImagePath registry key to its original state using a known good configuration or backup.\n- Conduct a thorough scan of the system using updated antivirus or endpoint detection and response (EDR) tools to identify and remove any additional malicious files or persistence mechanisms.\n- Review and audit user accounts and group memberships, particularly those with elevated privileges like Server Operators, to ensure no unauthorized changes have been made.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement enhanced monitoring and alerting for future modifications to service ImagePath registry keys, focusing on deviations from standard paths to detect similar threats promptly.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"b66b7e2b-d50a-49b9-a6fc-3a383baedc6b","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1543","name":"Create or Modify System Process","reference":"https://attack.mitre.org/techniques/T1543/","subtechnique":[{"id":"T1543.003","name":"Windows Service","reference":"https://attack.mitre.org/techniques/T1543/003/"}]},{"id":"T1574","name":"Hijack Execution Flow","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.011","name":"Services Registry Permissions Weakness","reference":"https://attack.mitre.org/techniques/T1574/011/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1569","name":"System Services","reference":"https://attack.mitre.org/techniques/T1569/","subtechnique":[{"id":"T1569.002","name":"Service Execution","reference":"https://attack.mitre.org/techniques/T1569/002/"}]}]}],"to":"now","references":["https://cube0x0.github.io/Pocing-Beyond-DA/"],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true},{"name":"registry.key","type":"keyword","ecs":true},{"name":"registry.value","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*","logs-windows.sysmon_operational-*","winlogbeat-*"],"query":"registry where host.os.type == \"windows\" and event.type == \"change\" and process.executable != null and\n  event.action == \"modification\" and registry.value == \"ImagePath\" and\n  registry.key : (\n    \"*\\\\ADWS\", \"*\\\\AppHostSvc\", \"*\\\\AppReadiness\", \"*\\\\AudioEndpointBuilder\", \"*\\\\AxInstSV\", \"*\\\\camsvc\", \"*\\\\CertSvc\",\n    \"*\\\\COMSysApp\", \"*\\\\CscService\", \"*\\\\defragsvc\", \"*\\\\DeviceAssociationService\", \"*\\\\DeviceInstall\", \"*\\\\DevQueryBroker\",\n    \"*\\\\Dfs\", \"*\\\\DFSR\", \"*\\\\diagnosticshub.standardcollector.service\", \"*\\\\DiagTrack\", \"*\\\\DmEnrollmentSvc\", \"*\\\\DNS\",\n    \"*\\\\dot3svc\", \"*\\\\Eaphost\", \"*\\\\GraphicsPerfSvc\", \"*\\\\hidserv\", \"*\\\\HvHost\", \"*\\\\IISADMIN\", \"*\\\\IKEEXT\",\n    \"*\\\\InstallService\", \"*\\\\iphlpsvc\", \"*\\\\IsmServ\", \"*\\\\LanmanServer\", \"*\\\\MSiSCSI\", \"*\\\\NcbService\", \"*\\\\Netlogon\",\n    \"*\\\\Netman\", \"*\\\\NtFrs\", \"*\\\\PlugPlay\", \"*\\\\Power\", \"*\\\\PrintNotify\", \"*\\\\ProfSvc\", \"*\\\\PushToInstall\", \"*\\\\RSoPProv\",\n    \"*\\\\sacsvr\", \"*\\\\SENS\", \"*\\\\SensorDataService\", \"*\\\\SgrmBroker\", \"*\\\\ShellHWDetection\", \"*\\\\shpamsvc\", \"*\\\\StorSvc\",\n    \"*\\\\svsvc\", \"*\\\\swprv\", \"*\\\\SysMain\", \"*\\\\Themes\", \"*\\\\TieringEngineService\", \"*\\\\TokenBroker\", \"*\\\\TrkWks\",\n    \"*\\\\UALSVC\", \"*\\\\UserManager\", \"*\\\\vm3dservice\", \"*\\\\vmicguestinterface\", \"*\\\\vmicheartbeat\", \"*\\\\vmickvpexchange\",\n    \"*\\\\vmicrdv\", \"*\\\\vmicshutdown\", \"*\\\\vmicvmsession\", \"*\\\\vmicvss\", \"*\\\\vmvss\", \"*\\\\VSS\", \"*\\\\w3logsvc\", \"*\\\\W3SVC\",\n    \"*\\\\WalletService\", \"*\\\\WAS\", \"*\\\\wercplsupport\", \"*\\\\WerSvc\", \"*\\\\Winmgmt\", \"*\\\\wisvc\", \"*\\\\wmiApSrv\",\n    \"*\\\\WPDBusEnum\", \"*\\\\WSearch\"\n  ) and\n  not (\n    registry.data.strings : (\n        \"?:\\\\Windows\\\\system32\\\\*.exe\",\n        \"%systemroot%\\\\system32\\\\*.exe\",\n        \"%windir%\\\\system32\\\\*.exe\",\n        \"%SystemRoot%\\\\system32\\\\svchost.exe -k *\",\n        \"%windir%\\\\system32\\\\svchost.exe -k *\"\n    ) and\n        not registry.data.strings : (\n            \"*\\\\cmd.exe\",\n            \"*\\\\cscript.exe\",\n            \"*\\\\ieexec.exe\",\n            \"*\\\\iexpress.exe\",\n            \"*\\\\installutil.exe\",\n            \"*\\\\Microsoft.Workflow.Compiler.exe\",\n            \"*\\\\msbuild.exe\",\n            \"*\\\\mshta.exe\",\n            \"*\\\\msiexec.exe\",\n            \"*\\\\msxsl.exe\",\n            \"*\\\\net.exe\",\n            \"*\\\\powershell.exe\",\n            \"*\\\\pwsh.exe\",\n            \"*\\\\reg.exe\",\n            \"*\\\\RegAsm.exe\",\n            \"*\\\\RegSvcs.exe\",\n            \"*\\\\regsvr32.exe\",\n            \"*\\\\rundll32.exe\",\n            \"*\\\\vssadmin.exe\",\n            \"*\\\\wbadmin.exe\",\n            \"*\\\\wmic.exe\",\n            \"*\\\\wscript.exe\"\n        )\n  )\n","actions":[]}
{"id":"47e70582-67f5-4a05-824c-5407c444c963","updated_at":"2025-06-15T08:06:17.051Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.510Z","created_by":"elastic","name":"Potential Evasion via Windows Filtering Platform","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Defend","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies multiple Windows Filtering Platform block events and where the process name is related to an endpoint security software. Adversaries may add malicious WFP rules to prevent Endpoint security from sending telemetry.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Evasion via Windows Filtering Platform\n\nThe Windows Filtering Platform (WFP) is a set of API and system services that provide a platform for network filtering and packet processing. Adversaries may exploit WFP by creating malicious rules to block endpoint security processes, hindering their ability to send telemetry data. The detection rule identifies patterns of blocked network events linked to security software processes, signaling potential evasion tactics.\n\n### Possible investigation steps\n\n- Review the specific network events that triggered the alert, focusing on the event.action values \"windows-firewall-packet-block\" and \"windows-firewall-packet-drop\" to understand which processes were blocked.\n- Identify the process names involved in the alert from the process.name field and verify if they are related to known endpoint security software, as listed in the query.\n- Check the winlog.computer_name field to determine which systems are affected and assess if multiple systems are involved, indicating a broader issue.\n- Investigate the recent changes to the Windows Filtering Platform rules on the affected systems to identify any unauthorized or suspicious modifications.\n- Correlate the blocked events with any recent security incidents or alerts to determine if there is a pattern or ongoing attack.\n- Consult system logs and security software logs on the affected systems for additional context or anomalies around the time of the alert.\n- Engage with the system or network administrators to verify if any legitimate changes were made to the WFP rules that could explain the blocked events.\n\n### False positive analysis\n\n- Security software updates or installations can trigger multiple block events as they modify network configurations. Users should monitor for these events during known update windows and consider excluding them from alerts.\n- Legitimate network troubleshooting or diagnostic tools may temporarily block network traffic as part of their operation. Identify these tools and create exceptions for their processes to prevent false alerts.\n- Custom security configurations or policies in enterprise environments might intentionally block certain network activities. Review and document these configurations to differentiate between expected behavior and potential threats.\n- Temporary network disruptions or misconfigurations can cause legitimate security processes to be blocked. Regularly audit network settings and ensure they align with security policies to minimize these occurrences.\n- Scheduled maintenance or testing of security systems might result in blocked events. Coordinate with IT teams to whitelist these activities during planned maintenance periods.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further malicious activity and data exfiltration.\n- Terminate any suspicious processes identified in the alert, particularly those related to endpoint security software, to restore normal security operations.\n- Review and remove any unauthorized or suspicious Windows Filtering Platform rules that may have been added to block security processes.\n- Conduct a thorough scan of the affected system using a trusted antivirus or endpoint detection and response (EDR) tool to identify and remove any malware or persistent threats.\n- Restore any affected security software to its default configuration and ensure it is fully operational and updated.\n- Monitor network traffic and system logs for any signs of continued evasion tactics or re-infection attempts.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to assess the potential impact on other systems within the network.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"92d3a04e-6487-4b62-892d-70e640a590dc","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1562","name":"Impair Defenses","reference":"https://attack.mitre.org/techniques/T1562/","subtechnique":[{"id":"T1562.004","name":"Disable or Modify System Firewall","reference":"https://attack.mitre.org/techniques/T1562/004/"}]}]}],"to":"now","references":["https://github.com/dsnezhkov/shutter/tree/main","https://github.com/netero1010/EDRSilencer/tree/main","https://www.mdsec.co.uk/2023/09/nighthawk-0-2-6-three-wise-monkeys/","https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5157","https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5152"],"version":109,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"winlog.computer_name","type":"keyword","ecs":false}],"setup":"## Setup\n\nThe 'Filtering Platform Connection' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nObject Access >\nFiltering Platform Connection (Success,Failure)\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"sequence by winlog.computer_name with maxspan=1m\n [network where host.os.type == \"windows\" and\n  event.action : (\"windows-firewall-packet-block\", \"windows-firewall-packet-drop\") and\n  process.name : (\n        \"bdagent.exe\", \"bdreinit.exe\", \"pdscan.exe\", \"pdiface.exe\", \"BDSubWiz.exe\", \"ProductAgentService.exe\",\n        \"ProductAgentUI.exe\", \"WatchDog.exe\", \"CarbonBlackClientSetup.exe\", \"TrGUI.exe\", \"TracCAPI.exe\", \"cpmsi_tool.exe\",\n        \"trac.exe\", \"vna_install64.exe\", \"vna_utils.exe\", \"TracSrvWrapper.exe\", \"vsmon.exe\", \"p95tray.exe\",\n        \"CybereasonRansomFreeServiceHost.exe\", \"CrAmTray.exe\", \"minionhost.exe\", \"CybereasonSensor.exe\", \"CylanceUI.exe\",\n        \"CylanceProtectSetup.exe\", \"cylancesvc.exe\", \"cyupdate.exe\", \"elastic-agent.exe\", \"elastic-endpoint.exe\",\n        \"egui.exe\", \"minodlogin.exe\", \"emu-rep.exe\", \"emu_install.exe\", \"emu-cci.exe\", \"emu-gui.exe\", \"emu-uninstall.exe\",\n        \"ndep.exe\", \"spike.exe\", \"ecls.exe\", \"ecmd.exe\", \"ecomserver.exe\", \"eeclnt.exe\", \"eh64.exe\", \"EHttpSrv.exe\",\n        \"xagt.exe\", \"collectoragent.exe\", \"FSAEConfig.exe\", \"uninstalldcagent.exe\", \"rmon.exe\", \"fccomint.exe\",\n        \"fclanguageselector.exe\", \"fortifw.exe\", \"fcreg.exe\", \"fortitray.exe\", \"fcappdb.exe\", \"fcwizard.exe\", \"submitv.exe\",\n        \"av_task.exe\", \"fortiwf.exe\", \"fortiwadbd.exe\", \"fcauth.exe\", \"fcdblog.exe\", \"fcmgr.exe\", \"fortiwad.exe\",\n        \"fortiproxy.exe\", \"fortiscand.exe\", \"fortivpnst.exe\", \"ipsec.exe\", \"fcwscd7.exe\", \"fcasc.exe\", \"fchelper.exe\",\n        \"forticlient.exe\",\"fcwsc.exe\", \"FortiClient.exe\", \"fmon.exe\", \"FSSOMA.exe\", \"FCVbltScan.exe\", \"FortiESNAC.exe\",\n        \"EPCUserAvatar.exe\", \"FortiAvatar.exe\", \"FortiClient_Diagnostic_Tool.exe\", \"FortiSSLVPNdaemon.exe\", \"avp.exe\",\n        \"FCConfig.exe\", \"avpsus.exe\", \"klnagent.exe\", \"klnsacwsrv.exe\", \"kl_platf.exe\", \"stpass.exe\", \"klnagwds.exe\",\n        \"mbae.exe\", \"mbae64.exe\", \"mbae-svc.exe\", \"mbae-uninstaller.exe\", \"mbaeLoader32.exe\", \"mbaeloader64.exe\",\n        \"mbam-dor.exe\", \"mbamgui.exe\", \"mbamservice.exe\", \"mbamtrayctrl.exe\", \"mbampt.exe\", \"mbamscheduler.exe\",\n        \"Coreinst.exe\", \"mbae-setup.exe\", \"mcupdate.exe\", \"ProtectedModuleHost.exe\", \"ESConfigTool.exe\", \"FWInstCheck.exe\",\n        \"FwWindowsFirewallHandler.exe\", \"mfeesp.exe\", \"mfefw.exe\", \"mfeProvisionModeUtility.exe\", \"mfetp.exe\", \"avpui.exe\",\n        \"WscAVExe.exe\", \"mcshield.exe\", \"McChHost.exe\", \"mfewc.exe\", \"mfewch.exe\", \"mfewcui.exe\", \"fwinfo.exe\",\n        \"mfecanary.exe\", \"mfefire.exe\", \"mfehidin.exe\", \"mfemms.exe\", \"mfevtps.exe\", \"mmsinfo.exe\", \"vtpinfo.exe\",\n        \"MarSetup.exe\", \"mctray.exe\", \"masvc.exe\", \"macmnsvc.exe\", \"McAPExe.exe\", \"McPvTray.exe\", \"mcods.exe\",\n        \"mcuicnt.exe\", \"mcuihost.exe\", \"xtray.exe\", \"McpService.exe\", \"epefprtrainer.exe\", \"mfeffcoreservice.exe\",\n        \"MfeEpeSvc.exe\", \"qualysagent.exe\", \"QualysProxy.exe\", \"QualysAgentUI.exe\", \"SVRTgui.exe\", \"SVRTcli.exe\",\n        \"SVRTcli.exe\", \"SVRTgui.exe\", \"SCTCleanupService.exe\", \"SVRTservice.exe\", \"native.exe\", \"SCTBootTasks.exe\",\n        \"ALMon.exe\", \"SAA.exe\", \"SUMService.exe\", \"ssp.exe\", \"SCFService.exe\", \"SCFManager.exe\", \"spa.exe\", \"cabarc.exe\",\n        \"sargui.exe\", \"sntpservice.exe\", \"McsClient.exe\", \"McsAgent.exe\", \"McsHeartbeat.exe\", \"SAVAdminService.exe\",\n        \"sav32cli.exe\", \"ForceUpdateAlongSideSGN.exe\", \"SAVCleanupService.exe\", \"SavMain.exe\", \"SavProgress.exe\",\n        \"SavProxy.exe\", \"SavService.exe\", \"swc_service.exe\", \"swi_di.exe\", \"swi_service.exe\", \"swi_filter.exe\",\n        \"ALUpdate.exe\", \"SophosUpdate.exe\", \"ALsvc.exe\", \"SophosAlert.exe\", \"osCheck.exe\", \"N360Downloader.exe\",\n        \"InstWrap.exe\", \"symbos.exe\", \"nss.exe\", \"symcorpui.exe\", \"isPwdSvc.exe\", \"ccsvchst.exe\", \"ntrmv.exe\",\n        \"pccntmon.exe\", \"AosUImanager.exe\", \"NTRTScan.exe\", \"TMAS_OL.exe\", \"TMAS_OLImp.exe\", \"TMAS_OLSentry.exe\",\n        \"ufnavi.exe\", \"Clnrbin.exe\", \"vizorhtmldialog.exe\", \"pwmConsole.exe\", \"PwmSvc.exe\", \"coreServiceShell.exe\",\n        \"ds_agent.exe\", \"SfCtlCom.exe\", \"MBAMHelper.exe\", \"cb.exe\", \"smc.exe\", \"tda.exe\", \"xagtnotif.exe\", \"ekrn.exe\",\n        \"dsa.exe\", \"Notifier.exe\", \"rphcp.exe\", \"lc_sensor.exe\", \"CSFalconService.exe\", \"CSFalconController.exe\",\n        \"SenseSampleUploader.exe\", \"windefend.exe\", \"MSASCui.exe\", \"MSASCuiL.exe\", \"msmpeng.exe\", \"msmpsvc.exe\",\n        \"MsSense.exe\", \"esensor.exe\", \"sentinelone.exe\", \"tmccsf.exe\", \"csfalconcontainer.exe\", \"sensecncproxy.exe\",\n        \"splunk.exe\", \"sysmon.exe\", \"sysmon64.exe\", \"taniumclient.exe\"\n    )] with runs=5\n","actions":[]}
{"id":"2f319135-8f79-4287-ae81-169f970de301","updated_at":"2025-06-15T07:42:37.589Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:44.142Z","created_by":"elastic","name":"Potential Successful Linux RDP Brute Force Attack Detected","tags":["Data Source: Auditd Manager","Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"An RDP (Remote Desktop Protocol) brute force attack involves an attacker repeatedly attempting various username and password combinations to gain unauthorized access to a remote computer via RDP, and if successful, the potential impact can include unauthorized control over the compromised system, data theft, or the ability to launch further attacks within the network, jeopardizing the security and confidentiality of the targeted system and potentially compromising the entire network infrastructure. This rule identifies multiple consecutive authentication failures targeting a specific user account within a short time interval, followed by a successful authentication.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Successful Linux RDP Brute Force Attack Detected\n\nRemote Desktop Protocol (RDP) enables users to connect to and control remote systems, often used for administrative tasks. Adversaries exploit RDP by attempting numerous login attempts to gain unauthorized access, potentially leading to data breaches or further network infiltration. The detection rule identifies a pattern of failed login attempts followed by a successful one, indicating a possible brute force attack, thus alerting security teams to investigate and mitigate the threat.\n\n### Possible investigation steps\n\n- Review the authentication logs on the affected Linux host to identify the specific user account targeted by the failed and successful login attempts, focusing on entries with event.action as \"authenticated\" and auditd.data.terminal containing \"*rdp*\".\n- Analyze the source IP addresses associated with the failed and successful login attempts to determine if they originate from known or suspicious locations.\n- Check for any unusual activity or changes on the compromised system following the successful login, such as new user accounts, modified files, or unexpected network connections.\n- Correlate the timestamps of the authentication events with other security logs to identify any concurrent suspicious activities or anomalies within the network.\n- Investigate the user account's recent activity and permissions to assess potential impacts and determine if the account has been used for unauthorized access or lateral movement within the network.\n- Evaluate the risk score and severity of the alert in the context of the organization's security posture and prioritize response actions accordingly.\n\n### False positive analysis\n\n- Legitimate administrative activities may trigger the rule if administrators frequently log in using RDP for system management. To handle this, create exceptions for known administrator accounts or IP addresses that regularly perform these tasks.\n- Automated scripts or services that use RDP for routine operations can cause false positives. Identify these scripts and whitelist their associated user accounts or IPs to prevent unnecessary alerts.\n- Scheduled tasks or cron jobs that involve RDP connections might be misinterpreted as brute force attempts. Exclude these tasks by specifying their user accounts or terminal identifiers in the rule configuration.\n- Security testing or penetration testing activities can mimic brute force patterns. Coordinate with security teams to exclude these activities during testing periods by temporarily adjusting the rule parameters or adding exceptions for testing IP ranges.\n\n### Response and remediation\n\n- Immediately isolate the affected Linux host from the network to prevent further unauthorized access or lateral movement by the attacker.\n- Reset the compromised user account's password and any other accounts that may have been accessed using the same credentials to prevent further unauthorized access.\n- Conduct a thorough review of the affected system for any signs of additional compromise, such as unauthorized software installations or changes to system configurations, and remove any malicious artifacts.\n- Implement multi-factor authentication (MFA) for RDP access to enhance security and reduce the risk of future brute force attacks.\n- Review and tighten firewall rules to restrict RDP access to only trusted IP addresses and consider using a VPN for remote access.\n- Monitor the network for any unusual activity or further attempts to exploit RDP, using enhanced logging and alerting mechanisms.\n- Escalate the incident to the security operations center (SOC) or relevant security team for further investigation and to ensure comprehensive remediation and recovery actions are taken.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"521fbe5c-a78d-4b6b-a323-f978b0e4c4c0","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1110","name":"Brute Force","reference":"https://attack.mitre.org/techniques/T1110/","subtechnique":[{"id":"T1110.001","name":"Password Guessing","reference":"https://attack.mitre.org/techniques/T1110/001/"},{"id":"T1110.003","name":"Password Spraying","reference":"https://attack.mitre.org/techniques/T1110/003/"}]}]}],"to":"now","references":[],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"auditd_manager","version":"^1.0.0"}],"required_fields":[{"name":"auditd.data.terminal","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.outcome","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"related.user","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from one of the following integrations:\n- Auditbeat\n- Auditd Manager\n\n### Auditbeat Setup\nAuditbeat is a lightweight shipper that you can install on your servers to audit the activities of users and processes on your systems. For example, you can use Auditbeat to collect and centralize audit events from the Linux Audit Framework. You can also use Auditbeat to detect changes to critical files, like binaries and configuration files, and identify potential security policy violations.\n\n#### The following steps should be executed in order to add the Auditbeat on a Linux System:\n- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.\n- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setup-repositories.html).\n- To run Auditbeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-docker.html).\n- To run Auditbeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/running-on-kubernetes.html).\n- For complete “Setup and Run Auditbeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/auditbeat/current/setting-up-and-running.html).\n\n### Auditd Manager Integration Setup\nThe Auditd Manager Integration receives audit events from the Linux Audit Framework which is a part of the Linux kernel.\nAuditd Manager provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system.\n\n#### The following steps should be executed in order to add the Elastic Agent System integration \"auditd_manager\" on a Linux System:\n- Go to the Kibana home page and click “Add integrations”.\n- In the query bar, search for “Auditd Manager” and select the integration to see more details about it.\n- Click “Add Auditd Manager”.\n- Configure the integration name and optionally add a description.\n- Review optional and advanced settings accordingly.\n- Add the newly installed “auditd manager” to an existing or a new agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.\n- Click “Save and Continue”.\n- For more details on the integration refer to the [helper guide](https://docs.elastic.co/integrations/auditd_manager).\n\n#### Rule Specific Setup Note\nAuditd Manager subscribes to the kernel and receives events as they occur without any additional configuration.\nHowever, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the \"audit rules\" configuration box or the \"auditd rule files\" box by specifying a file to read the audit rules from.\n- For this detection rule no additional audit rules are required to be added to the integration.\n","type":"eql","language":"eql","index":["auditbeat-*","logs-auditd_manager.auditd-*"],"query":"sequence by host.id, related.user with maxspan=5s\n  [authentication where host.os.type == \"linux\" and event.action == \"authenticated\" and\n   auditd.data.terminal : \"*rdp*\" and event.outcome == \"failure\"] with runs=10\n  [authentication where host.os.type == \"linux\" and event.action  == \"authenticated\" and\n   auditd.data.terminal : \"*rdp*\" and event.outcome == \"success\"] | tail 1\n","actions":[]}
{"id":"b08829c6-55ef-45e8-bd87-c8689c99ad98","updated_at":"2025-06-15T07:55:30.805Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.966Z","created_by":"elastic","name":"Suspicious Process Execution via Renamed PsExec Executable","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Execution","Tactic: Defense Evasion","Data Source: Elastic Endgame","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: Sysmon","Data Source: Microsoft Defender for Endpoint"],"interval":"5m","enabled":true,"revision":1,"description":"Identifies suspicious psexec activity which is executing from the psexec service that has been renamed, possibly to evade detection.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Suspicious Process Execution via Renamed PsExec Executable\n\nPsExec is a remote administration tool that enables the execution of commands with both regular and SYSTEM privileges on Windows systems. It operates by executing a service component `Psexecsvc` on a remote system, which then runs a specified process and returns the results to the local system. Microsoft develops PsExec as part of the Sysinternals Suite. Although commonly used by administrators, PsExec is frequently used by attackers to enable lateral movement and execute commands as SYSTEM to disable defenses and bypass security protections.\n\nThis rule identifies instances where the PsExec service component is executed using a custom name. This behavior can indicate an attempt to bypass security controls or detections that look for the default PsExec service component name.\n\n#### Possible investigation steps\n\n- Check if the usage of this tool complies with the organization's administration policy.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Identify the target computer and its role in the IT environment.\n- Investigate what commands were run, and assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n\n### False positive analysis\n\n- This mechanism can be used legitimately. As long as the analyst did not identify suspicious activity related to the user or involved hosts, and the tool is allowed by the organization's policy, such alerts can be dismissed.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n  - Prioritize cases involving critical servers and users.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Review the privileges assigned to the user to ensure that the least privilege principle is being followed.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"e2f9fdf5-8076-45ad-9427-41e0e03dc9c2","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1569","name":"System Services","reference":"https://attack.mitre.org/techniques/T1569/","subtechnique":[{"id":"T1569.002","name":"Service Execution","reference":"https://attack.mitre.org/techniques/T1569/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/","subtechnique":[{"id":"T1036.003","name":"Rename Legitimate Utilities","reference":"https://attack.mitre.org/techniques/T1036/003/"}]}]}],"to":"now","references":[],"version":215,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"windows","version":"^3.0.0"},{"package":"m365_defender","version":"^3.0.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.pe.original_file_name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["winlogbeat-*","logs-endpoint.events.process-*","logs-windows.sysmon_operational-*","endgame-*","logs-m365_defender.event-*"],"query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.pe.original_file_name : \"psexesvc.exe\" and not process.name : \"PSEXESVC.exe\"\n","actions":[]}
{"id":"20b31c61-0555-4f4a-a4f2-f58246403810","updated_at":"2025-06-15T07:53:18.740Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:41.039Z","created_by":"elastic","name":"Potential Privilege Escalation via Recently Compiled Executable","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Privilege Escalation","Use Case: Vulnerability","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule monitors a sequence involving a program compilation event followed by its execution and a subsequent alteration of UID permissions to root privileges. This behavior can potentially indicate the execution of a kernel or software privilege escalation exploit.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privilege Escalation via Recently Compiled Executable\n\nIn Linux environments, compiling and executing programs is a routine operation. However, adversaries can exploit this by compiling malicious code to escalate privileges. This detection rule identifies suspicious sequences where a non-root user compiles and executes a program, followed by a UID change to root, indicating potential privilege escalation attempts. By monitoring these patterns, the rule helps in identifying and mitigating exploitation risks.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific non-root user involved in the compilation and execution sequence. Check the user.id field to gather more information about the user's activities and permissions.\n- Examine the process.args field from the initial compilation event to understand the source code or script being compiled. This can provide insights into whether the code has malicious intent.\n- Investigate the file.name field associated with the creation event to determine the nature of the executable file created. Check its location and any associated metadata for anomalies.\n- Analyze the process.name field from the execution event to identify the program that was run. Cross-reference this with known malicious binaries or scripts.\n- Check the process.name field in the UID change event to identify the process responsible for the privilege escalation. Determine if this process is known to exploit vulnerabilities for privilege escalation.\n- Review system logs and other security tools for any additional suspicious activities or anomalies around the time of the alert to gather more context on the potential threat.\n- Assess the system for any signs of compromise or unauthorized changes, such as new user accounts, altered configurations, or unexpected network connections, to evaluate the impact and scope of the incident.\n\n### False positive analysis\n\n- Development activities by legitimate users can trigger this rule when compiling and testing new software. To manage this, consider creating exceptions for specific users or groups known to perform regular development tasks.\n- Automated build systems or continuous integration pipelines may compile and execute code as part of their normal operation. Exclude these systems by identifying their user accounts or host identifiers.\n- System administrators performing maintenance or updates might compile and execute programs, leading to false positives. Implement exceptions for these users or specific maintenance windows.\n- Educational environments where students frequently compile and execute code for learning purposes can generate alerts. Exclude these activities by setting up exceptions for student user accounts or specific lab environments.\n- Security testing and research activities that involve compiling and executing exploit code in a controlled manner can be mistaken for malicious behavior. Exclude these activities by identifying the user accounts or systems involved in such testing.\n\n### Response and remediation\n\n- Immediately isolate the affected host from the network to prevent further unauthorized access or lateral movement.\n- Terminate any suspicious processes identified in the alert, especially those associated with the compiled executable and any processes running with elevated privileges.\n- Revert any unauthorized changes to user permissions, particularly any UID changes to root, to restore the system to its secure state.\n- Conduct a thorough review of the affected system for additional indicators of compromise, such as unauthorized file modifications or new user accounts, and remove any malicious artifacts.\n- Apply relevant security patches and updates to the system to address any vulnerabilities that may have been exploited for privilege escalation.\n- Monitor the affected system and network for any signs of recurring or related suspicious activity, using enhanced logging and alerting mechanisms.\n- Escalate the incident to the security operations team for further investigation and to determine if additional systems may be affected, ensuring comprehensive remediation across the environment.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"193549e8-bb9e-466a-a7f9-7e783f5cb5a6","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"}]}],"to":"now","references":[],"version":8,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.file*","logs-endpoint.events.process*"],"query":"sequence by host.id with maxspan=1m\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n   process.name in (\"gcc\", \"g++\", \"cc\") and user.id != \"0\"] by process.args\n  [file where host.os.type == \"linux\" and event.action == \"creation\" and event.type == \"creation\" and\n   process.name == \"ld\" and user.id != \"0\"] by file.name\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n   user.id != \"0\"] by process.name\n  [process where host.os.type == \"linux\" and event.action in (\"uid_change\", \"guid_change\") and event.type == \"change\" and\n   user.id == \"0\"] by process.name\n","actions":[]}
{"id":"4e015a02-0bac-4060-bec7-3dfb1e604276","updated_at":"2025-06-15T07:57:55.897Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:50.313Z","created_by":"elastic","name":"Network Activity Detected via cat","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Command and Control","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule monitors for the execution of the cat command, followed by a connection attempt by the same process. Cat is capable of transfering data via tcp/udp channels by redirecting its read output to a /dev/tcp or /dev/udp channel. This activity is highly suspicious, and should be investigated. Attackers may leverage this capability to transfer tools or files to another host in the network or exfiltrate data while attempting to evade detection in the process.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Network Activity Detected via cat\n\nAttackers may leverage the `cat` utility in conjunction with a listener to read all bytes of a file, and output the content to a `/dev/tcp` or `/dev/udp` channel to transfer/exfiltrate file contents to a remote system. \n\nThis rule looks for a sequence of a `cat` execution event followed by a network connection attempt by the same `cat` process. \n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n> This investigation guide uses [placeholder fields](https://www.elastic.co/guide/en/security/current/osquery-placeholder-fields.html) to dynamically pass alert data into Osquery queries. Placeholder fields were introduced in Elastic Stack version 8.7.0. If you're using Elastic Stack version 8.6.0 or earlier, you'll need to manually adjust this investigation guide's queries to ensure they properly run.\n\n#### Possible investigation steps\n\n- Identify any signs of suspicious network activity or anomalies that may indicate command and control activity or data exfiltration. This could include unexpected traffic patterns or unusual network behavior.\n  - Investigate listening ports and open sockets to look for potential protocol tunneling, reverse shells, or data exfiltration.\n    - !{osquery{\"label\":\"Osquery - Retrieve Listening Ports\",\"query\":\"SELECT pid, address, port, socket, protocol, path FROM listening_ports\"}}\n    - !{osquery{\"label\":\"Osquery - Retrieve Open Sockets\",\"query\":\"SELECT pid, family, remote_address, remote_port, socket, state FROM process_open_sockets\"}}\n- Identify the user account that performed the action, analyze it, and check whether it should perform this kind of action.\n  - !{osquery{\"label\":\"Osquery - Retrieve Information for a Specific User\",\"query\":\"SELECT * FROM users WHERE username = {{user.name}}\"}}\n- Investigate whether the user is currently logged in and active.\n  - !{osquery{\"label\":\"Osquery - Investigate the Account Authentication Status\",\"query\":\"SELECT * FROM logged_in_users WHERE user = {{user.name}}\"}}\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence and whether they are located in expected locations.\n  - !{osquery{\"label\":\"Osquery - Retrieve Running Processes by User\",\"query\":\"SELECT pid, username, name FROM processes p JOIN users u ON u.uid = p.uid ORDER BY username\"}}\n  - !{osquery{\"label\":\"Osquery - Retrieve Process Info\",\"query\":\"SELECT name, cmdline, parent, path, uid FROM processes\"}}\n- Investigate other alerts associated with the user/host during the past 48 hours.\n  - If scripts or executables were dropped, retrieve the files and determine if they are malicious:\n    - Use a private sandboxed malware analysis system to perform analysis.\n      - Observe and collect information about the following activities:\n        - Attempts to contact external domains and addresses.\n          - Check if the domain is newly registered or unexpected.\n          - Check the reputation of the domain or IP address.\n        - File access, modification, and creation activities.\n\n### Related rules\n\n- Suspicious Network Activity to the Internet by Previously Unknown Executable - 53617418-17b4-4e9c-8a2c-8deb8086ca4b\n\n### False positive analysis\n\n- If this activity is related to new benign software installation activity, consider adding exceptions — preferably with a combination of user and command line conditions.\n- Try to understand the context of the execution by thinking about the user, machine, or business purpose. A small number of endpoints, such as servers with unique software, might appear unusual but satisfy a specific business need.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors, such as reverse shells, reverse proxies, or droppers, that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Leverage the incident response data and logging to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"afd04601-12fc-4149-9b78-9c3f8fe45d39","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0010","name":"Exfiltration","reference":"https://attack.mitre.org/tactics/TA0010/"},"technique":[]}],"to":"now","references":[],"version":10,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.entity_id","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.network*","logs-endpoint.events.process*"],"query":"sequence by host.id, process.entity_id with maxspan=1s\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n   process.name == \"cat\" and process.parent.name in (\"bash\", \"dash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\")]\n  [network where host.os.type == \"linux\" and event.action in (\"connection_attempted\", \"disconnect_received\") and\n   process.name == \"cat\" and not (destination.ip == null or destination.ip == \"0.0.0.0\" or cidrmatch(\n     destination.ip, \"10.0.0.0/8\", \"127.0.0.0/8\", \"169.254.0.0/16\", \"172.16.0.0/12\", \"192.0.0.0/24\", \"192.0.0.0/29\",\n     \"192.0.0.8/32\", \"192.0.0.9/32\", \"192.0.0.10/32\", \"192.0.0.170/32\", \"192.0.0.171/32\", \"192.0.2.0/24\",\n     \"192.31.196.0/24\", \"192.52.193.0/24\", \"192.168.0.0/16\", \"192.88.99.0/24\", \"224.0.0.0/4\", \"100.64.0.0/10\",\n     \"192.175.48.0/24\",\"198.18.0.0/15\", \"198.51.100.0/24\", \"203.0.113.0/24\", \"240.0.0.0/4\", \"::1\", \"FE80::/10\",\n     \"FF00::/8\"\n     )\n   )]\n","actions":[]}
{"id":"907c10a5-0e8a-4188-90a6-fa0534070fc3","updated_at":"2025-06-15T07:42:41.600Z","updated_by":"sangpt","created_at":"2025-06-15T07:42:41.600Z","created_by":"sangpt","name":"Dumping Account Hashes via Built-In Commands","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":0,"description":"Identifies the execution of macOS built-in commands used to dump user account hashes. Adversaries may attempt to dump credentials to obtain account login information in the form of a hash. These hashes can be cracked or leveraged for lateral movement.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Dumping Account Hashes via Built-In Commands\n\nIn macOS environments, built-in commands like `defaults` and `mkpassdb` can be exploited by adversaries to extract user account hashes, which are crucial for credential access. These hashes, once obtained, can be cracked to reveal passwords or used for lateral movement within a network. The detection rule identifies suspicious process executions involving these commands and specific arguments, signaling potential credential dumping activities.\n\n### Possible investigation steps\n\n- Review the process execution details to confirm the presence of the `defaults` or `mkpassdb` commands with arguments like `ShadowHashData` or `-dump`, as these are indicative of credential dumping attempts.\n- Identify the user account associated with the process execution to determine if the activity aligns with expected behavior for that user or if it appears suspicious.\n- Check the historical activity of the involved user account and the host to identify any patterns or anomalies that could suggest unauthorized access or lateral movement.\n- Investigate any network connections or subsequent processes initiated by the suspicious process to assess potential data exfiltration or further malicious actions.\n- Correlate the event with other security alerts or logs from the same host or user account to build a comprehensive timeline of the activity and assess the scope of the potential compromise.\n\n### False positive analysis\n\n- System administrators or security tools may legitimately use the `defaults` or `mkpassdb` commands for system maintenance or auditing purposes. To manage these, create exceptions for known administrative accounts or tools that regularly execute these commands.\n- Automated scripts or management software might invoke these commands as part of routine operations. Identify and whitelist these scripts or software to prevent unnecessary alerts.\n- Developers or IT personnel might use these commands during testing or development phases. Establish a process to temporarily exclude these activities by setting up time-bound exceptions for specific user accounts or devices.\n- Security assessments or penetration tests could trigger this rule. Coordinate with security teams to schedule and document these activities, allowing for temporary rule adjustments during the testing period.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further lateral movement or data exfiltration.\n- Terminate any suspicious processes identified as using the `defaults` or `mkpassdb` commands with the specified arguments to halt ongoing credential dumping activities.\n- Conduct a thorough review of user accounts on the affected system to identify any unauthorized access or changes, focusing on accounts with elevated privileges.\n- Reset passwords for all potentially compromised accounts, especially those with administrative access, and enforce strong password policies.\n- Analyze system logs and network traffic to identify any additional systems that may have been accessed using the compromised credentials, and apply similar containment measures.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine the full scope of the breach.\n- Implement enhanced monitoring and alerting for similar suspicious activities across the network to detect and respond to future attempts promptly.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"02ea4563-ec10-4974-b7de-12e65aa4f9b3","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"}]}],"to":"now","references":["https://apple.stackexchange.com/questions/186893/os-x-10-9-where-are-password-hashes-stored","https://www.unix.com/man-page/osx/8/mkpassdb/"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.*"],"query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and\n process.name in (\"defaults\", \"mkpassdb\") and process.args like~ (\"ShadowHashData\", \"-dump\")\n","actions":[]}
{"id":"6eea21d3-8460-43bd-8eb5-0e6706aa6cf2","updated_at":"2025-06-15T07:42:39.593Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:27.173Z","created_by":"elastic","name":"Windows Service Installed via an Unusual Client","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the creation of a Windows service by an unusual client process. Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Windows Service Installed via an Unusual Client\n\nWindows services are crucial for running background processes with elevated privileges. Adversaries exploit this by creating services to escalate privileges from administrator to SYSTEM. The detection rule identifies anomalies by flagging service installations initiated by atypical processes, excluding known legitimate services. This helps in spotting potential privilege escalation attempts by monitoring unusual client activity.\n\n### Possible investigation steps\n\n- Review the event logs to identify the specific client process that initiated the service installation by examining the winlog.event_data.ClientProcessId and winlog.event_data.ParentProcessId fields.\n- Investigate the parent process associated with the unusual client process to determine if it is a known legitimate application or potentially malicious.\n- Check the winlog.event_data.ServiceFileName to verify the path and name of the service file, ensuring it is not a known legitimate service excluded in the query.\n- Analyze the timeline of events around the service installation to identify any preceding suspicious activities or related alerts that might indicate a broader attack.\n- Conduct a reputation check on the client process and service file using threat intelligence sources to assess if they are associated with known malicious activities.\n- Examine the system for any additional indicators of compromise, such as unexpected network connections or changes to critical system files, that may suggest privilege escalation or lateral movement attempts.\n\n### False positive analysis\n\n- Legitimate software installations or updates may trigger the rule if they create services using unusual client processes. To manage this, identify and whitelist these processes in the detection rule to prevent unnecessary alerts.\n- System management tools like Veeam and PDQ Inventory are already excluded, but other similar tools might not be. Regularly review and update the exclusion list to include any additional legitimate tools used in your environment.\n- Custom scripts or administrative tools that create services for maintenance or monitoring purposes can also cause false positives. Document these scripts and consider adding them to the exclusion list if they are verified as safe.\n- Temporary or one-time service installations for troubleshooting or testing can be mistaken for threats. Ensure that such activities are logged and communicated to the security team to avoid confusion and unnecessary alerts.\n- Changes in system configurations or updates to existing software might alter the behavior of legitimate processes, causing them to be flagged. Regularly review and adjust the detection rule to accommodate these changes while maintaining security integrity.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.\n- Terminate the suspicious service and any associated processes identified by the alert to stop potential privilege escalation or malicious activity.\n- Conduct a thorough review of the service's configuration and associated files to identify any unauthorized changes or malicious code.\n- Restore any altered or compromised system files from a known good backup to ensure system integrity.\n- Change all administrator and SYSTEM account passwords on the affected system and any connected systems to prevent further unauthorized access.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine the scope of the breach.\n- Implement additional monitoring and logging on the affected system and similar environments to detect any recurrence of the threat or related suspicious activities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"55c2bf58-2a39-4c58-a384-c8b1978153c2","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1543","name":"Create or Modify System Process","reference":"https://attack.mitre.org/techniques/T1543/","subtechnique":[{"id":"T1543.003","name":"Windows Service","reference":"https://attack.mitre.org/techniques/T1543/003/"}]}]}],"to":"now","references":["https://www.x86matthew.com/view_post?id=create_svc_rpc","https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4697","https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0100_windows_audit_security_system_extension.md","https://www.elastic.co/security-labs/siestagraph-new-implant-uncovered-in-asean-member-foreign-ministry"],"version":215,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"winlog.event_data.ClientProcessId","type":"unknown","ecs":false},{"name":"winlog.event_data.ParentProcessId","type":"unknown","ecs":false},{"name":"winlog.event_data.ServiceFileName","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'Audit Security System Extension' logging policy must be configured for (Success)\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nSystem >\nAudit Security System Extension (Success)\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"configuration where host.os.type == \"windows\" and\n  event.action == \"service-installed\" and\n  (winlog.event_data.ClientProcessId == \"0\" or winlog.event_data.ParentProcessId == \"0\") and\n  not winlog.event_data.ServiceFileName : (\n    \"?:\\\\Windows\\\\VeeamVssSupport\\\\VeeamGuestHelper.exe\",\n    \"?:\\\\Windows\\\\VeeamLogShipper\\\\VeeamLogShipper.exe\",\n    \"%SystemRoot%\\\\system32\\\\Drivers\\\\Crowdstrike\\\\*-CsInstallerService.exe\",\n    \"\\\"%windir%\\\\AdminArsenal\\\\PDQInventory-Scanner\\\\service-1\\\\PDQInventory-Scanner-1.exe\\\" \"\n  )\n","actions":[]}
{"id":"277e8af4-3772-425b-a12e-4f264efb9be5","updated_at":"2025-06-15T07:57:38.881Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:24.617Z","created_by":"elastic","name":"PowerShell Script with Encryption/Decryption Capabilities","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the use of Cmdlets and methods related to encryption/decryption of files in PowerShell scripts, which malware and offensive security tools can abuse to encrypt data or decrypt payloads to bypass security solutions.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating PowerShell Script with Encryption/Decryption Capabilities\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks, making it available for use in various environments, creating an attractive way for attackers to execute code.\n\nPowerShell offers encryption and decryption functionalities that attackers can abuse for various purposes, such as concealing payloads, C2 communications, and encrypting data as part of ransomware operations.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n\n### False positive analysis\n\n- This is a dual-use mechanism, meaning its usage is not inherently malicious. Analysts can dismiss the alert if the script doesn't contain malicious functions or potential for abuse, no other suspicious activity was identified, and there are justifications for the execution.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Legitimate PowerShell Scripts which makes use of encryption."],"from":"now-9m","rule_id":"1d9aeb0b-9549-46f6-a32d-05e2a001b7fd","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1027","name":"Obfuscated Files or Information","reference":"https://attack.mitre.org/techniques/T1027/"},{"id":"T1140","name":"Deobfuscate/Decode Files or Information","reference":"https://attack.mitre.org/techniques/T1140/"}]}],"to":"now","references":[],"version":111,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    (\n      \"Cryptography.AESManaged\" or\n      \"Cryptography.RijndaelManaged\" or\n      \"Cryptography.SHA1Managed\" or\n      \"Cryptography.SHA256Managed\" or\n      \"Cryptography.SHA384Managed\" or\n      \"Cryptography.SHA512Managed\" or\n      \"Cryptography.SymmetricAlgorithm\" or\n      \"PasswordDeriveBytes\" or\n      \"Rfc2898DeriveBytes\"\n    ) and\n    (\n      CipherMode and PaddingMode\n    ) and\n    (\n      \".CreateEncryptor\" or\n      \".CreateDecryptor\"\n    )\n  ) and\n  not user.id : \"S-1-5-18\" and\n  not (\n    file.name : \"Bootstrap.Octopus.FunctionAppenderContext.ps1\" and\n    powershell.file.script_block_text : (\"function Decrypt-Variables\" or \"github.com/OctopusDeploy\")\n  )\n","actions":[]}
{"id":"cdab1504-d966-4a10-9593-f2b0fa98763e","updated_at":"2025-06-15T08:10:37.163Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.947Z","created_by":"elastic","name":"Potential Pass-the-Hash (PtH) Attempt","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Lateral Movement","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Adversaries may pass the hash using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Pass-the-Hash (PtH) Attempt\n\nPass-the-Hash (PtH) is a technique where attackers use stolen password hashes to authenticate and move laterally across systems without needing plaintext passwords. This method exploits the authentication process in Windows environments. The detection rule identifies suspicious logins using specific logon types and processes, indicating potential PtH activity, by monitoring successful authentications with certain user IDs and logon processes.\n\n### Possible investigation steps\n\n- Review the event logs for the specific user IDs (S-1-5-21-* or S-1-12-1-*) to identify any unusual or unauthorized access patterns, focusing on the time and source of the logon events.\n- Examine the winlog.event_data.LogonProcessName field for \"seclogo\" to determine if this process is commonly used in your environment or if it appears suspicious or unexpected.\n- Correlate the successful authentication events with other security logs to identify any lateral movement or access to sensitive systems that occurred after the initial logon.\n- Investigate the source IP addresses and hostnames associated with the logon events to determine if they are known and trusted within the network or if they originate from unusual or external locations.\n- Check for any recent changes or anomalies in the accounts associated with the suspicious user IDs, such as password resets, privilege escalations, or unusual account activity.\n- Consult threat intelligence sources to see if there are any known campaigns or threat actors using similar techniques or targeting similar environments.\n\n### False positive analysis\n\n- Legitimate administrative tools or scripts that use the \"NewCredentials\" logon type for automation or scheduled tasks can trigger false positives. Review and whitelist known benign processes or scripts that are part of regular operations.\n- Security software or monitoring tools that perform regular checks using the \"seclogo\" logon process may be misidentified. Identify and exclude these tools from the detection rule to prevent unnecessary alerts.\n- Service accounts with user IDs matching the specified patterns (S-1-5-21-* or S-1-12-1-*) might be flagged during routine operations. Ensure these accounts are documented and create exceptions for their expected activities.\n- Regularly scheduled tasks or maintenance activities that involve authentication processes similar to PtH can cause false positives. Document these activities and adjust the detection rule to account for their occurrence.\n- User behavior analytics might incorrectly flag normal user activities as suspicious. Implement user behavior baselining to differentiate between typical and atypical logon patterns, refining the detection criteria accordingly.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further lateral movement by the attacker.\n- Revoke any active sessions associated with the compromised user IDs (S-1-5-21-* or S-1-12-1-*) to disrupt the attacker's access.\n- Conduct a password reset for the affected accounts and any other accounts that may have been accessed using the compromised hashes.\n- Review and update access controls and permissions for the affected accounts to ensure they adhere to the principle of least privilege.\n- Deploy endpoint detection and response (EDR) tools to monitor for any further suspicious activity or attempts to use stolen hashes.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine the scope of the breach.\n- Implement additional logging and monitoring for the \"seclogo\" logon process to enhance detection of future pass-the-hash attempts.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"daafdf96-e7b1-4f14-b494-27e0d24b11f6","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0008","name":"Lateral Movement","reference":"https://attack.mitre.org/tactics/TA0008/"},"technique":[{"id":"T1550","name":"Use Alternate Authentication Material","reference":"https://attack.mitre.org/techniques/T1550/","subtechnique":[{"id":"T1550.002","name":"Pass the Hash","reference":"https://attack.mitre.org/techniques/T1550/002/"}]}]}],"to":"now","references":["https://attack.mitre.org/techniques/T1550/002/"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.outcome","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true},{"name":"winlog.event_data.LogonProcessName","type":"keyword","ecs":false},{"name":"winlog.logon.type","type":"unknown","ecs":false}],"setup":"","type":"new_terms","query":"host.os.type:\"windows\" and\nevent.category : \"authentication\" and event.action : \"logged-in\" and\nwinlog.logon.type : \"NewCredentials\" and event.outcome : \"success\" and\nuser.id : (S-1-5-21-* or S-1-12-1-*) and winlog.event_data.LogonProcessName : \"seclogo\"\n","new_terms_fields":["user.id"],"history_window_start":"now-10d","index":["winlogbeat-*","logs-windows.forwarded*","logs-system.security*"],"language":"kuery","actions":[]}
{"id":"597b0d2d-7102-41d8-9f92-0e26835c80d0","updated_at":"2025-06-15T07:42:39.591Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:44.082Z","created_by":"elastic","name":"EggShell Backdoor Execution","tags":["Domain: Endpoint","OS: Linux","OS: macOS","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies the execution of and EggShell Backdoor. EggShell is a known post exploitation tool for macOS and Linux.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating EggShell Backdoor Execution\n\nEggShell is a post-exploitation tool used on macOS and Linux systems, allowing adversaries to execute commands and scripts remotely. It leverages command and scripting interpreters to gain control over compromised systems. Attackers exploit this by executing malicious payloads, maintaining persistence, and exfiltrating data. The detection rule identifies suspicious process activities, specifically targeting the execution patterns and arguments associated with EggShell, to alert analysts of potential backdoor usage.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of the process name 'espl' and check if the process arguments start with 'eyJkZWJ1ZyI6', which indicates potential EggShell activity.\n- Investigate the parent process of 'espl' to understand how it was initiated and identify any associated suspicious activities or processes.\n- Examine the user account under which the 'espl' process was executed to determine if it aligns with expected behavior or if it indicates a compromised account.\n- Check for any network connections or data exfiltration attempts associated with the 'espl' process to assess if data has been sent to an external source.\n- Review system logs and other security alerts around the time of the 'espl' process execution to identify any correlated events or anomalies.\n- Assess the persistence mechanisms on the affected system to determine if the EggShell backdoor has established any means to survive reboots or user logouts.\n\n### False positive analysis\n\n- Legitimate administrative scripts or tools that use similar command patterns to EggShell may trigger false positives. Review the process arguments and context to determine if the activity is expected and authorized.\n- Development or testing environments where EggShell or similar tools are used for legitimate purposes can cause alerts. Implement exceptions for these environments by excluding specific user accounts or process paths.\n- Automated scripts or monitoring tools that mimic EggShell's execution patterns might be flagged. Identify these scripts and create exceptions based on their unique identifiers or execution context.\n- Regularly update the detection rule to refine the criteria based on observed false positives, ensuring that legitimate activities are not continuously flagged.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further command execution and data exfiltration.\n- Terminate any suspicious processes associated with the EggShell backdoor, specifically those matching the process name 'espl' and arguments starting with 'eyJkZWJ1ZyI6'.\n- Conduct a thorough examination of the system to identify any additional malicious payloads or persistence mechanisms that may have been deployed by the attacker.\n- Remove any unauthorized user accounts or access credentials that may have been created or compromised during the exploitation.\n- Restore the system from a known good backup to ensure all traces of the backdoor and any associated malware are eradicated.\n- Update and patch all software and systems to close any vulnerabilities that may have been exploited by the attacker.\n- Enhance monitoring and detection capabilities to identify similar threats in the future, focusing on command and scripting interpreter activities as outlined in MITRE ATT&CK technique T1059.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"41824afb-d68c-4d0e-bfee-474dac1fa56e","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.006","name":"Python","reference":"https://attack.mitre.org/techniques/T1059/006/"}]}]}],"to":"now","references":["https://github.com/neoneggplant/EggShell"],"version":106,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"","type":"query","language":"kuery","index":["auditbeat-*","logs-endpoint.events.*"],"query":"event.category:process and event.type:(process_started or start) and process.name:espl and process.args:eyJkZWJ1ZyI6*\n","actions":[]}
{"id":"7bdf971d-f17c-42f3-a902-ac2d6075f07f","updated_at":"2025-06-15T07:47:25.223Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.256Z","created_by":"elastic","name":"FirstTime Seen Account Performing DCSync","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic: Privilege Escalation","Use Case: Active Directory Monitoring","Data Source: Active Directory","Resources: Investigation Guide","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"This rule identifies when a User Account starts the Active Directory Replication Process for the first time. Attackers can use the DCSync technique to get credential information of individual accounts or the entire domain, thus compromising the entire domain.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating FirstTime Seen Account Performing DCSync\n\nActive Directory replication is the process by which the changes that originate on one domain controller are automatically transferred to other domain controllers that store the same data.\n\nActive Directory data consists of objects that have properties, or attributes. Each object is an instance of an object class, and object classes and their respective attributes are defined in the Active Directory schema. Objects are defined by the values of their attributes, and changes to attribute values must be transferred from the domain controller on which they occur to every other domain controller that stores a replica of an affected object.\n\nAdversaries can use the DCSync technique that uses Windows Domain Controller's API to simulate the replication process from a remote domain controller, compromising major credential material such as the Kerberos krbtgt keys that are used legitimately for creating tickets, but also for forging tickets by attackers. This attack requires some extended privileges to succeed (DS-Replication-Get-Changes and DS-Replication-Get-Changes-All), which are granted by default to members of the Administrators, Domain Admins, Enterprise Admins, and Domain Controllers groups. Privileged accounts can be abused to grant controlled objects the right to DCsync/Replicate.\n\nMore details can be found on [Threat Hunter Playbook](https://threathunterplaybook.com/library/windows/active_directory_replication.html?highlight=dcsync#directory-replication-services-auditing) and [The Hacker Recipes](https://www.thehacker.recipes/ad/movement/credentials/dumping/dcsync).\n\nThis rule monitors for when a Windows Event ID 4662 (Operation was performed on an Active Directory object) with the access mask 0x100 (Control Access) and properties that contain at least one of the following or their equivalent Schema-Id-GUID (DS-Replication-Get-Changes, DS-Replication-Get-Changes-All, DS-Replication-Get-Changes-In-Filtered-Set) is seen in the environment for the first time in the last 15 days.\n\n#### Possible investigation steps\n\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account and system owners and confirm whether they are aware of this activity.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Correlate security events 4662 and 4624 (Logon Type 3) by their Logon ID (`winlog.logon.id`) on the Domain Controller (DC) that received the replication request. This will tell you where the AD replication request came from, and if it came from another DC or not.\n- Scope which credentials were compromised (for example, whether all accounts were replicated or specific ones).\n\n### False positive analysis\n\n- Administrators may use custom accounts on Azure AD Connect; investigate if this is part of a new Azure AD account setup, and ensure it is properly secured. If the activity was expected and there is no other suspicious activity involving the host or user, the analyst can dismiss the alert.\n- Although replicating Active Directory (AD) data to non-Domain Controllers is not a common practice and is generally not recommended from a security perspective, some software vendors may require it for their products to function correctly. Investigate if this is part of a new product setup, and ensure it is properly secured. If the activity was expected and there is no other suspicious activity involving the host or user, the analyst can dismiss the alert.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- If the entire domain or the `krbtgt` user was compromised:\n  - Activate your incident response plan for total Active Directory compromise which should include, but not be limited to, a password reset (twice) of the `krbtgt` user.\n- Investigate how the attacker escalated privileges and identify systems they used to conduct lateral movement. Use this information to determine ways the attacker could regain access to the environment.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"5c6f4c58-b381-452a-8976-f1b1c6aa0def","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.006","name":"DCSync","reference":"https://attack.mitre.org/techniques/T1003/006/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/","subtechnique":[{"id":"T1078.002","name":"Domain Accounts","reference":"https://attack.mitre.org/techniques/T1078/002/"}]}]}],"to":"now","references":["https://threathunterplaybook.com/notebooks/windows/06_credential_access/WIN-180815210510.html","https://threathunterplaybook.com/library/windows/active_directory_replication.html?highlight=dcsync#directory-replication-services-auditing","https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/security/win_ad_replication_non_machine_account.yml","https://github.com/atc-project/atomic-threat-coverage/blob/master/Atomic_Threat_Coverage/Logging_Policies/LP_0027_windows_audit_directory_service_access.md","https://attack.stealthbits.com/privilege-escalation-using-mimikatz-dcsync","https://www.thehacker.recipes/ad/movement/credentials/dumping/dcsync"],"version":117,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"},{"package":"system","version":"^2.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"winlog.event_data.Properties","type":"unknown","ecs":false},{"name":"winlog.event_data.SubjectUserName","type":"keyword","ecs":false}],"setup":"## Setup\n\nThe 'Audit Directory Service Access' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Access (Success,Failure)\n```\n","type":"new_terms","query":"event.code:\"4662\" and winlog.event_data.Properties:(\n                               *DS-Replication-Get-Changes* or *DS-Replication-Get-Changes-All* or\n                               *DS-Replication-Get-Changes-In-Filtered-Set* or *1131f6ad-9c07-11d1-f79f-00c04fc2dcd2* or\n                               *1131f6aa-9c07-11d1-f79f-00c04fc2dcd2* or *89e95b76-444d-4c62-991a-0facbeda640c*) and\n not winlog.event_data.SubjectUserName:(*$ or MSOL_*)\n","new_terms_fields":["winlog.event_data.SubjectUserName"],"history_window_start":"now-15d","index":["winlogbeat-*","logs-system.security*","logs-windows.forwarded*"],"language":"kuery","actions":[]}
{"id":"d290072f-8d53-42cd-9324-bfd1d8418047","updated_at":"2025-06-15T07:42:41.598Z","updated_by":"sangpt","created_at":"2025-06-15T07:42:41.598Z","created_by":"sangpt","name":"Kerberos Cached Credentials Dumping","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":0,"description":"Identifies the use of the Kerberos credential cache (kcc) utility to dump locally cached Kerberos tickets. Adversaries may attempt to dump credential material in the form of tickets that can be leveraged for lateral movement.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Kerberos Cached Credentials Dumping\n\nKerberos is a network authentication protocol designed to provide secure identity verification for users and services. It uses tickets to allow nodes to prove their identity in a secure manner. Adversaries may exploit tools like the Kerberos credential cache utility to extract these tickets, enabling unauthorized access and lateral movement within a network. The detection rule identifies suspicious activity by monitoring for specific processes and arguments on macOS systems, flagging potential credential dumping attempts.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of the process name 'kcc' and the argument 'copy_cred_cache' in the process execution logs on macOS systems.\n- Identify the user account associated with the process execution to determine if the activity aligns with expected behavior or if it indicates potential unauthorized access.\n- Examine the timeline of the process execution to identify any preceding or subsequent suspicious activities, such as unusual login attempts or lateral movement within the network.\n- Check for any other alerts or logs related to the same host or user account to assess if this is part of a broader attack pattern.\n- Investigate the source and destination of any network connections made by the process to identify potential data exfiltration or communication with known malicious IP addresses.\n- Consult with the user or system owner to verify if the use of the 'kcc' utility was legitimate or if it requires further investigation.\n\n### False positive analysis\n\n- Routine administrative tasks using the kcc utility may trigger the rule. Identify and document these tasks to create exceptions for known benign activities.\n- Automated scripts or maintenance processes that involve copying Kerberos credential caches can be mistaken for malicious activity. Review and whitelist these scripts if they are verified as safe.\n- Developers or IT personnel testing Kerberos configurations might use the kcc utility in a non-malicious context. Establish a process to log and approve such activities to prevent false alarms.\n- Security tools or monitoring solutions that interact with Kerberos tickets for legitimate purposes may inadvertently trigger the rule. Coordinate with security teams to ensure these tools are recognized and excluded from detection.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent further unauthorized access or lateral movement.\n- Terminate the suspicious process identified as 'kcc' with the argument 'copy_cred_cache' to stop any ongoing credential dumping activity.\n- Conduct a thorough review of the system's Kerberos ticket cache to identify any unauthorized access or anomalies, and invalidate any compromised tickets.\n- Reset passwords and regenerate Kerberos tickets for any accounts that may have been affected to prevent further unauthorized access.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine the scope of the breach.\n- Implement additional monitoring on the affected system and similar endpoints to detect any recurrence of the credential dumping activity.\n- Review and update access controls and Kerberos configurations to enhance security and reduce the risk of similar attacks in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"ad88231f-e2ab-491c-8fc6-64746da26cfe","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"},{"id":"T1558","name":"Steal or Forge Kerberos Tickets","reference":"https://attack.mitre.org/techniques/T1558/","subtechnique":[{"id":"T1558.003","name":"Kerberoasting","reference":"https://attack.mitre.org/techniques/T1558/003/"}]}]}],"to":"now","references":["https://github.com/EmpireProject/EmPyre/blob/master/lib/modules/collection/osx/kerberosdump.py","https://opensource.apple.com/source/Heimdal/Heimdal-323.12/kuser/kcc-commands.in.auto.html"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.*"],"query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and\n  process.name == \"kcc\" and\n  process.args like~ \"copy_cred_cache\"\n","actions":[]}
{"id":"591a79ad-f9f0-402a-ae5b-8729ea6b8e6e","updated_at":"2025-06-15T07:42:43.608Z","updated_by":"sangpt","created_at":"2025-06-15T07:42:43.608Z","created_by":"sangpt","name":"Potential Microsoft Office Sandbox Evasion","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":0,"description":"Identifies the creation of a suspicious zip file prepended with special characters. Sandboxed Microsoft Office applications on macOS are allowed to write files that start with special characters, which can be combined with an AutoStart location to achieve sandbox evasion.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Microsoft Office Sandbox Evasion\n\nMicrosoft Office applications on macOS operate within a sandbox to limit potential damage from malicious files. However, adversaries can exploit this by creating zip files with special character prefixes, bypassing sandbox restrictions. The detection rule identifies such files, focusing on non-deletion events with specific naming patterns, to flag potential evasion attempts and mitigate risks.\n\n### Possible investigation steps\n\n- Review the file creation event details to confirm the presence of a zip file with a name starting with special characters, as indicated by the file.name field.\n- Examine the file path and location to determine if it aligns with known AutoStart locations, which could indicate an attempt to achieve persistence.\n- Investigate the user account associated with the event to assess if the activity is expected or if the account may have been compromised.\n- Check for any related events or activities on the same host around the time of the alert, such as other file creations or modifications, to identify potential patterns or additional suspicious behavior.\n- Analyze the host's recent network activity to detect any unusual outbound connections that might suggest data exfiltration or communication with a command and control server.\n- Correlate the event with other alerts or logs from the same host or user to build a comprehensive timeline of activities and assess the broader impact or intent.\n\n### False positive analysis\n\n- Files with special character prefixes created by legitimate applications or processes, such as temporary files generated by Microsoft Office during normal operations, may trigger the rule. Users can create exceptions for known benign applications that frequently generate such files.\n- Automated backup or synchronization tools that compress files into zip archives with special character prefixes might be flagged. Identify these tools and exclude their file creation events from the rule.\n- Development or testing environments where zip files with special character prefixes are used for legitimate purposes can cause false positives. Implement exclusions for these environments to prevent unnecessary alerts.\n- User-generated zip files with special character prefixes for personal organization or naming conventions may be mistakenly identified. Educate users on naming conventions and adjust the rule to exclude specific user directories if needed.\n\n### Response and remediation\n\n- Isolate the affected macOS system from the network to prevent further potential spread or data exfiltration.\n- Quarantine the suspicious zip file to prevent execution and further analysis.\n- Conduct a thorough scan of the system using updated antivirus and endpoint detection tools to identify and remove any additional malicious files or processes.\n- Review and secure AutoStart locations on the affected system to prevent unauthorized applications from executing at startup.\n- Restore any affected files from a known good backup to ensure system integrity and continuity.\n- Escalate the incident to the security operations center (SOC) for further investigation and to determine if other systems may be affected.\n- Update security policies and endpoint protection configurations to block the creation and execution of files with suspicious naming patterns, enhancing future detection and prevention capabilities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"d22a85c6-d2ad-4cc4-bf7b-54787473669a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1497","name":"Virtualization/Sandbox Evasion","reference":"https://attack.mitre.org/techniques/T1497/"}]}],"to":"now","references":["https://i.blackhat.com/USA-20/Wednesday/us-20-Wardle-Office-Drama-On-macOS.pdf","https://www.mdsec.co.uk/2018/08/escaping-the-sandbox-microsoft-office-on-macos/","https://desi-jarvis.medium.com/office365-macos-sandbox-escape-fcce4fa4123c"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.*"],"query":"file where host.os.type == \"macos\" and event.action in (\"modification\", \"rename\") and file.name like~ \"~$*.zip\"\n","actions":[]}
{"id":"421e8e20-4f1e-4b1f-b4f2-094c74cce168","updated_at":"2025-06-15T07:52:53.725Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:50.297Z","created_by":"elastic","name":"Potential Command and Control via Internet Explorer","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Command and Control","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies instances of Internet Explorer (iexplore.exe) being started via the Component Object Model (COM) making unusual network connections. Adversaries could abuse Internet Explorer via COM to avoid suspicious processes making network connections and bypass host-based firewall restrictions.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Command and Control via Internet Explorer\n\nInternet Explorer can be manipulated via the Component Object Model (COM) to initiate network connections, potentially bypassing security measures. Adversaries exploit this by embedding IE in processes like rundll32.exe, making it appear benign. The detection rule identifies unusual DNS queries from IE, excluding common Microsoft domains, to flag suspicious activity indicative of command and control attempts.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific host and user associated with the suspicious activity, focusing on the host.id and user.name fields.\n- Examine the process tree on the affected host to confirm if Internet Explorer (iexplore.exe) was indeed started via COM, specifically looking for the parent process rundll32.exe or regsvr32.exe with IEProxy.dll loaded.\n- Analyze the DNS queries made by Internet Explorer to identify any unusual or suspicious domains that are not part of the common Microsoft or OCSP-related domains listed in the exclusion list.\n- Check the network connections initiated by Internet Explorer to determine if there are any unexpected or unauthorized external IP addresses or domains being contacted.\n- Investigate the context and timing of the alert by correlating it with other security events or logs from the same host or user to identify any patterns or additional indicators of compromise.\n- Assess the risk and potential impact of the detected activity by considering the severity of the alert and any additional findings from the investigation steps above.\n\n### False positive analysis\n\n- Internet Explorer may make legitimate DNS queries to domains not listed in the exclusion list, such as those related to third-party services or internal company resources. Users should monitor and identify these domains and consider adding them to the exclusion list if they are verified as non-threatening.\n- Some enterprise environments may use custom applications that leverage Internet Explorer via COM for legitimate purposes. In such cases, users should identify these applications and create exceptions for their associated processes to prevent false positives.\n- Regular updates or patches from non-Microsoft sources might trigger alerts if they use Internet Explorer for network connections. Users should verify the legitimacy of these updates and adjust the exclusion list accordingly.\n- Internal network monitoring tools or scripts that use Internet Explorer for testing or monitoring purposes could be flagged. Users should document these tools and exclude their associated network activities from the detection rule.\n- If a specific user or department frequently triggers alerts due to legitimate use of Internet Explorer, consider creating user or department-specific exceptions to reduce noise while maintaining security oversight.\n\n### Response and remediation\n\n- Isolate the affected host from the network immediately to prevent further command and control communication and potential data exfiltration.\n- Terminate the Internet Explorer process (iexplore.exe) and any associated processes like rundll32.exe or regsvr32.exe that are identified as suspicious.\n- Conduct a thorough scan of the isolated host using updated antivirus and anti-malware tools to identify and remove any malicious software or scripts.\n- Review and analyze the DNS query logs to identify any other potentially compromised hosts within the network that may have communicated with the same suspicious domains.\n- Restore the affected system from a known good backup if malware is confirmed and cannot be fully removed, ensuring that the backup is free from compromise.\n- Implement network-level controls to block the identified suspicious domains and IP addresses to prevent future communication attempts.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":["Processes such as MS Office using IEproxy to render HTML content."],"from":"now-9m","rule_id":"acd611f3-2b93-47b3-a0a3-7723bcc46f6d","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"},"technique":[{"id":"T1071","name":"Application Layer Protocol","reference":"https://attack.mitre.org/techniques/T1071/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1559","name":"Inter-Process Communication","reference":"https://attack.mitre.org/techniques/T1559/","subtechnique":[{"id":"T1559.001","name":"Component Object Model","reference":"https://attack.mitre.org/techniques/T1559/001/"}]}]}],"to":"now","references":[],"version":109,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"dll.name","type":"keyword","ecs":true},{"name":"dns.question.name","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.protocol","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.args","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"user.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.library-*","logs-endpoint.events.process-*","logs-endpoint.events.network-*"],"query":"sequence by host.id, user.name with maxspan = 5s\n  [library where host.os.type == \"windows\" and dll.name : \"IEProxy.dll\" and process.name : (\"rundll32.exe\", \"regsvr32.exe\")]\n  [process where host.os.type == \"windows\" and event.type == \"start\" and process.parent.name : \"iexplore.exe\" and process.parent.args : \"-Embedding\"]\n  /* IE started via COM in normal conditions makes few connections, mainly to Microsoft and OCSP related domains, add FPs here */\n  [network where host.os.type == \"windows\" and network.protocol == \"dns\" and process.name : \"iexplore.exe\" and\n   not dns.question.name :\n   (\n    \"*.microsoft.com\",\n    \"*.digicert.com\",\n    \"*.msocsp.com\",\n    \"*.windowsupdate.com\",\n    \"*.bing.com\",\n    \"*.identrust.com\",\n    \"*.sharepoint.com\",\n    \"*.office365.com\",\n    \"*.office.com\"\n    )\n  ] /* with runs=5 */\n","actions":[]}
{"id":"6e8180c3-1feb-43cb-8840-4a716605a1e7","updated_at":"2025-06-15T08:02:39.083Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:38.946Z","created_by":"elastic","name":"PowerShell Kerberos Ticket Request","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: PowerShell Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Detects PowerShell scripts that have the capability of requesting kerberos tickets, which is a common step in Kerberoasting toolkits to crack service accounts.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating PowerShell Kerberos Ticket Request\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks, making it available for use in various environments, creating an attractive way for attackers to execute code.\n\nAccounts associated with a service principal name (SPN) are viable targets for Kerberoasting attacks, which use brute force to crack the user password, which is used to encrypt a Kerberos TGS ticket.\n\nAttackers can use PowerShell to request these Kerberos tickets, with the intent of extracting them from memory to perform Kerberoasting.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate if the script was executed, and if so, which account was targeted.\n- Validate if the account has an SPN associated with it.\n- Identify the user account that performed the action and whether it should perform this kind of action.\n- Contact the account owner and confirm whether they are aware of this activity.\n- Check if the script has any other functionality that can be potentially malicious.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Review event ID [4769](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4769) related to this account and service name for additional information.\n\n### False positive analysis\n\n- A possible false positive can be identified if the script content is not malicious/harmful or does not request Kerberos tickets for user accounts, as computer accounts are not vulnerable to Kerberoasting due to complex password requirements and policy.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services. Prioritize privileged accounts.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"eb610e70-f9e6-4949-82b9-f1c5bcd37c39","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"},{"id":"T1558","name":"Steal or Forge Kerberos Tickets","reference":"https://attack.mitre.org/techniques/T1558/","subtechnique":[{"id":"T1558.003","name":"Kerberoasting","reference":"https://attack.mitre.org/techniques/T1558/003/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://cobalt.io/blog/kerberoast-attack-techniques","https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1"],"version":215,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    KerberosRequestorSecurityToken\n  ) and not user.id : (\"S-1-5-18\" or \"S-1-5-20\") and\n  not powershell.file.script_block_text : (\n    (\"sentinelbreakpoints\" and (\"Set-PSBreakpoint\" or \"Set-HookFunctionTabs\")) or\n    (\"function global\" and \"\\\\windows\\\\sentinel\\\\4\")\n  )\n","actions":[]}
{"id":"4150297c-152c-4b06-9fa4-eacff182464e","updated_at":"2025-06-15T07:42:39.594Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:51.363Z","created_by":"elastic","name":"SMB (Windows File Sharing) Activity to the Internet","tags":["Tactic: Initial Access","Domain: Endpoint","Use Case: Threat Detection","Data Source: PAN-OS","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule detects network events that may indicate the use of Windows file sharing (also called SMB or CIFS) traffic to the Internet. SMB is commonly used within networks to share files, printers, and other system resources amongst trusted systems. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or backdoor vector or for data exfiltration.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating SMB (Windows File Sharing) Activity to the Internet\n\nSMB, a protocol for sharing files and resources within trusted networks, is vulnerable when exposed to the Internet. Adversaries exploit it for unauthorized access or data theft. The detection rule identifies suspicious SMB traffic from internal IPs to external networks, flagging potential threats by monitoring specific ports and excluding known safe IP ranges.\n\n### Possible investigation steps\n\n- Review the source IP address from the alert to identify the internal system initiating the SMB traffic. Check if this IP belongs to a known device or user within the organization.\n- Investigate the destination IP address to determine if it is associated with any known malicious activity or if it belongs to a legitimate external service that might require SMB access.\n- Analyze network logs to identify any patterns or anomalies in the SMB traffic, such as unusual data transfer volumes or repeated access attempts, which could indicate malicious activity.\n- Check for any recent changes or updates on the source system that might explain the SMB traffic, such as new software installations or configuration changes.\n- Correlate the alert with other security events or logs, such as authentication logs or endpoint security alerts, to gather additional context and determine if this is part of a broader attack or isolated incident.\n- Consult threat intelligence sources to see if there are any known vulnerabilities or exploits related to the SMB traffic observed, which could provide insight into potential attack vectors.\n\n### False positive analysis\n\n- Internal testing environments may generate SMB traffic to external IPs for legitimate reasons. Identify and whitelist these IPs to prevent false positives.\n- Cloud services or remote backup solutions might use SMB for data transfer. Verify these services and add their IP ranges to the exception list if they are trusted.\n- VPN connections can sometimes appear as external traffic. Ensure that VPN IP ranges are included in the list of known safe IPs to avoid misclassification.\n- Misconfigured network devices might inadvertently route SMB traffic externally. Regularly audit network configurations and update the rule exceptions to include any legitimate device IPs.\n- Some third-party applications may use SMB for updates or data synchronization. Confirm the legitimacy of these applications and exclude their associated IPs from the detection rule.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.\n- Conduct a thorough review of firewall and network configurations to ensure SMB traffic is not allowed to the Internet, and block any unauthorized outbound SMB traffic on ports 139 and 445.\n- Perform a comprehensive scan of the isolated system for malware or unauthorized access tools, focusing on identifying any backdoors or persistence mechanisms.\n- Reset credentials and review access permissions for any accounts that may have been compromised or used in the suspicious activity.\n- Notify the security operations center (SOC) and relevant stakeholders about the incident for further analysis and potential escalation.\n- Implement additional monitoring and logging for SMB traffic to detect any future unauthorized attempts to access the Internet.\n- Review and update security policies and procedures to prevent similar incidents, ensuring that SMB services are only accessible within trusted network segments.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"c82b2bd8-d701-420c-ba43-f11a155b681a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0001","name":"Initial Access","reference":"https://attack.mitre.org/tactics/TA0001/"},"technique":[{"id":"T1190","name":"Exploit Public-Facing Application","reference":"https://attack.mitre.org/techniques/T1190/"}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0010","name":"Exfiltration","reference":"https://attack.mitre.org/tactics/TA0010/"},"technique":[{"id":"T1048","name":"Exfiltration Over Alternative Protocol","reference":"https://attack.mitre.org/techniques/T1048/"}]}],"to":"now","references":["https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"network_traffic","version":"^1.1.0"},{"package":"panw","version":"^5.0.0"}],"required_fields":[{"name":"destination.ip","type":"ip","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.category","type":"keyword","ecs":true},{"name":"event.dataset","type":"keyword","ecs":true},{"name":"network.transport","type":"keyword","ecs":true},{"name":"source.ip","type":"ip","ecs":true}],"setup":"","type":"query","language":"kuery","index":["packetbeat-*","auditbeat-*","filebeat-*","logs-network_traffic.*","logs-panw.panos*"],"query":"(event.dataset: network_traffic.flow or (event.category: (network or network_traffic))) and\n  network.transport:tcp and (destination.port:(139 or 445) or event.dataset:zeek.smb) and\n  source.ip:(\n    10.0.0.0/8 or\n    172.16.0.0/12 or\n    192.168.0.0/16\n  ) and\n  not destination.ip:(\n    10.0.0.0/8 or\n    127.0.0.0/8 or\n    169.254.0.0/16 or\n    172.16.0.0/12 or\n    192.0.0.0/24 or\n    192.0.0.0/29 or\n    192.0.0.8/32 or\n    192.0.0.9/32 or\n    192.0.0.10/32 or\n    192.0.0.170/32 or\n    192.0.0.171/32 or\n    192.0.2.0/24 or\n    192.31.196.0/24 or\n    192.52.193.0/24 or\n    192.168.0.0/16 or\n    192.88.99.0/24 or\n    224.0.0.0/4 or\n    100.64.0.0/10 or\n    192.175.48.0/24 or\n    198.18.0.0/15 or\n    198.51.100.0/24 or\n    203.0.113.0/24 or\n    240.0.0.0/4 or\n    \"::1\" or\n    \"FE80::/10\" or\n    \"FF00::/8\"\n  )\n","actions":[]}
{"id":"e7e65293-59a3-4179-8430-0d23b3ce7e07","updated_at":"2025-06-15T07:53:41.764Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:49.256Z","created_by":"elastic","name":"Process Injection - Prevented - Elastic Endgame","tags":["Data Source: Elastic Endgame","Use Case: Threat Detection","Tactic: Privilege Escalation","Resources: Investigation Guide"],"interval":"2m","enabled":true,"revision":2,"description":"Elastic Endgame prevented Process Injection. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Process Injection - Prevented - Elastic Endgame\n\nElastic Endgame is a security solution that prevents malicious activities like process injection, a technique often used by adversaries to execute code within the address space of another process, enabling privilege escalation. This detection rule identifies attempts by monitoring alerts for specific kernel shellcode events, indicating potential injection attempts, and helps mitigate threats by leveraging prevention capabilities.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of event.kind:alert and event.module:endgame, ensuring the alert is related to Elastic Endgame's prevention capabilities.\n- Examine the event.action and endgame.event_subtype_full fields for kernel_shellcode_event to identify the specific type of process injection attempt.\n- Investigate the source process and target process involved in the injection attempt to understand the context and potential impact on the system.\n- Check for any associated alerts or logs around the same timeframe to identify if this is part of a larger attack pattern or isolated incident.\n- Assess the risk score and severity to prioritize the investigation and determine if immediate action is required to mitigate potential threats.\n- Consult the MITRE ATT&CK framework for additional context on the T1055 Process Injection technique to understand common methods and potential mitigations.\n\n### False positive analysis\n\n- Legitimate software updates or installations may trigger kernel shellcode events. Users can create exceptions for known update processes by identifying their unique process identifiers or paths.\n- Security tools or monitoring software that perform deep system scans might mimic process injection behavior. Exclude these tools by specifying their executable names or hashes in the exception list.\n- Custom scripts or automation tools that interact with system processes could be flagged. Review these scripts and whitelist them if they are verified as safe and necessary for operations.\n- Development environments or debugging tools that inject code for testing purposes may cause alerts. Establish exceptions for these environments by defining rules based on the development tools' signatures or process names.\n- Virtualization software that uses process injection techniques for managing virtual machines can be mistakenly identified. Add these applications to the exclusion list by recognizing their specific process attributes.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further malicious activity and lateral movement.\n- Terminate any suspicious processes identified by the alert, particularly those associated with the kernel shellcode event, to halt ongoing malicious actions.\n- Conduct a thorough analysis of the affected system to identify any additional indicators of compromise or secondary payloads that may have been deployed.\n- Restore the affected system from a known good backup to ensure any injected code or malicious modifications are removed.\n- Apply security patches and updates to the operating system and all installed software to close any vulnerabilities that may have been exploited.\n- Monitor the network and systems for any signs of similar process injection attempts, using enhanced logging and alerting based on the identified threat indicators.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-1m","rule_id":"990838aa-a953-4f3e-b3cb-6ddf7584de9e","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1055","name":"Process Injection","reference":"https://attack.mitre.org/techniques/T1055/"}]}],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:kernel_shellcode_event or endgame.event_subtype_full:kernel_shellcode_event)\n","actions":[]}
{"id":"30e4f71f-0163-491c-b9f0-8250602f5fbf","updated_at":"2025-06-15T07:57:31.867Z","updated_by":"sangpt","created_at":"2025-06-15T07:41:24.709Z","created_by":"sangpt","name":"Potential Hidden Local User Account Creation","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Persistence","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":0,"description":"Identifies attempts to create a local account that will be hidden from the macOS logon window. This may indicate an attempt to evade user attention while maintaining persistence using a separate local account.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Hidden Local User Account Creation\n\nIn macOS environments, the `dscl` command-line utility manages directory services, including user accounts. Adversaries may exploit this to create hidden local accounts, evading detection while maintaining persistence. The detection rule monitors for `dscl` processes attempting to set accounts as hidden, flagging suspicious activity indicative of potential misuse.\n\n### Possible investigation steps\n\n- Review the process details to confirm the presence of the `dscl` command with arguments related to account creation and hiding, specifically checking for `IsHidden`, `create`, and values like `true`, `1`, or `yes`.\n- Identify the user account under which the `dscl` command was executed to determine if it was initiated by an authorized user or a potential adversary.\n- Check the system logs for any additional suspicious activity around the time the `dscl` command was executed, such as other unauthorized account modifications or unusual login attempts.\n- Investigate the newly created account details, if available, to assess its purpose and legitimacy, including checking for any associated files or processes that might indicate malicious intent.\n- Correlate the event with other security alerts or anomalies on the host to determine if this activity is part of a broader attack pattern or isolated incident.\n\n### False positive analysis\n\n- System administrators may use the dscl command to create hidden accounts for legitimate purposes such as maintenance or automated tasks. To manage this, create exceptions for known administrator accounts or scripts that regularly perform these actions.\n- Some third-party applications or management tools might use hidden accounts for functionality or security purposes. Identify these applications and whitelist their processes to prevent unnecessary alerts.\n- During system setup or configuration, hidden accounts might be created as part of the initial setup process. Exclude these initial setup activities by correlating them with known installation or configuration events.\n- Regular audits of user accounts and their creation processes can help distinguish between legitimate and suspicious account creation activities, allowing for more informed exception handling.\n- If a specific user or group frequently triggers this rule due to their role, consider creating a role-based exception to reduce noise while maintaining security oversight.\n\n### Response and remediation\n\n- Immediately isolate the affected macOS system from the network to prevent potential lateral movement or data exfiltration by the adversary.\n- Use administrative privileges to review and remove any unauthorized hidden user accounts created using the `dscl` command. Ensure that legitimate accounts are not affected.\n- Change passwords for all local accounts on the affected system to prevent unauthorized access using potentially compromised credentials.\n- Conduct a thorough review of system logs and security alerts to identify any additional suspicious activities or indicators of compromise related to the hidden account creation.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if the threat is part of a larger attack campaign.\n- Implement enhanced monitoring for `dscl` command usage across all macOS systems in the environment to detect and respond to similar threats promptly.\n- Update and reinforce endpoint security measures, such as ensuring all systems have the latest security patches and antivirus definitions, to prevent exploitation of known vulnerabilities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"41b638a1-8ab6-4f8e-86d9-466317ef2db5","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/","subtechnique":[{"id":"T1078.003","name":"Local Accounts","reference":"https://attack.mitre.org/techniques/T1078/003/"}]}]}],"to":"now","references":["https://support.apple.com/en-us/HT203998"],"version":110,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.args","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a macOS System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, for MacOS it is recommended to select \"Traditional Endpoints\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/current/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.*"],"query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and\n process.name == \"dscl\" and process.args like~ \"IsHidden\" and process.args like~ \"create\" and \n process.args like~ (\"true\", \"1\", \"yes\")\n","actions":[]}
{"id":"4cf665f8-d137-4051-a5b0-962f2556598c","updated_at":"2025-06-15T07:52:44.187Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:40.014Z","created_by":"elastic","name":"File Creation, Execution and Self-Deletion in Suspicious Directory","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Execution","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"This rule monitors for the creation of a file, followed by its execution and self-deletion in a short timespan within a directory often used for malicious purposes by threat actors. This behavior is often used by malware to execute malicious code and delete itself to hide its tracks.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating File Creation, Execution and Self-Deletion in Suspicious Directory\n\nIn Linux environments, temporary directories like `/tmp` and `/var/tmp` are often used for storing transient files. Adversaries exploit these directories to execute malicious payloads and erase traces by creating, running, and deleting files swiftly. The detection rule identifies this pattern by monitoring file creation, execution, and deletion events within these directories, flagging suspicious activities that align with common malware behaviors.\n\n### Possible investigation steps\n\n- Review the file creation event details, focusing on the file path and name to determine if it matches known malicious patterns or if it is a legitimate file.\n- Examine the process execution event, paying attention to the process name and parent process name to identify if the execution was initiated by a suspicious or unauthorized shell.\n- Investigate the user.id and host.id associated with the events to determine if the activity aligns with expected user behavior or if it indicates potential compromise.\n- Check for any network activity or connections initiated by the process to identify potential data exfiltration or communication with command and control servers.\n- Analyze the deletion event to confirm whether the file was removed by a legitimate process or if it was part of a self-deletion mechanism used by malware.\n- Correlate these events with any other alerts or logs from the same host or user to identify patterns or additional indicators of compromise.\n\n### False positive analysis\n\n- Development and testing activities in temporary directories can trigger false positives. Exclude specific paths or processes related to known development tools or scripts that frequently create, execute, and delete files in these directories.\n- Automated system maintenance scripts may perform similar actions. Identify and whitelist these scripts by their process names or paths to prevent unnecessary alerts.\n- Backup or deployment tools like Veeam or Spack may use temporary directories for legitimate operations. Add exceptions for these tools by specifying their executable paths or process names.\n- Temporary file operations by legitimate applications such as web servers or database services might be flagged. Monitor and exclude these applications by their known behaviors or specific file paths they use.\n- Regular system updates or package installations can involve temporary file handling. Recognize and exclude these activities by identifying the associated package manager processes or update scripts.\n\n### Response and remediation\n\n- Isolate the affected host immediately to prevent further spread of the potential malware. Disconnect it from the network to contain the threat.\n- Terminate any suspicious processes identified in the alert, especially those executed from temporary directories, to stop any ongoing malicious activity.\n- Conduct a thorough examination of the affected directories (/tmp, /var/tmp, etc.) to identify and remove any remaining malicious files or scripts.\n- Restore any affected systems from a known good backup to ensure that no remnants of the malware remain.\n- Update and patch the affected system to close any vulnerabilities that may have been exploited by the threat actor.\n- Enhance monitoring and logging on the affected host and similar systems to detect any recurrence of this behavior, focusing on file creation, execution, and deletion events in temporary directories.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems may be compromised.","license":"Elastic License v2","output_index":"","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"09bc6c90-7501-494d-b015-5d988dc3f233","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.004","name":"Unix Shell","reference":"https://attack.mitre.org/techniques/T1059/004/"}]}]}],"to":"now","references":[],"version":9,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.action","type":"keyword","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"file.name","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.executable","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n","type":"eql","language":"eql","index":["logs-endpoint.events.file*","logs-endpoint.events.process*"],"query":"sequence by host.id, user.id with maxspan=1m\n  [file where host.os.type == \"linux\" and event.action == \"creation\" and\n   process.name in (\"curl\", \"wget\", \"fetch\", \"ftp\", \"sftp\", \"scp\", \"rsync\", \"ld\") and\n   file.path : (\"/dev/shm/*\", \"/run/shm/*\", \"/tmp/*\", \"/var/tmp/*\",\n     \"/run/*\", \"/var/run/*\", \"/var/www/*\", \"/proc/*/fd/*\")] by file.name\n  [process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n   process.parent.name in (\"bash\", \"dash\", \"ash\", \"sh\", \"tcsh\", \"csh\", \"zsh\", \"ksh\", \"fish\") and\n   not process.parent.executable like (\n     \"/tmp/VeeamApp*\", \"/tmp/rajh/spack-stage/*\", \"plz-out/bin/vault/bridge/test/e2e/base/bridge-dev\",\n     \"/usr/bin/ranlib\", \"/usr/bin/ar\", \"plz-out/bin/vault/bridge/test/e2e/base/local-k8s\"\n   )] by process.name\n  [file where host.os.type == \"linux\" and event.action == \"deletion\" and\n   file.path : (\n     \"/dev/shm/*\", \"/run/shm/*\", \"/tmp/*\", \"/var/tmp/*\", \"/run/*\", \"/var/run/*\", \"/var/www/*\", \"/proc/*/fd/*\"\n    ) and not process.name in (\"rm\", \"ld\", \"conftest\", \"link\", \"gcc\", \"getarch\", \"ld\")] by file.name\n","actions":[]}
{"id":"5c603336-278c-40d9-853f-bb007aa0b775","updated_at":"2025-06-15T07:42:43.617Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.491Z","created_by":"elastic","name":"Kerberos Traffic from Unusual Process","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide","Data Source: Elastic Defend","Data Source: SentinelOne"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies network connections to the standard Kerberos port from an unusual process. On Windows, the only process that normally performs Kerberos traffic from a domain joined host is lsass.exe.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Kerberos Traffic from Unusual Process\n\nKerberos is the default authentication protocol in Active Directory, designed to provide strong authentication for client/server applications by using secret-key cryptography.\n\nDomain-joined hosts usually perform Kerberos traffic using the `lsass.exe` process. This rule detects the occurrence of traffic on the Kerberos port (88) by processes other than `lsass.exe` to detect the unusual request and usage of Kerberos tickets.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Check if the Destination IP is related to a Domain Controller.\n- Review event ID 4769 for suspicious ticket requests.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Investigate potentially compromised accounts. Analysts can do this by searching for login events (for example, 4624) to the target host after the registry modification.\n\n### False positive analysis\n\n- This rule uses a Kerberos-related port but does not identify the protocol used on that port. HTTP traffic on a non-standard port or destination IP address unrelated to Domain controllers can create false positives.\n- Exceptions can be added for noisy/frequent connections.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n  - Ticket requests can be used to investigate potentially compromised accounts.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["HTTP traffic on a non standard port. Verify that the destination IP address is not related to a Domain Controller."],"from":"now-9m","rule_id":"897dc6b5-b39f-432a-8d75-d3730d50c782","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1558","name":"Steal or Forge Kerberos Tickets","reference":"https://attack.mitre.org/techniques/T1558/"}]}],"to":"now","references":[],"version":213,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"},{"package":"sentinel_one_cloud_funnel","version":"^1.0.0"}],"required_fields":[{"name":"destination.address","type":"keyword","ecs":true},{"name":"destination.port","type":"long","ecs":true},{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"network.direction","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.pid","type":"long","ecs":true},{"name":"source.port","type":"long","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.network-*","logs-sentinel_one_cloud_funnel.*"],"query":"network where host.os.type == \"windows\" and event.type == \"start\" and network.direction == \"egress\" and\n  destination.port == 88 and source.port >= 49152 and process.pid != 4 and destination.address : \"*\" and\n  not \n  (\n    process.executable : (\n        \"\\\\device\\\\harddiskvolume?\\\\program files (x86)\\\\nmap\\\\nmap.exe\",\n        \"\\\\device\\\\harddiskvolume?\\\\program files (x86)\\\\nmap oem\\\\nmap.exe\",\n        \"\\\\device\\\\harddiskvolume?\\\\windows\\\\system32\\\\lsass.exe\",\n        \"?:\\\\Program Files\\\\Amazon Corretto\\\\jdk1*\\\\bin\\\\java.exe\",\n        \"?:\\\\Program Files\\\\BlackBerry\\\\UEM\\\\Proxy Server\\\\bin\\\\prunsrv.exe\",\n        \"?:\\\\Program Files\\\\BlackBerry\\\\UEM\\\\Core\\\\tomcat-core\\\\bin\\\\tomcat9.exe\",\n        \"?:\\\\Program Files\\\\DBeaver\\\\dbeaver.exe\",\n        \"?:\\\\Program Files\\\\Docker\\\\Docker\\\\resources\\\\com.docker.backend.exe\",\n        \"?:\\\\Program Files\\\\Docker\\\\Docker\\\\resources\\\\com.docker.vpnkit.exe\",\n        \"?:\\\\Program Files\\\\Docker\\\\Docker\\\\resources\\\\vpnkit.exe\",\n        \"?:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\",\n        \"?:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe\",\n        \"?:\\\\Program Files\\\\JetBrains\\\\PyCharm Community Edition*\\\\bin\\\\pycharm64.exe\",\n        \"?:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe\",\n        \"?:\\\\Program Files\\\\Oracle\\\\VirtualBox\\\\VirtualBoxVM.exe\",\n        \"?:\\\\Program Files\\\\Puppet Labs\\\\Puppet\\\\puppet\\\\bin\\\\ruby.exe\",\n        \"?:\\\\Program Files\\\\rapid7\\\\nexpose\\\\nse\\\\.DLLCACHE\\\\nseserv.exe\",\n        \"?:\\\\Program Files\\\\Silverfort\\\\Silverfort AD Adapter\\\\SilverfortServer.exe\",\n        \"?:\\\\Program Files\\\\Tenable\\\\Nessus\\\\nessusd.exe\",\n        \"?:\\\\Program Files\\\\VMware\\\\VMware View\\\\Server\\\\bin\\\\ws_TomcatService.exe\",\n        \"?:\\\\Program Files (x86)\\\\Advanced Port Scanner\\\\advanced_port_scanner.exe\",\n        \"?:\\\\Program Files (x86)\\\\DesktopCentral_Agent\\\\bin\\\\dcpatchscan.exe\",\n        \"?:\\\\Program Files (x86)\\\\GFI\\\\LanGuard 12 Agent\\\\lnsscomm.exe\",\n        \"?:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\",\n        \"?:\\\\Program Files (x86)\\\\Internet Explorer\\\\iexplore.exe\",\n        \"?:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\",\n        \"?:\\\\Program Files (x86)\\\\Microsoft\\\\EdgeUpdate\\\\MicrosoftEdgeUpdate.exe\",\n        \"?:\\\\Program Files (x86)\\\\Microsoft Silverlight\\\\sllauncher.exe\",\n        \"?:\\\\Program Files (x86)\\\\Nmap\\\\nmap.exe\",\n        \"?:\\\\Program Files (x86)\\\\Nmap OEM\\\\nmap.exe\",\n        \"?:\\\\Program Files (x86)\\\\nwps\\\\NetScanTools Pro\\\\NSTPRO.exe\",\n        \"?:\\\\Program Files (x86)\\\\SAP BusinessObjects\\\\tomcat\\\\bin\\\\tomcat9.exe\",\n        \"?:\\\\Program Files (x86)\\\\SuperScan\\\\scanner.exe\",\n        \"?:\\\\Program Files (x86)\\\\Zscaler\\\\ZSATunnel\\\\ZSATunnel.exe\",\n        \"?:\\\\Windows\\\\System32\\\\lsass.exe\",\n        \"?:\\\\Windows\\\\System32\\\\MicrosoftEdgeCP.exe\",\n        \"?:\\\\Windows\\\\System32\\\\svchost.exe\",\n        \"?:\\\\Windows\\\\SysWOW64\\\\vmnat.exe\",\n        \"?:\\\\Windows\\\\SystemApps\\\\Microsoft.MicrosoftEdge_*\\\\MicrosoftEdge.exe\",\n        \"System\"\n    ) and process.code_signature.trusted == true\n  ) and\n destination.address != \"127.0.0.1\" and destination.address != \"::1\"\n","actions":[]}
{"id":"7b9be52c-d8c1-48be-be7c-f3d3bd306d82","updated_at":"2025-03-25T03:48:14.494Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:43.063Z","created_by":"elastic","name":"Agent Spoofing - Mismatched Agent ID","tags":["Use Case: Threat Detection","Tactic: Defense Evasion","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":1,"description":"Detects events that have a mismatch on the expected event agent ID. The status \"agent_id_mismatch/mismatch\" occurs when the expected agent ID associated with the API key does not match the actual agent ID in an event. This could indicate attempts to spoof events in order to masquerade actual activity to evade detection.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Agent Spoofing - Mismatched Agent ID\n\nIn security environments, agent IDs uniquely identify software agents that report events. Adversaries may spoof these IDs to disguise unauthorized activities, evading detection systems. The detection rule identifies discrepancies between expected and actual agent IDs, flagging potential spoofing attempts. By monitoring for mismatches, it helps uncover efforts to masquerade malicious actions as legitimate.\n\n### Possible investigation steps\n\n- Review the event logs to identify the specific events where the agent_id_status is marked as \"agent_id_mismatch\" or \"mismatch\" to understand the scope and frequency of the issue.\n- Correlate the mismatched agent IDs with the associated API keys to determine if there are any patterns or commonalities that could indicate a targeted spoofing attempt.\n- Investigate the source IP addresses and user accounts associated with the mismatched events to identify any unauthorized access or suspicious activity.\n- Check for any recent changes or anomalies in the configuration or deployment of agents that could explain the mismatches, such as updates or reassignments.\n- Analyze historical data to determine if similar mismatches have occurred in the past and whether they were resolved or linked to known issues or threats.\n- Consult with the IT or security team to verify if there are any legitimate reasons for the agent ID discrepancies, such as testing or maintenance activities.\n\n### False positive analysis\n\n- Legitimate software updates or patches may temporarily cause agent ID mismatches. Users should verify if the mismatches coincide with scheduled updates and consider excluding these events if confirmed.\n- Network configuration changes, such as IP address reassignments, can lead to mismatches. Ensure that network changes are documented and correlate with the mismatched events before excluding them.\n- Virtual machine snapshots or clones might result in duplicate agent IDs. Users should track virtual machine activities and exclude events from known snapshot or cloning operations.\n- Load balancing or failover processes in high-availability environments can cause agent ID discrepancies. Review the infrastructure setup and exclude events that align with these processes.\n- Testing environments often simulate various agent activities, leading to mismatches. Clearly separate test environments from production in monitoring systems and exclude test-related events.\n\n### Response and remediation\n\n- Immediately isolate the affected systems to prevent further unauthorized access or data exfiltration. This can be done by disconnecting the system from the network or using network segmentation techniques.\n- Conduct a thorough review of the logs and events associated with the mismatched agent ID to identify any unauthorized changes or activities. Focus on the specific events flagged by the detection rule.\n- Revoke and reissue API keys associated with the compromised agent ID to prevent further misuse. Ensure that new keys are distributed securely and only to authorized personnel.\n- Implement additional monitoring on the affected systems and related network segments to detect any further attempts at agent ID spoofing or other suspicious activities.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if the threat actor has compromised other parts of the network.\n- Review and update access controls and authentication mechanisms to ensure that only legitimate agents can report events. Consider implementing multi-factor authentication for added security.\n- Document the incident, including all actions taken, and conduct a post-incident review to identify any gaps in detection or response. Use this information to enhance future threat detection and response capabilities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["This is meant to run only on datasources using Elastic Agent 7.14+ since versions prior to that will be missing the necessary field, resulting in false positives."],"from":"now-9m","rule_id":"3115bd2c-0baa-4df0-80ea-45e474b5ef93","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/"}]}],"to":"now","references":[],"version":103,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"event.agent_id_status","type":"keyword","ecs":true}],"setup":"","type":"query","language":"kuery","index":["logs-*","metrics-*","traces-*"],"query":"event.agent_id_status:(agent_id_mismatch or mismatch)\n","actions":[]}
{"id":"e1583295-f658-4710-a514-82f68277839c","updated_at":"2025-06-15T07:42:37.573Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:35.502Z","created_by":"elastic","name":"Potential ADIDNS Poisoning via Wildcard Record Creation","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Active Directory","Use Case: Active Directory Monitoring","Data Source: Windows Security Event Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Active Directory Integrated DNS (ADIDNS) is one of the core components of AD DS, leveraging AD's access control and replication to maintain domain consistency. It stores DNS zones as AD objects, a feature that, while robust, introduces some security issues, such as wildcard records, mainly because of the default permission (Any authenticated users) to create DNS-named records. Attackers can create wildcard records to redirect traffic that doesn't explicitly match records contained in the zone, becoming the Man-in-the-Middle and being able to abuse DNS similarly to LLMNR/NBNS spoofing.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential ADIDNS Poisoning via Wildcard Record Creation\n\nActive Directory Integrated DNS (ADIDNS) is crucial for maintaining domain consistency by storing DNS zones as AD objects. However, its default permissions allow authenticated users to create DNS records, which adversaries can exploit by adding wildcard records. This enables them to redirect traffic and perform Man-in-the-Middle attacks. The detection rule identifies such abuse by monitoring specific directory service changes indicative of wildcard record creation.\n\n### Possible investigation steps\n\n- Review the event logs on the affected Windows host to confirm the presence of event code 5137, which indicates a directory service object modification.\n- Examine the ObjectDN field in the event data to identify the specific DNS zone where the wildcard record was created, ensuring it starts with \"DC=*,\" to confirm the wildcard nature.\n- Check the user account associated with the event to determine if it is a legitimate account or potentially compromised, focusing on any unusual or unauthorized activity.\n- Investigate recent changes in the DNS zone to identify any other suspicious modifications or patterns that could indicate further malicious activity.\n- Correlate the event with network traffic logs to detect any unusual or redirected traffic patterns that could suggest a Man-in-the-Middle attack.\n- Assess the permissions and access controls on the DNS zones to ensure they are appropriately configured and restrict unnecessary modifications by authenticated users.\n\n### False positive analysis\n\n- Routine administrative changes to DNS records by IT staff can trigger alerts. To manage this, create exceptions for known administrative accounts or specific ObjectDN patterns that correspond to legitimate changes.\n- Automated systems or scripts that update DNS records as part of regular maintenance may cause false positives. Identify these systems and exclude their activity from triggering alerts by filtering based on their unique identifiers or event sources.\n- Software installations or updates that modify DNS settings might be flagged. Monitor and document these activities, and consider excluding them if they are part of a recognized and secure process.\n- Changes made by trusted third-party services that integrate with ADIDNS could be misinterpreted as threats. Verify these services and whitelist their actions to prevent unnecessary alerts.\n- Temporary testing environments that mimic production settings might generate alerts. Ensure these environments are clearly documented and excluded from monitoring if they are known to perform non-threatening wildcard record creations.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further exploitation or data exfiltration.\n- Revoke any potentially compromised credentials associated with the affected system or user accounts involved in the alert.\n- Conduct a thorough review of DNS records in the affected zone to identify and remove any unauthorized wildcard entries.\n- Implement stricter access controls on DNS record creation, limiting permissions to only necessary administrative accounts.\n- Monitor network traffic for signs of Man-in-the-Middle activity, focusing on unusual DNS queries or redirections.\n- Escalate the incident to the security operations center (SOC) for further investigation and to assess the potential impact on other systems.\n- Update detection mechanisms to include additional indicators of compromise related to ADIDNS abuse, enhancing future threat detection capabilities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"8f242ffb-b191-4803-90ec-0f19942e17fd","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1557","name":"Adversary-in-the-Middle","reference":"https://attack.mitre.org/techniques/T1557/"}]}],"to":"now","references":["https://www.netspi.com/blog/technical/network-penetration-testing/exploiting-adidns/","https://www.thehacker.recipes/a-d/movement/mitm-and-coerced-authentications/adidns-spoofing"],"version":107,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"winlog.event_data.ObjectDN","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'Audit Directory Service Changes' logging policy must be configured for (Success, Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Changes (Success,Failure)\n```\n\nThe above policy does not cover the target object by default (we still need it to be configured to generate events), so we need to set up an AuditRule using https://github.com/OTRF/Set-AuditRule.\n\n```\nSet-AuditRule -AdObjectPath 'AD:\\CN=MicrosoftDNS,DC=DomainDNSZones,DC=Domain,DC=com' -WellKnownSidType WorldSid -Rights CreateChild -InheritanceFlags Descendents -AttributeGUID e0fa1e8c-9b45-11d0-afdd-00c04fd930c9 -AuditFlags Success\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"any where host.os.type == \"windows\" and event.code == \"5137\" and\n    startsWith(winlog.event_data.ObjectDN, \"DC=*,\")\n","actions":[]}
{"id":"a88f82ee-1ce7-49f3-b3c3-b227596113e8","updated_at":"2025-06-15T08:06:58.091Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.098Z","created_by":"elastic","name":"PowerShell Mailbox Collection Script","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Collection","Data Source: PowerShell Logs","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Detects PowerShell scripts that can be used to collect data from mailboxes. Adversaries may target user email to collect sensitive information.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating PowerShell Mailbox Collection Script\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks. This makes it available for use in various environments, and creates an attractive way for attackers to execute code.\n\nEmail mailboxes and their information can be valuable assets for attackers. Company mailboxes often contain sensitive information such as login credentials, intellectual property, financial data, and personal information, making them high-value targets for malicious actors.\n\nThis rule identifies scripts that contains methods and classes that can be abused to collect emails from local and remote mailboxes.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Determine whether the script was executed and capture relevant information, such as arguments that reveal intent or are indicators of compromise (IoCs).\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n- Determine whether the script stores the captured data locally.\n- Investigate whether the script contains exfiltration capabilities and identify the exfiltration server.\n  - Assess network data to determine if the host communicated with the exfiltration server.\n\n### False positive analysis\n\n- This mechanism can be used legitimately. Analysts can dismiss the alert if the administrator is aware of the activity and it is done with proper approval.\n\n### Related rules\n\n- Exporting Exchange Mailbox via PowerShell - 6aace640-e631-4870-ba8e-5fdda09325db\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- If the involved host is not the Exchange server, isolate the host to prevent further post-compromise behavior.\n- Prioritize cases that involve personally identifiable information (PII) or other classified data.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"a2d04374-187c-4fd9-b513-3ad4e7fdd67a","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0009","name":"Collection","reference":"https://attack.mitre.org/tactics/TA0009/"},"technique":[{"id":"T1114","name":"Email Collection","reference":"https://attack.mitre.org/techniques/T1114/","subtechnique":[{"id":"T1114.001","name":"Local Email Collection","reference":"https://attack.mitre.org/techniques/T1114/001/"},{"id":"T1114.002","name":"Remote Email Collection","reference":"https://attack.mitre.org/techniques/T1114/002/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/","subtechnique":[{"id":"T1059.001","name":"PowerShell","reference":"https://attack.mitre.org/techniques/T1059/001/"}]}]}],"to":"now","references":["https://github.com/dafthack/MailSniper/blob/master/MailSniper.ps1","https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/apt29/Archive/CALDERA_DIY/evals/payloads/stepSeventeen_email.ps1"],"version":111,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.category","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"powershell.file.script_block_text","type":"unknown","ecs":false},{"name":"user.id","type":"keyword","ecs":true}],"setup":"## Setup\n\nThe 'PowerShell Script Block Logging' logging policy must be enabled.\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nAdministrative Templates >\nWindows PowerShell >\nTurn on PowerShell Script Block Logging (Enable)\n```\n\nSteps to implement the logging policy via registry:\n\n```\nreg add \"hklm\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" /v EnableScriptBlockLogging /t REG_DWORD /d 1\n```\n","type":"query","language":"kuery","index":["winlogbeat-*","logs-windows.powershell*"],"query":"event.category:process and host.os.type:windows and\n  (\n   powershell.file.script_block_text : (\n      \"Microsoft.Office.Interop.Outlook\" or\n      \"Interop.Outlook.olDefaultFolders\" or\n      \"::olFolderInBox\"\n   ) or\n   powershell.file.script_block_text : (\n      \"Microsoft.Exchange.WebServices.Data.Folder\" or\n      \"Microsoft.Exchange.WebServices.Data.FileAttachment\"\n   )\n  ) and not user.id : \"S-1-5-18\"\n","actions":[]}
{"id":"85874e5b-8905-4441-b9b3-df58dc54fbed","updated_at":"2025-03-25T09:10:49.959Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:44.112Z","created_by":"elastic","name":"Agent Spoofing - Multiple Hosts Using Same Agent","tags":["Use Case: Threat Detection","Tactic: Defense Evasion","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":1,"description":"Detects when multiple hosts are using the same agent ID. This could occur in the event of an agent being taken over and used to inject illegitimate documents into an instance as an attempt to spoof events in order to masquerade actual activity to evade detection.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Agent Spoofing - Multiple Hosts Using Same Agent\n\nIn network environments, agents are deployed on hosts to monitor and report activities. Adversaries may exploit these agents by hijacking their IDs to inject false data, masking malicious actions. The detection rule identifies anomalies where multiple hosts report using the same agent ID, signaling potential spoofing attempts. By focusing on unique agent ID usage, it helps uncover evasion tactics aimed at concealing unauthorized activities.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific agent ID that is being reported by multiple hosts.\n- Cross-reference the agent ID with the list of known and authorized agents to determine if it has been compromised or misconfigured.\n- Examine the network logs and host activity for each host reporting the same agent ID to identify any unusual or unauthorized activities.\n- Check for any recent changes or updates to the agent software on the affected hosts that could explain the anomaly.\n- Investigate the timeline of events to determine when the agent ID started being used by multiple hosts and correlate this with any known incidents or changes in the network environment.\n- Assess the potential impact of the spoofing attempt on the network's security posture and consider isolating affected hosts if necessary to prevent further malicious activity.\n\n### False positive analysis\n\n- Legitimate load balancing or failover scenarios where multiple hosts are configured to use the same agent ID for redundancy can trigger false positives. Users should identify and document these configurations, then create exceptions in the detection rule to exclude these known non-threatening behaviors.\n- Virtualized environments where snapshots or clones of a host are created might result in multiple instances reporting the same agent ID. Users should ensure that each virtual instance is assigned a unique agent ID or adjust the rule to account for these scenarios.\n- Testing or development environments where agents are intentionally duplicated for testing purposes can also lead to false positives. Users should tag these environments appropriately and modify the rule to exclude events from these tags.\n- In cases where agents are temporarily reassigned to different hosts for maintenance or troubleshooting, users should maintain a log of these activities and adjust the detection rule to ignore these temporary changes.\n\n### Response and remediation\n\n- Isolate affected hosts immediately to prevent further spread of potentially malicious activities across the network.\n- Revoke and reissue new agent IDs for the affected hosts to ensure that compromised IDs are no longer in use.\n- Conduct a thorough forensic analysis on the isolated hosts to identify any unauthorized changes or malicious software that may have been introduced.\n- Review and update access controls and authentication mechanisms for agent deployment to prevent unauthorized access and hijacking of agent IDs.\n- Monitor network traffic and logs closely for any signs of continued spoofing attempts or related suspicious activities.\n- Escalate the incident to the security operations center (SOC) and relevant stakeholders to ensure awareness and coordinated response efforts.\n- Implement enhanced logging and alerting for agent ID anomalies to improve detection of similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["This is meant to run only on datasources using Elastic Agent 7.14+ since versions prior to that will be missing the necessary field, resulting in false positives."],"from":"now-9m","rule_id":"493834ca-f861-414c-8602-150d5505b777","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/"}]}],"to":"now","references":[],"version":103,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"event.agent_id_status","type":"keyword","ecs":true},{"name":"tags","type":"keyword","ecs":true}],"setup":"","type":"threshold","language":"kuery","index":["logs-*","metrics-*","traces-*"],"query":"event.agent_id_status:* and not tags:forwarded\n","threshold":{"field":["agent.id"],"value":2,"cardinality":[{"field":"host.id","value":2}]},"actions":[]}
{"id":"07ea54de-eeae-4b07-a9b5-afc82249cf64","updated_at":"2025-06-15T07:48:42.001Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:51.340Z","created_by":"elastic","name":"Permission Theft - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Use Case: Threat Detection","Tactic: Privilege Escalation","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected Permission Theft. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Permission Theft - Detected - Elastic Endgame\n\nElastic Endgame is a security solution that monitors and detects unauthorized access attempts, focusing on privilege escalation tactics like access token manipulation. Adversaries exploit this by stealing or forging tokens to gain elevated permissions. The detection rule identifies suspicious token-related events, flagging high-risk activities indicative of permission theft, thus enabling timely threat response.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of event.kind:alert and event.module:endgame, ensuring the alert is related to Elastic Endgame's detection capabilities.\n- Examine the event.action and endgame.event_subtype_full fields for token_protection_event to identify the specific token manipulation activity that triggered the alert.\n- Investigate the source and destination user accounts involved in the alert to determine if there are any unauthorized access attempts or privilege escalations.\n- Check for any recent changes or anomalies in the permissions or roles associated with the affected accounts to assess potential impact.\n- Correlate the alert with other security events or logs to identify any patterns or additional indicators of compromise that may suggest a broader attack campaign.\n- Consult the MITRE ATT&CK framework for additional context on the Access Token Manipulation technique (T1134) to understand potential adversary behaviors and mitigation strategies.\n\n### False positive analysis\n\n- Routine administrative tasks involving token management can trigger alerts. Review and document these tasks to create exceptions for known safe activities.\n- Automated scripts or services that frequently access tokens for legitimate purposes may be flagged. Identify these scripts and whitelist them to prevent unnecessary alerts.\n- Software updates or installations that require elevated permissions might be detected as suspicious. Monitor these events and adjust detection rules to accommodate regular update schedules.\n- Internal security tools that perform token manipulation for testing or monitoring purposes can cause false positives. Ensure these tools are recognized and excluded from detection rules.\n- User behavior analytics might misinterpret legitimate user actions as threats. Regularly update user profiles and behavior baselines to minimize false alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or lateral movement by the adversary.\n- Revoke any compromised or suspicious access tokens identified in the alert to prevent further misuse of elevated permissions.\n- Conduct a thorough review of recent account activities associated with the compromised tokens to identify any unauthorized actions or changes.\n- Reset passwords and enforce multi-factor authentication for accounts involved in the incident to enhance security and prevent future unauthorized access.\n- Restore any altered or deleted data from backups, ensuring that the restored data is free from any malicious modifications.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems or accounts have been affected.\n- Implement enhanced monitoring and logging for token-related activities to detect and respond to similar threats more effectively in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"c3167e1b-f73c-41be-b60b-87f4df707fe3","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/"}]}],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:token_protection_event or endgame.event_subtype_full:token_protection_event)\n","actions":[]}
{"id":"48fe4bda-96df-4a52-9022-d748846348d9","updated_at":"2025-06-15T07:42:35.571Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:43.112Z","created_by":"elastic","name":"Malware - Prevented - Elastic Endgame","tags":["Data Source: Elastic Endgame","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame prevented Malware. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Malware - Prevented - Elastic Endgame\n\nElastic Endgame is a security solution designed to prevent malware by analyzing and classifying files in real-time. Adversaries may attempt to bypass such defenses by disguising malicious files to evade detection. The detection rule identifies prevention events where Elastic Endgame has successfully blocked a file classified as malware, focusing on alerts generated by file classification activities. This helps security analysts quickly respond to and investigate potential threats.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the event.kind is 'alert' and event.module is 'endgame', ensuring the alert is relevant to the Elastic Endgame prevention mechanism.\n- Examine the endgame.metadata.type field to verify it is 'prevention', indicating that the alert pertains to a successfully blocked malware attempt.\n- Investigate the event.action or endgame.event_subtype_full fields to understand the specific file classification event that triggered the alert.\n- Gather additional context by checking the file path, hash, and any associated metadata to identify the potentially malicious file and its origin.\n- Cross-reference the alert with other security logs and alerts to determine if there are related events or patterns that could indicate a broader attack campaign.\n- Assess the risk score and severity to prioritize the investigation and response efforts, considering the high severity and risk score of 73.\n- Utilize the Elastic Endgame interface or provided links for further information and context about the specific prevention event and any recommended remediation actions.\n\n### False positive analysis\n\n- Legitimate software updates or installations may trigger the rule if they involve file classification activities. To manage this, create exceptions for known and trusted software update processes.\n- Security tools or system processes that perform file scanning or classification might be flagged. Identify these processes and add them to an exception list to prevent unnecessary alerts.\n- Custom scripts or applications developed in-house that perform file operations similar to malware can be mistaken for threats. Review these scripts and whitelist them if they are verified as safe.\n- Frequent alerts from specific directories known to contain non-malicious files, such as temporary or backup folders, can be excluded by specifying these paths in the rule exceptions.\n- If certain file types are consistently misclassified as threats, consider adjusting the rule to exclude these file types after confirming they are not harmful.\n\n### Response and remediation\n\n- Isolate the affected system immediately to prevent the spread of malware to other parts of the network. Disconnect the system from the network and any shared drives.\n- Verify the alert by cross-referencing the blocked file details with known malware signatures or threat intelligence sources to confirm the threat.\n- Remove the malicious file from the system using a trusted antivirus or endpoint protection tool. Ensure that the file is quarantined or deleted to prevent re-execution.\n- Conduct a thorough scan of the affected system and any connected devices to identify and remove any additional malicious files or remnants.\n- Restore any affected files or systems from a clean backup, ensuring that the backup is free from malware before restoration.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems may be compromised.\n- Review and update security policies and endpoint protection configurations to enhance detection and prevention capabilities against similar threats in the future.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"3b382770-efbb-44f4-beed-f5e0a051b895","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:file_classification_event or endgame.event_subtype_full:file_classification_event)\n","actions":[]}
{"id":"fc88f5d4-384f-481a-826c-41c595353183","updated_at":"2025-06-15T07:42:32.530Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:37.147Z","created_by":"elastic","name":"Group Policy Abuse for Privilege Addition","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Active Directory","Resources: Investigation Guide","Use Case: Active Directory Monitoring","Data Source: Windows Security Event Logs"],"interval":"5m","enabled":true,"revision":2,"description":"Detects the first occurrence of a modification to Group Policy Object Attributes to add privileges to user accounts or use them to add users as local admins.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Group Policy Abuse for Privilege Addition\n\nGroup Policy Objects (GPOs) can be used to add rights and/or modify Group Membership on GPOs by changing the contents of an INF file named GptTmpl.inf, which is responsible for storing every setting under the Security Settings container in the GPO. This file is unique for each GPO, and only exists if the GPO contains security settings. Example Path: \"\\\\DC.com\\SysVol\\DC.com\\Policies\\{PolicyGUID}\\Machine\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf\"\n\n#### Possible investigation steps\n\n- This attack abuses a legitimate mechanism of Active Directory, so it is important to determine whether the activity is legitimate and the administrator is authorized to perform this operation.\n- Retrieve the contents of the `GptTmpl.inf` file, and under the `Privilege Rights` section, look for potentially dangerous high privileges, for example: SeTakeOwnershipPrivilege, SeEnableDelegationPrivilege, etc.\n- Inspect the user security identifiers (SIDs) associated with these privileges, and if they should have these privileges.\n\n### False positive analysis\n\n- Inspect whether the user that has done the modifications should be allowed to. The user name can be found in the `winlog.event_data.SubjectUserName` field.\n\n### Related rules\n\n- Scheduled Task Execution at Scale via GPO - 15a8ba77-1c13-4274-88fe-6bd14133861e\n- Startup/Logon Script added to Group Policy Object - 16fac1a1-21ee-4ca6-b720-458e3855d046\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- The investigation and containment must be performed in every computer controlled by the GPO, where necessary.\n- Remove the script from the GPO.\n- Check if other GPOs have suspicious scripts attached.\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-6m","rule_id":"b9554892-5e0e-424b-83a0-5aef95aa43bf","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1484","name":"Domain or Tenant Policy Modification","reference":"https://attack.mitre.org/techniques/T1484/","subtechnique":[{"id":"T1484.001","name":"Group Policy Modification","reference":"https://attack.mitre.org/techniques/T1484/001/"}]}]}],"to":"now","references":["https://github.com/atc-project/atc-data/blob/master/docs/Logging_Policies/LP_0025_windows_audit_directory_service_changes.md","https://labs.f-secure.com/tools/sharpgpoabuse"],"version":214,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"system","version":"^2.0.0"},{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"winlog.event_data.AttributeLDAPDisplayName","type":"unknown","ecs":false},{"name":"winlog.event_data.AttributeValue","type":"unknown","ecs":false}],"setup":"## Setup\n\nThe 'Audit Directory Service Changes' audit policy must be configured (Success Failure).\nSteps to implement the logging policy with Advanced Audit Configuration:\n\n```\nComputer Configuration >\nPolicies >\nWindows Settings >\nSecurity Settings >\nAdvanced Audit Policies Configuration >\nAudit Policies >\nDS Access >\nAudit Directory Service Changes (Success,Failure)\n```\n","type":"eql","language":"eql","index":["logs-system.security*","logs-windows.forwarded*","winlogbeat-*"],"query":"any where host.os.type == \"windows\" and event.code: \"5136\" and\n  winlog.event_data.AttributeLDAPDisplayName: \"gPCMachineExtensionNames\" and\n  winlog.event_data.AttributeValue: \"*827D319E-6EAC-11D2-A4EA-00C04F79F83A*\" and\n  winlog.event_data.AttributeValue: \"*803E14A0-B4FB-11D0-A0D0-00A0C90F574B*\"\n","actions":[]}
{"id":"a293be5b-5e7a-4d58-a982-c78e5764bf41","updated_at":"2025-06-15T07:42:37.572Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:34.557Z","created_by":"elastic","name":"Suspicious LSASS Access via MalSecLogon","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Data Source: Sysmon","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies suspicious access to LSASS handle from a call trace pointing to seclogon.dll and with a suspicious access rights value. This may indicate an attempt to leak an LSASS handle via abusing the Secondary Logon service in preparation for credential access.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious LSASS Access via MalSecLogon\n\nThe Local Security Authority Subsystem Service (LSASS) is crucial for managing security policies and user authentication in Windows environments. Adversaries may exploit the Secondary Logon service to gain unauthorized access to LSASS, aiming to extract sensitive credentials. The detection rule identifies this threat by monitoring for unusual access patterns involving LSASS, specifically when the seclogon.dll is involved, indicating potential credential dumping activities.\n\n### Possible investigation steps\n\n- Review the event logs for the specific event code \"10\" to gather more details about the process that triggered the alert, focusing on the time of occurrence and any associated user accounts.\n- Examine the process details for \"svchost.exe\" to determine if it is running under an expected service or if there are any anomalies in its execution context, such as unusual parent processes or command-line arguments.\n- Investigate the call trace involving \"seclogon.dll\" to understand the sequence of events leading to the LSASS access, and check for any other suspicious modules or DLLs loaded in the process.\n- Analyze the granted access value \"0x14c0\" to confirm if it aligns with typical access patterns for legitimate processes interacting with LSASS, and identify any deviations that could indicate malicious intent.\n- Correlate the alert with other security events or logs from the same host or user account to identify any patterns or additional indicators of compromise, such as failed login attempts or other suspicious process activities.\n- Check for any recent changes or updates to the system that might explain the unusual behavior, such as software installations, patches, or configuration changes that could affect the Secondary Logon service or LSASS.\n\n### False positive analysis\n\n- Legitimate administrative tools or scripts that require access to LSASS for system management tasks may trigger this rule. Users can create exceptions for known tools by excluding specific process names or paths that are verified as safe.\n- Security software or endpoint protection solutions that perform regular scans and require access to LSASS might be flagged. Coordinate with security vendors to identify these processes and exclude them from the rule.\n- System updates or patches that involve the Secondary Logon service could cause temporary access patterns that mimic suspicious behavior. Monitor update schedules and temporarily adjust the rule to prevent false alerts during these periods.\n- Custom enterprise applications that utilize the Secondary Logon service for legitimate purposes may inadvertently match the rule criteria. Work with application developers to understand these access patterns and whitelist the associated processes.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes associated with svchost.exe that are accessing LSASS with the identified suspicious access rights.\n- Conduct a thorough review of user accounts and privileges on the affected system to identify any unauthorized changes or access.\n- Reset passwords for all accounts that may have been compromised, focusing on high-privilege accounts first.\n- Collect and preserve relevant logs and forensic data from the affected system for further analysis and potential legal action.\n- Escalate the incident to the security operations center (SOC) or incident response team for a comprehensive investigation and to determine the full scope of the breach.\n- Implement additional monitoring and alerting for similar suspicious activities involving LSASS and seclogon.dll to enhance detection capabilities.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"7ba58110-ae13-439b-8192-357b0fcfa9d7","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"to":"now","references":["https://splintercod3.blogspot.com/p/the-hidden-side-of-seclogon-part-3.html"],"version":311,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"windows","version":"^3.0.0"}],"required_fields":[{"name":"event.code","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"winlog.event_data.CallTrace","type":"keyword","ecs":false},{"name":"winlog.event_data.GrantedAccess","type":"keyword","ecs":false},{"name":"winlog.event_data.TargetImage","type":"keyword","ecs":false}],"setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","type":"eql","language":"eql","index":["winlogbeat-*","logs-windows.sysmon_operational-*"],"query":"process where host.os.type == \"windows\" and event.code == \"10\" and\n  winlog.event_data.TargetImage : \"?:\\\\WINDOWS\\\\system32\\\\lsass.exe\" and\n\n   /* seclogon service accessing lsass */\n  winlog.event_data.CallTrace : \"*seclogon.dll*\" and process.name : \"svchost.exe\" and\n\n   /* PROCESS_CREATE_PROCESS & PROCESS_DUP_HANDLE & PROCESS_QUERY_INFORMATION */\n  winlog.event_data.GrantedAccess == \"0x14c0\"\n","actions":[]}
{"id":"f6078d7d-6dd0-4a10-a16c-f1848aff6f7c","updated_at":"2025-06-15T07:42:35.561Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:40.017Z","created_by":"elastic","name":"Malware - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected Malware. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":99,"severity":"critical","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Malware - Detected - Elastic Endgame\n\nElastic Endgame is a security solution that provides endpoint protection by monitoring and analyzing system activities to detect malicious behavior. Adversaries may exploit this technology by attempting to bypass its detection capabilities or by executing malware that mimics legitimate processes. The detection rule identifies suspicious file classification events, flagging potential malware activities with a high-risk score, thus enabling swift investigation and response.\n\n### Possible investigation steps\n\n- Review the alert details in the Elastic Endgame console by clicking the Elastic Endgame icon in the event.module column or the link in the rule.reference column to gather more context about the detected malware.\n- Examine the specific file classification event by checking the event.action or endgame.event_subtype_full fields to understand the nature of the suspicious file activity.\n- Analyze the endpoint's recent activity logs to identify any unusual behavior or patterns that coincide with the time of the alert.\n- Investigate the source and destination of the file involved in the alert to determine if it is part of a known legitimate process or if it has been flagged in previous incidents.\n- Check for any additional alerts or related events from the same endpoint or user to assess if this is part of a broader attack or isolated incident.\n- Consult threat intelligence sources to see if the file or behavior matches known malware signatures or tactics, techniques, and procedures (TTPs).\n\n### False positive analysis\n\n- Legitimate software updates or installations may trigger file classification events. Users can create exceptions for known update processes to prevent these from being flagged as malware.\n- System maintenance tasks, such as disk cleanup or defragmentation, might mimic suspicious file activities. Exclude these routine tasks by identifying their specific processes and adding them to the exception list.\n- Security tools or antivirus software performing scans can generate alerts. Identify these tools and configure the rule to ignore their activities to reduce false positives.\n- Custom scripts or automation tools used within the organization may be misclassified. Review these scripts and whitelist them if they are verified as safe and necessary for business operations.\n- Frequent alerts from specific directories known to store temporary or cache files can be excluded by specifying these directories in the rule settings.\n\n### Response and remediation\n\n- Isolate the affected endpoint immediately to prevent further spread of the detected malware across the network.\n- Terminate any suspicious processes identified by Elastic Endgame that are associated with the file classification event.\n- Quarantine the suspicious files flagged by the detection rule to prevent execution and further analysis.\n- Conduct a thorough scan of the isolated endpoint using updated antivirus and anti-malware tools to identify and remove any additional threats.\n- Restore the affected system from a known good backup if malware removal is not feasible or if system integrity is compromised.\n- Review and update endpoint protection policies to ensure they are configured to detect similar threats in the future.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"0a97b20f-4144-49ea-be32-b540ecc445de","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:file_classification_event or endgame.event_subtype_full:file_classification_event)\n","actions":[]}
{"id":"06d58891-0fee-470b-8452-ab765c294684","updated_at":"2025-06-15T07:42:47.632Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:46.260Z","created_by":"elastic","name":"Persistence via WMI Standard Registry Provider","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Persistence","Data Source: Elastic Endgame","Data Source: Elastic Defend","Resources: Investigation Guide"],"interval":"5m","enabled":true,"revision":2,"description":"Identifies use of the Windows Management Instrumentation StdRegProv (registry provider) to modify commonly abused registry locations for persistence.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n### Investigating Persistence via WMI Standard Registry Provider\n\nThe Windows Management Instrumentation (WMI) StdRegProv is a registry provider that allows users to manage registry keys and values on Windows systems. Adversaries may abuse this functionality to modify registry locations commonly used for persistence, enabling them to maintain unauthorized access to a system.\n\nThis rule identifies instances where the WMI StdRegProv is used to modify specific registry paths associated with persistence mechanisms.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Validate if the activity is not related to planned patches, updates, network administrator activity, or legitimate software installations.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n- Identify which process triggered this behavior.\n- Verify whether the file specified in the run key is signed.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Examine the file specified in the run key using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and Remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-9m","rule_id":"70d12c9c-0dbd-4a1a-bc44-1467502c9cf6","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0003","name":"Persistence","reference":"https://attack.mitre.org/tactics/TA0003/"},"technique":[{"id":"T1543","name":"Create or Modify System Process","reference":"https://attack.mitre.org/techniques/T1543/","subtechnique":[{"id":"T1543.003","name":"Windows Service","reference":"https://attack.mitre.org/techniques/T1543/003/"}]},{"id":"T1547","name":"Boot or Logon Autostart Execution","reference":"https://attack.mitre.org/techniques/T1547/","subtechnique":[{"id":"T1547.001","name":"Registry Run Keys / Startup Folder","reference":"https://attack.mitre.org/techniques/T1547/001/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1047","name":"Windows Management Instrumentation","reference":"https://attack.mitre.org/techniques/T1047/"}]}],"to":"now","references":["https://docs.microsoft.com/en-us/previous-versions/windows/desktop/regprov/stdregprov","https://www.elastic.co/security-labs/hunting-for-persistence-using-elastic-security-part-1"],"version":112,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"registry.data.strings","type":"wildcard","ecs":true},{"name":"registry.path","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.registry-*","endgame-*"],"query":"registry where host.os.type == \"windows\" and event.type == \"change\" and\n registry.data.strings != null and process.name : \"WmiPrvSe.exe\" and\n registry.path : (\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Command Processor\\\\Autorun\",\n                  \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                  \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                  \"HKLM\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                  \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*\",\n                  \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*\",\n                  \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\*\",\n                  \"HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\*\",\n                  \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\*\",\n                  \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\*\",\n                  \"HKLM\\\\SYSTEM\\\\*ControlSet*\\\\Services\\\\*\\\\ServiceDLL\",\n                  \"HKLM\\\\SYSTEM\\\\*ControlSet*\\\\Services\\\\*\\\\ImagePath\",\n                  \"HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\\\\*\",\n                  \"HKEY_USERS\\\\*\\\\Environment\\\\UserInitMprLogonScript\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\Shell\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logoff\\\\Script\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logon\\\\Script\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Shutdown\\\\Script\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Startup\\\\Script\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Ctf\\\\LangBarAddin\\\\*\\\\FilePath\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\*\\\\Exec\",\n                  \"HKEY_USERS\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\*\\\\Script\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Command Processor\\\\Autorun\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\*\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\*\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\*\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\*\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\SYSTEM\\\\*ControlSet*\\\\Services\\\\*\\\\ServiceDLL\",\n                  \"\\\\REGISTRY\\\\MACHINE\\\\SYSTEM\\\\*ControlSet*\\\\Services\\\\*\\\\ImagePath\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\\\\*\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\Environment\\\\UserInitMprLogonScript\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Load\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\Shell\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logoff\\\\Script\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Logon\\\\Script\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Shutdown\\\\Script\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows\\\\System\\\\Scripts\\\\Startup\\\\Script\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Ctf\\\\LangBarAddin\\\\*\\\\FilePath\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\*\\\\Exec\",\n                  \"\\\\REGISTRY\\\\USER\\\\*\\\\SOFTWARE\\\\Microsoft\\\\Internet Explorer\\\\Extensions\\\\*\\\\Script\"\n                  )\n","actions":[]}
{"id":"6900f1e9-9960-498e-bf5a-96d883710590","updated_at":"2025-06-15T07:42:32.536Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:45.115Z","created_by":"elastic","name":"Credential Dumping - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected Credential Dumping. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Credential Dumping - Detected - Elastic Endgame\n\nElastic Endgame is a security solution that monitors and detects suspicious activities, such as credential dumping, which is a technique used by adversaries to extract sensitive authentication data. Attackers exploit this to gain unauthorized access to systems. The detection rule identifies such threats by analyzing alerts and specific event actions related to credential theft, ensuring timely threat detection and response.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of event.kind:alert and event.module:endgame, ensuring the alert is related to the Elastic Endgame detection.\n- Examine the event.action and endgame.event_subtype_full fields for the value cred_theft_event to understand the specific credential theft activity detected.\n- Check the associated host and user information to identify the potentially compromised system and user accounts.\n- Investigate the timeline of events leading up to and following the alert to identify any suspicious activities or patterns that may indicate further compromise.\n- Correlate the alert with other security events or logs to determine if this is part of a larger attack or isolated incident.\n- Assess the risk score and severity to prioritize the response and determine if immediate action is required to contain the threat.\n- Consult the MITRE ATT&CK framework for additional context on the T1003 technique to understand potential attacker methods and improve defensive measures.\n\n### False positive analysis\n\n- Routine administrative tasks that involve legitimate credential access tools may trigger alerts. Users can create exceptions for known administrative accounts or tools that are frequently used in these tasks.\n- Security software updates or scans that access credential stores might be flagged. Exclude these processes by identifying their specific event actions and adding them to the exception list.\n- Automated scripts for system maintenance that require credential access could be misidentified. Review and whitelist these scripts by their unique identifiers or execution paths.\n- Legitimate software installations that require elevated privileges may cause alerts. Monitor and exclude these installation processes by verifying their source and purpose.\n- Regularly scheduled backups that access credential data might be detected. Ensure these backup processes are recognized and excluded by specifying their event actions in the rule configuration.\n\n### Response and remediation\n\n- Isolate the affected system immediately to prevent further unauthorized access and lateral movement within the network.\n- Terminate any suspicious processes identified as part of the credential dumping activity to halt ongoing malicious actions.\n- Change all potentially compromised credentials, prioritizing those with elevated privileges, to mitigate unauthorized access risks.\n- Conduct a thorough review of access logs and system events to identify any additional compromised accounts or systems.\n- Restore affected systems from a known good backup to ensure the integrity of the system and data.\n- Implement enhanced monitoring on the affected systems and accounts to detect any signs of recurring or related malicious activity.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional containment or remediation actions are necessary.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"571afc56-5ed9-465d-a2a9-045f099f6e7e","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:cred_theft_event or endgame.event_subtype_full:cred_theft_event)\n","actions":[]}
{"id":"e55d8e14-443c-4e89-a662-3b15a5c36958","updated_at":"2025-06-15T07:42:35.560Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:53.387Z","created_by":"elastic","name":"Ransomware - Prevented - Elastic Endgame","tags":["Data Source: Elastic Endgame","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame prevented ransomware. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Ransomware - Prevented - Elastic Endgame\n\nElastic Endgame is a security solution designed to prevent ransomware by monitoring and analyzing system events. Adversaries exploit vulnerabilities to deploy ransomware, encrypting files and demanding payment. The detection rule identifies ransomware activities by analyzing alerts and prevention events, focusing on specific actions and event types, thus enabling timely intervention and threat mitigation.\n\n### Possible investigation steps\n\n- Review the alert details in the Elastic Endgame console by clicking the Elastic Endgame icon in the event.module column or the link in the rule.reference column to gather more context about the specific prevention event.\n- Examine the event.kind field to confirm that the alert is indeed an alert type and verify the event.module is set to endgame, ensuring the alert is generated by the Elastic Endgame module.\n- Check the endgame.metadata.type field to ensure it is marked as prevention, indicating that the ransomware activity was successfully blocked.\n- Investigate the event.action and endgame.event_subtype_full fields to identify the specific ransomware event that triggered the alert, which can provide insights into the type of ransomware activity that was attempted.\n- Correlate the alert with other security events and logs from the same timeframe to identify any related activities or anomalies that might indicate a broader attack attempt or compromise.\n- Assess the affected system(s) for any signs of compromise or residual malicious activity, ensuring that the ransomware prevention was comprehensive and no other threats remain.\n\n### False positive analysis\n\n- Routine software updates or installations may trigger alerts as they can mimic ransomware behavior. Users should review these events and create exceptions for trusted software update processes.\n- Backup operations that involve large-scale file modifications or encryptions might be misidentified as ransomware activities. Exclude known backup software and processes from triggering alerts.\n- Security testing tools or scripts designed to simulate ransomware for training or assessment purposes can cause false positives. Ensure these tools are whitelisted and their activities are documented.\n- Automated file encryption services used for legitimate purposes, such as data protection, may be flagged. Identify and exclude these services from the rule to prevent unnecessary alerts.\n- Frequent alerts from specific applications or processes that are known to be safe should be analyzed, and exceptions should be created to reduce noise and focus on genuine threats.\n\n### Response and remediation\n\n- Isolate the affected system immediately to prevent further spread of the ransomware. Disconnect it from the network and any shared drives.\n- Use Elastic Endgame to identify and terminate any malicious processes associated with the ransomware event to halt encryption activities.\n- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to remove any remaining malicious files or components.\n- Restore encrypted files from the most recent clean backup to ensure data integrity and minimize data loss.\n- Review and update endpoint protection settings and policies in Elastic Endgame to enhance detection and prevention capabilities against similar ransomware threats.\n- Notify the IT security team and relevant stakeholders about the incident for awareness and further investigation into potential vulnerabilities exploited.\n- Document the incident details, including the response actions taken, to improve future incident response strategies and facilitate any necessary reporting or compliance requirements.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"e3c5d5cb-41d5-4206-805c-f30561eae3ac","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:prevention and (event.action:ransomware_event or endgame.event_subtype_full:ransomware_event)\n","actions":[]}
{"id":"52ffaceb-447e-4568-9c6e-4f20be33f6c9","updated_at":"2025-06-15T07:42:35.557Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:48.223Z","created_by":"elastic","name":"Ransomware - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected ransomware. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":99,"severity":"critical","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Ransomware - Detected - Elastic Endgame\n\nElastic Endgame is a security solution designed to detect and respond to threats like ransomware by analyzing system events and behaviors. Adversaries exploit vulnerabilities to deploy ransomware, encrypting files and demanding payment. The detection rule identifies ransomware activity by monitoring specific alert types and event actions, flagging critical threats for immediate investigation.\n\n### Possible investigation steps\n\n- Review the alert details in Elastic Endgame by clicking the icon in the event.module column or the link in the rule.reference column to gather more context about the detected ransomware event.\n- Analyze the event.kind:alert and event.module:endgame fields to confirm the alert's origin and ensure it aligns with known ransomware activity.\n- Examine the event.action:ransomware_event and endgame.event_subtype_full:ransomware_event fields to identify the specific actions or behaviors that triggered the alert.\n- Investigate the affected systems and endpoints to determine the scope of the ransomware impact, focusing on any encrypted files or unusual system behaviors.\n- Check for any additional alerts or related events in the Elastic Endgame logs that might indicate lateral movement or further malicious activity associated with the ransomware.\n\n### False positive analysis\n\n- Routine backup operations can sometimes mimic ransomware behavior by accessing and modifying large numbers of files. Users should review backup schedules and processes to ensure they are not triggering alerts.\n- Legitimate software updates or installations may be flagged as ransomware events due to their file modification activities. Users can create exceptions for trusted software update processes to prevent false positives.\n- Automated file encryption tools used for legitimate purposes, such as data protection, might trigger ransomware alerts. Users should whitelist these tools if they are verified and necessary for business operations.\n- Security testing or penetration testing activities that simulate ransomware attacks can be mistaken for real threats. Ensure that these activities are coordinated with the security team and excluded from detection rules during testing periods.\n- Frequent alerts from specific non-critical systems or applications that are known to exhibit similar behaviors should be reviewed and, if deemed safe, added to an exception list to reduce noise.\n\n### Response and remediation\n\n- Isolate the affected systems immediately to prevent the spread of ransomware to other networked devices. Disconnect them from the network and any shared storage.\n- Identify and terminate any malicious processes associated with the ransomware event using endpoint detection and response tools.\n- Restore encrypted files from the most recent clean backup. Ensure backups are scanned for malware before restoration to avoid reinfection.\n- Conduct a thorough forensic analysis to determine the initial point of entry and the scope of the compromise. This will help in understanding how the ransomware was deployed.\n- Apply security patches to address any vulnerabilities exploited by the ransomware. Ensure all systems are updated to prevent similar attacks.\n- Enhance monitoring and detection capabilities by configuring alerts for similar event patterns and behaviors identified in the query fields.\n- Report the incident to relevant authorities and stakeholders as per organizational policy and legal requirements, ensuring compliance with any regulatory obligations.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"8cb4f625-7743-4dfb-ae1b-ad92be9df7bd","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:ransomware_event or endgame.event_subtype_full:ransomware_event)\n","actions":[]}
{"id":"14828925-1104-47c3-8325-f7cbeaf81de6","updated_at":"2025-06-15T07:42:32.535Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.208Z","created_by":"elastic","name":"Process Injection - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Use Case: Threat Detection","Tactic: Privilege Escalation","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected Process Injection. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Process Injection - Detected - Elastic Endgame\n\nElastic Endgame is a security solution that monitors and detects suspicious activities like process injection, a technique often used by adversaries to execute malicious code within the address space of another process, thereby evading detection. This detection rule identifies such threats by analyzing alerts and specific event actions related to kernel shellcode, indicating potential privilege escalation attempts. By leveraging MITRE ATT&CK frameworks, it effectively flags high-risk activities, aiding analysts in mitigating threats.\n\n### Possible investigation steps\n\n- Review the alert details in the Elastic Endgame console by clicking the Elastic Endgame icon in the event.module column or the link in the rule.reference column to gather more context about the detected process injection.\n- Examine the specific event.action and endgame.event_subtype_full fields to confirm the presence of kernel_shellcode_event, which indicates potential malicious activity.\n- Analyze the process tree and parent-child relationships of the affected process to identify any unusual or unauthorized processes that may have initiated the injection.\n- Check for any recent privilege escalation attempts or suspicious activities associated with the affected process by correlating with other alerts or logs in the system.\n- Investigate the source and destination IP addresses, if available, to determine if there is any external communication that could suggest a command and control connection.\n- Assess the risk and impact of the detected activity by considering the risk score and severity level, and prioritize response actions accordingly.\n- If necessary, isolate the affected system to prevent further malicious activity and begin remediation efforts based on the findings.\n\n### False positive analysis\n\n- Legitimate software updates or patches may trigger process injection alerts. Users can create exceptions for known update processes by identifying their unique process names or hashes.\n- Security tools or monitoring software that use process injection for legitimate purposes might be flagged. Users should whitelist these tools by specifying their process identifiers or paths.\n- Custom scripts or automation tasks that interact with system processes could be misidentified as threats. Users can exclude these scripts by defining their execution context or command-line arguments.\n- Debugging or development activities involving process manipulation might cause false positives. Users should consider excluding these activities during known development periods or within specific environments.\n- Virtualization or sandboxing solutions that mimic process injection techniques for isolation purposes may be detected. Users can create exceptions for these solutions by recognizing their specific signatures or behaviors.\n\n### Response and remediation\n\n- Isolate the affected system immediately to prevent further spread of the malicious code. Disconnect it from the network and any shared resources.\n- Terminate the malicious process identified by the alert to stop the execution of injected code. Use process management tools to safely end the process.\n- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to identify and remove any additional threats or remnants of the attack.\n- Review and analyze system logs and the specific event details from the alert to understand the scope of the intrusion and identify any other potentially compromised systems.\n- Apply security patches and updates to the operating system and all software applications on the affected system to close any vulnerabilities exploited by the attacker.\n- Restore the system from a known good backup taken before the incident occurred, ensuring that the backup is free from any malicious code.\n- Report the incident to the appropriate internal security team or external authorities if required, providing them with detailed information about the attack and the steps taken for remediation.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"80c52164-c82a-402c-9964-852533d58be1","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1055","name":"Process Injection","reference":"https://attack.mitre.org/techniques/T1055/"}]}],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:kernel_shellcode_event or endgame.event_subtype_full:kernel_shellcode_event)\n","actions":[]}
{"id":"2464f7c4-6834-40e0-ad00-21deb331b466","updated_at":"2025-06-15T07:45:07.678Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:41.075Z","created_by":"elastic","name":"Exploit - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Use Case: Threat Detection","Tactic: Execution","Tactic: Privilege Escalation","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected an Exploit. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Exploit - Detected - Elastic Endgame\n\nElastic Endgame is a security solution that monitors and detects exploit attempts within an environment. Adversaries exploit vulnerabilities to execute unauthorized code or escalate privileges. The detection rule identifies alerts from the Endgame module, focusing on exploit-related events. It leverages metadata and event actions to flag high-risk activities, aiding in swift threat detection and response.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of event.kind:alert and event.module:endgame, ensuring the alert is relevant to the Elastic Endgame detection.\n- Examine the event.action and endgame.event_subtype_full fields to determine the specific exploit event type, which can provide insight into the nature of the exploit attempt.\n- Investigate the endgame.metadata.type field to gather additional context about the detection, such as the source and target of the exploit attempt.\n- Check the associated risk score and severity level to prioritize the investigation and response efforts, focusing on high-risk activities.\n- Correlate the alert with other related events in the environment to identify potential patterns or additional indicators of compromise.\n- Consult the MITRE ATT&CK framework for the Execution tactic (TA0002) to understand potential techniques that might have been used and to guide further investigation steps.\n\n### False positive analysis\n\n- Routine software updates or patches may trigger exploit detection alerts. Users can create exceptions for known update processes by identifying their unique metadata or event actions.\n- Legitimate administrative tools that perform actions similar to exploits might be flagged. Users should whitelist these tools by specifying their event.module or event.action attributes.\n- Automated scripts used for system maintenance could mimic exploit behavior. To prevent false positives, users can exclude these scripts by defining their specific endgame.event_subtype_full.\n- Security testing activities, such as penetration tests, may generate alerts. Users can manage these by setting temporary exceptions during the testing period, based on the event.kind or event.module.\n\n### Response and remediation\n\n- Isolate the affected system immediately to prevent further exploitation or lateral movement within the network.\n- Terminate any unauthorized processes identified as part of the exploit event to halt malicious activity.\n- Apply relevant security patches or updates to the affected system to address the exploited vulnerability and prevent recurrence.\n- Conduct a thorough forensic analysis of the affected system to identify any additional indicators of compromise or secondary payloads.\n- Restore the system from a known good backup if necessary, ensuring that the backup is free from any malicious artifacts.\n- Monitor the network for any signs of similar exploit attempts, using enhanced logging and alerting based on the identified threat indicators.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to ensure comprehensive remediation.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"2003cdc8-8d83-4aa5-b132-1f9a8eb48514","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1068","name":"Exploitation for Privilege Escalation","reference":"https://attack.mitre.org/techniques/T1068/"}]}],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:exploit_event or endgame.event_subtype_full:exploit_event)\n","actions":[]}
{"id":"a439e9a3-3b21-4343-b701-094330884341","updated_at":"2025-06-15T08:11:15.180Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:47.165Z","created_by":"elastic","name":"Adversary Behavior - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected an Adversary Behavior. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Adversary Behavior - Detected - Elastic Endgame\n\nElastic Endgame is a security solution designed to detect and prevent adversarial actions by monitoring system behaviors. Adversaries may exploit system vulnerabilities or execute unauthorized actions to compromise environments. This detection rule identifies suspicious behavior by analyzing alerts and specific event actions, flagging potential threats for further investigation. The rule's medium severity and risk score highlight its importance in maintaining security posture.\n\n### Possible investigation steps\n\n- Review the alert details in the Elastic Endgame console by clicking the Elastic Endgame icon in the event.module column or the link in the rule.reference column to gather more context about the detected behavior.\n- Analyze the event.action and endgame.event_subtype_full fields to understand the specific behavior protection event that triggered the alert.\n- Correlate the alert with other recent alerts or logs from the same host or user to identify any patterns or additional suspicious activities.\n- Investigate the affected system for any signs of compromise or unauthorized changes, focusing on the timeframe around the alert.\n- Check for any known vulnerabilities or misconfigurations in the affected system that could have been exploited by the adversary.\n- Consult with the IT or security team to determine if any recent changes or updates could have triggered the alert as a false positive.\n\n### False positive analysis\n\n- Routine software updates or installations may trigger alerts due to behavior resembling adversarial actions. Users can create exceptions for known update processes to reduce false positives.\n- Legitimate administrative tasks, such as system configuration changes, might be flagged. Identifying and excluding these tasks from monitoring can help minimize unnecessary alerts.\n- Security tools or scripts that perform regular scans or maintenance can mimic adversary behavior. Whitelisting these tools in the detection rule settings can prevent them from being flagged.\n- Automated backup processes that access multiple files or systems simultaneously may be misinterpreted as suspicious. Users should ensure these processes are recognized and excluded from triggering alerts.\n- Custom applications with unique behaviors might be incorrectly identified as threats. Users should document and exclude these behaviors if they are verified as non-threatening.\n\n### Response and remediation\n\n- Isolate the affected system immediately to prevent further unauthorized actions or potential lateral movement by the adversary.\n- Review the specific event.action and endgame.event_subtype_full fields to understand the nature of the detected behavior and identify any compromised accounts or processes.\n- Terminate any unauthorized processes or sessions identified during the investigation to halt adversary activities.\n- Apply security patches or updates to address any exploited vulnerabilities that may have been used by the adversary.\n- Conduct a thorough scan of the affected system and network to identify and remove any malicious artifacts or backdoors left by the adversary.\n- Restore affected systems from a known good backup if necessary, ensuring that the backup is free from compromise.\n- Escalate the incident to the security operations center (SOC) or incident response team for further analysis and to determine if additional systems are affected.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"77a3c3df-8ec4-4da4-b758-878f551dee69","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[],"to":"now","references":[],"version":106,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and (event.action:behavior_protection_event or endgame.event_subtype_full:behavior_protection_event)\n","actions":[]}
{"id":"672640ed-0f42-49ec-90e1-3775f018b21e","updated_at":"2025-06-15T07:48:18.978Z","updated_by":"sangpt","created_at":"2024-10-18T14:18:51.328Z","created_by":"elastic","name":"Credential Manipulation - Detected - Elastic Endgame","tags":["Data Source: Elastic Endgame","Use Case: Threat Detection","Tactic: Privilege Escalation","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":2,"description":"Elastic Endgame detected Credential Manipulation. Click the Elastic Endgame icon in the event.module column or the link in the rule.reference column for additional information.","risk_score":73,"severity":"high","note":"## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Credential Manipulation - Detected - Elastic Endgame\n\nElastic Endgame is a security solution that monitors and detects suspicious activities, such as credential manipulation, which adversaries exploit to escalate privileges by altering access tokens. This detection rule identifies such threats by analyzing alerts for token manipulation events, leveraging its high-risk score and severity to prioritize investigation. The rule aligns with MITRE ATT&CK's framework, focusing on privilege escalation tactics.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of event.kind:alert and event.module:endgame, ensuring the alert is relevant to Elastic Endgame's detection capabilities.\n- Examine the event.action and endgame.event_subtype_full fields for token_manipulation_event to understand the specific type of credential manipulation detected.\n- Check the associated user account and system involved in the alert to determine if the activity aligns with expected behavior or if it indicates potential unauthorized access.\n- Investigate the timeline of events leading up to and following the token manipulation event to identify any additional suspicious activities or patterns.\n- Correlate the alert with other security events or logs to assess if this incident is part of a broader attack or isolated.\n- Evaluate the risk score and severity to prioritize the response and determine if immediate action is required to mitigate potential threats.\n\n### False positive analysis\n\n- Routine administrative tasks involving token manipulation can trigger alerts. Review the context of the event to determine if it aligns with expected administrative behavior.\n- Automated scripts or software updates that require token changes might be flagged. Identify and whitelist these processes if they are verified as safe and necessary for operations.\n- Security tools or monitoring solutions that interact with access tokens for legitimate purposes may cause false positives. Ensure these tools are recognized and excluded from triggering alerts.\n- User behavior analytics might misinterpret legitimate user actions as suspicious. Regularly update user profiles and behavior baselines to minimize these occurrences.\n- Scheduled maintenance activities that involve access token modifications should be documented and excluded from detection rules during their execution time.\n\n### Response and remediation\n\n- Isolate the affected system immediately to prevent further unauthorized access or lateral movement within the network.\n- Revoke and reset any compromised credentials or access tokens identified in the alert to prevent further misuse.\n- Conduct a thorough review of recent access logs and token usage to identify any unauthorized access or actions taken by the adversary.\n- Apply security patches and updates to the affected system and any related systems to close vulnerabilities that may have been exploited.\n- Implement enhanced monitoring on the affected system and related accounts to detect any further suspicious activity or attempts at credential manipulation.\n- Notify the security team and relevant stakeholders about the incident, providing details of the threat and actions taken, and escalate to higher management if the threat level increases.\n- Review and update access control policies and token management practices to prevent similar incidents in the future, ensuring that least privilege principles are enforced.","license":"Elastic License v2","output_index":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":[],"from":"now-2m","rule_id":"c0be5f31-e180-48ed-aa08-96b36899d48f","max_signals":1000,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1134","name":"Access Token Manipulation","reference":"https://attack.mitre.org/techniques/T1134/"}]}],"to":"now","references":[],"version":105,"exceptions_list":[],"immutable":true,"rule_source":{"type":"external","is_customized":false},"related_integrations":[],"required_fields":[{"name":"endgame.event_subtype_full","type":"unknown","ecs":false},{"name":"endgame.metadata.type","type":"unknown","ecs":false},{"name":"event.action","type":"keyword","ecs":true},{"name":"event.kind","type":"keyword","ecs":true},{"name":"event.module","type":"keyword","ecs":true}],"setup":"## Setup\n\n### Additional notes\n\nFor information on troubleshooting the maximum alerts warning please refer to this [guide](https://www.elastic.co/guide/en/security/current/alerts-ui-monitor.html#troubleshoot-max-alerts).\n","type":"query","language":"kuery","index":["endgame-*"],"query":"event.kind:alert and event.module:endgame and endgame.metadata.type:detection and (event.action:token_manipulation_event or endgame.event_subtype_full:token_manipulation_event)\n","actions":[]}
{"id":"c6b0cfc3-b9be-4804-b846-7ed40a52cc12","updated_at":"2025-06-19T13:19:07.003Z","updated_by":"sangpt","created_at":"2025-06-19T08:50:17.429Z","created_by":"sangpt","name":"Potential Internal Linux SSH Brute Force Detected (Fixed)","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Credential Access","Resources: Investigation Guide"],"interval":"1m","enabled":true,"revision":9,"description":"Identifies multiple internal consecutive login failures targeting a user account from the same source address within a short time interval. Adversaries will often brute force login attempts across multiple users with a common or known password, in an attempt to gain access to these accounts.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Potential Internal Linux SSH Brute Force Detected\n\nThe rule identifies consecutive internal SSH login failures targeting a user account from the same source IP address to the same target host indicating brute force login attempts.\n\n#### Possible investigation steps\n\n- Investigate the login failure user name(s).\n- Investigate the source IP address of the failed ssh login attempt(s).\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Identify the source and the target computer and their roles in the IT environment.\n\n### False positive analysis\n\n- Authentication misconfiguration or obsolete credentials.\n- Service account password expired.\n- Infrastructure or availability issue.\n\n### Related Rules\n\n- Potential External Linux SSH Brute Force Detected - fa210b61-b627-4e5e-86f4-17e8270656ab\n- Potential SSH Password Guessing - 8cb84371-d053-4f4f-bce0-c74990e28f28\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","meta":{"kibana_siem_app_url":""},"author":["Elastic"],"false_positives":[],"from":"now-3m","rule_id":"0c17cce1-205d-4006-a94a-17fcbd77f951","max_signals":2,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1110","name":"Brute Force","reference":"https://attack.mitre.org/techniques/T1110/","subtechnique":[{"id":"T1110.001","name":"Password Guessing","reference":"https://attack.mitre.org/techniques/T1110/001/"},{"id":"T1110.003","name":"Password Spraying","reference":"https://attack.mitre.org/techniques/T1110/003/"}]}]}],"to":"now","references":[],"version":14,"exceptions_list":[],"immutable":false,"rule_source":{"type":"internal"},"related_integrations":[{"package":"system","version":"^1.62.1"}],"required_fields":[{"name":"host.id.keyword","type":"keyword","ecs":false},{"name":"source.ip.keyword","type":"keyword","ecs":false},{"name":"user.name.keyword","type":"keyword","ecs":false},{"name":"host.os.type.keyword","type":"keyword","ecs":false},{"name":"event.action.keyword","type":"keyword","ecs":false},{"name":"event.outcome.keyword","type":"keyword","ecs":false}],"setup":"## Setup\n\nThis rule requires data coming in from Filebeat.\n\n### Filebeat Setup\nFilebeat is a lightweight shipper for forwarding and centralizing log data. Installed as an agent on your servers, Filebeat monitors the log files or locations that you specify, collects log events, and forwards them either to Elasticsearch or Logstash for indexing.\n\n#### The following steps should be executed in order to add the Filebeat on a Linux System:\n- Elastic provides repositories available for APT and YUM-based distributions. Note that we provide binary packages, but no source packages.\n- To install the APT and YUM repositories follow the setup instructions in this [helper guide](https://www.elastic.co/guide/en/beats/filebeat/current/setup-repositories.html).\n- To run Filebeat on Docker follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html).\n- To run Filebeat on Kubernetes follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/filebeat/current/running-on-kubernetes.html).\n- For quick start information for Filebeat refer to the [helper guide](https://www.elastic.co/guide/en/beats/filebeat/8.11/filebeat-installation-configuration.html).\n- For complete “Setup and Run Filebeat” information refer to the [helper guide](https://www.elastic.co/guide/en/beats/filebeat/current/setting-up-and-running.html).\n\n#### Rule Specific Setup Note\n- This rule requires the “Filebeat System Module” to be enabled.\n- The system module collects and parses logs created by the system logging service of common Unix/Linux based distributions.\n- To run the system module of Filebeat on Linux follow the setup instructions in the [helper guide](https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-system.html).\n","type":"eql","language":"eql","data_view_id":"4db438c4-eb51-4754-8d27-d1682b1d7f6c","query":"sequence by host.id, source.ip, user.name with maxspan=15s\n  [ authentication where host.os.type == \"linux\" and \n   event.action in (\"ssh_login\", \"user_login\") and event.outcome == \"failure\"] with runs = 10","filters":[],"actions":[]}
{"id":"8daf6072-b6ec-41e6-bafd-f4088cc23a10","updated_at":"2025-06-15T16:02:00.630Z","updated_by":"sangpt","created_at":"2025-06-15T15:55:05.004Z","created_by":"sangpt","name":"Process Termination followed by Deletion [Cloned For Test]","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Defense Evasion","Data Source: Elastic Endgame","Resources: Investigation Guide","Data Source: Elastic Defend"],"interval":"30s","enabled":true,"revision":3,"description":"Identifies a process termination event quickly followed by the deletion of its executable file. Malware tools and other non-native files dropped or created on a system by an adversary may leave traces to indicate to what occurred. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.","risk_score":47,"severity":"medium","note":"## Triage and analysis\n\n### Investigating Process Termination followed by Deletion\n\nThis rule identifies an unsigned process termination event quickly followed by the deletion of its executable file. Attackers can delete programs after their execution in an attempt to cover their tracks in a host.\n\n> **Note**:\n> This investigation guide uses the [Osquery Markdown Plugin](https://www.elastic.co/guide/en/security/current/invest-guide-run-osquery.html) introduced in Elastic Stack version 8.5.0. Older Elastic Stack versions will display unrendered Markdown in this guide.\n\n#### Possible investigation steps\n\n- Investigate the process execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Investigate any abnormal behavior by the subject process such as network connections, registry or file modifications, command line and any spawned child processes.\n- Examine the host for derived artifacts that indicate suspicious activities:\n  - Analyze the process executable using a private sandboxed analysis system.\n  - Observe and collect information about the following activities in both the sandbox and the alert subject host:\n    - Attempts to contact external domains and addresses.\n      - Use the Elastic Defend network events to determine domains and addresses contacted by the subject process by filtering by the process' `process.entity_id`.\n      - Examine the DNS cache for suspicious or anomalous entries.\n        - !{osquery{\"label\":\"Osquery - Retrieve DNS Cache\",\"query\":\"SELECT * FROM dns_cache\"}}\n    - Use the Elastic Defend registry events to examine registry keys accessed, modified, or created by the related processes in the process tree.\n    - Examine the host services for suspicious or anomalous entries.\n      - !{osquery{\"label\":\"Osquery - Retrieve All Services\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Services Running on User Accounts\",\"query\":\"SELECT description, display_name, name, path, pid, service_type, start_type, status, user_account FROM services WHERE\\nNOT (user_account LIKE '%LocalSystem' OR user_account LIKE '%LocalService' OR user_account LIKE '%NetworkService' OR\\nuser_account == null)\\n\"}}\n      - !{osquery{\"label\":\"Osquery - Retrieve Service Unsigned Executables with Virustotal Link\",\"query\":\"SELECT concat('https://www.virustotal.com/gui/file/', sha1) AS VtLink, name, description, start_type, status, pid,\\nservices.path FROM services JOIN authenticode ON services.path = authenticode.path OR services.module_path =\\nauthenticode.path JOIN hash ON services.path = hash.path WHERE authenticode.result != 'trusted'\\n\"}}\n  - Retrieve the files' SHA-256 hash values using the PowerShell `Get-FileHash` cmdlet and search for the existence and reputation of the hashes in resources like VirusTotal, Hybrid-Analysis, CISCO Talos, Any.run, etc.\n- Assess whether this behavior is prevalent in the environment by looking for similar occurrences across hosts.\n\n\n### False positive analysis\n\n- This activity is unlikely to happen legitimately, as programs that exhibit this behavior, such as installers and similar utilities, should be signed. Benign true positives (B-TPs) can be added as exceptions if necessary.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n","license":"Elastic License v2","output_index":"","meta":{"kibana_siem_app_url":""},"author":["Elastic"],"false_positives":[],"from":"now-270s","rule_id":"c8604a2b-a047-427b-9a95-8c1a9e835822","max_signals":100,"risk_score_mapping":[],"severity_mapping":[],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1036","name":"Masquerading","reference":"https://attack.mitre.org/techniques/T1036/","subtechnique":[{"id":"T1036.001","name":"Invalid Code Signature","reference":"https://attack.mitre.org/techniques/T1036/001/"}]},{"id":"T1070","name":"Indicator Removal","reference":"https://attack.mitre.org/techniques/T1070/","subtechnique":[{"id":"T1070.004","name":"File Deletion","reference":"https://attack.mitre.org/techniques/T1070/004/"}]}]}],"to":"now","references":[],"version":113,"exceptions_list":[],"immutable":false,"rule_source":{"type":"internal"},"related_integrations":[{"package":"endpoint","version":"^8.2.0"}],"required_fields":[{"name":"event.type","type":"keyword","ecs":true},{"name":"file.extension","type":"keyword","ecs":true},{"name":"file.path","type":"keyword","ecs":true},{"name":"host.id","type":"keyword","ecs":true},{"name":"host.os.type","type":"keyword","ecs":true},{"name":"process.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.code_signature.trusted","type":"boolean","ecs":true},{"name":"process.executable","type":"keyword","ecs":true},{"name":"process.name","type":"keyword","ecs":true},{"name":"process.parent.code_signature.status","type":"keyword","ecs":true},{"name":"process.parent.code_signature.subject_name","type":"keyword","ecs":true},{"name":"process.parent.name","type":"keyword","ecs":true}],"setup":"","type":"eql","language":"eql","index":["logs-endpoint.events.process-*","logs-endpoint.events.file-*"],"query":"sequence by host.id with maxspan=5s\n   [process where host.os.type == \"windows\" and event.type == \"end\" and\n    process.code_signature.trusted != true and\n    not process.executable like\n             (\"C:\\\\Windows\\\\SoftwareDistribution\\\\*.exe\",\n              \"C:\\\\Windows\\\\WinSxS\\\\*.exe\",\n              \"?:\\\\Windows\\\\Postillion\\\\Office\\\\*.exe\") and\n    not (\n      process.name : \"infinst.exe\" and process.parent.name: \"dxsetup.exe\" and\n      process.parent.code_signature.subject_name == \"NVIDIA Corporation\" and\n      process.parent.code_signature.status == \"trusted\"\n    )\n   ] by process.executable\n   [file where host.os.type == \"windows\" and event.type == \"deletion\" and file.extension in~ (\"exe\", \"scr\", \"com\") and\n    not process.executable like\n             (\"?:\\\\Program Files\\\\*.exe\",\n              \"?:\\\\Program Files (x86)\\\\*.exe\",\n              \"?:\\\\Windows\\\\System32\\\\svchost.exe\",\n              \"?:\\\\Windows\\\\System32\\\\drvinst.exe\",\n              \"?:\\\\Windows\\\\Postillion\\\\Office\\\\*.exe\") and\n    not file.path like (\n          \"?:\\\\Program Files\\\\*.exe\",\n          \"?:\\\\Program Files (x86)\\\\*.exe\",\n          \"?:\\\\Windows\\\\Temp\\\\*\\\\DismHost.exe\",\n          \"?:\\\\$WINDOWS.~BT\\\\Work\\\\*\\\\DismHost.exe\",\n          \"?:\\\\$WinREAgent\\\\Scratch\\\\*\\\\DismHost.exe\",\n          \"?:\\\\Windows\\\\tenable_mw_scan_*.exe\",\n          \"?:\\\\Users\\\\*\\\\AppData\\\\Local\\\\Temp\\\\LogiUI\\\\Pak\\\\uninstall.exe\",\n          \"?:\\\\ProgramData\\\\chocolatey\\\\*.exe\"\n    ) and\n    not (process.name : \"OktaVerifySetup-*.exe\" and process.code_signature.subject_name == \"Okta, Inc.\") and\n    not (\n      process.executable : \"?:\\\\Windows\\\\SysWOW64\\\\config\\\\systemprofile\\\\Citrix\\\\UpdaterBinaries\\\\CitrixReceiver\\\\*\" and\n      process.code_signature.subject_name == \"Citrix Systems, Inc.\" and\n      file.path : \"?:\\\\Windows\\\\SysWOW64\\\\config\\\\systemprofile\\\\Citrix\\\\UpdaterBinaries\\\\CitrixReceiver\\\\*\\\\bootstrapperhelper.exe\"\n    )\n   ] by file.path\n","filters":[],"actions":[]}
{"exported_count":188,"exported_rules_count":188,"missing_rules":[],"missing_rules_count":0,"exported_exception_list_count":0,"exported_exception_list_item_count":0,"missing_exception_list_item_count":0,"missing_exception_list_items":[],"missing_exception_lists":[],"missing_exception_lists_count":0,"exported_action_connector_count":0,"missing_action_connection_count":0,"missing_action_connections":[],"excluded_action_connection_count":0,"excluded_action_connections":[]}
